INSTALL
-------

You will need glib/gtk-1.2.10 (package names like glib and glibdev or 
glib-devel, gtk and gtkdev or gtk-devel) and libexpat (package name should be 
expat) to compile aMule.  Also wxWidgets-2.4.0 or greater, linked against 
glib/gtk-1.2.10 is needed (package names wxGTK and wxGTK-devel).

You will need wxbase-2.4.0 packages or greater,  too, if you want to use amulecmd
(the TextClient). you can link it to wxgtk too, but it won't run on non-graphical consoles,
thus removing all the fun ;)

I have used GCC 2.95.2, 3.2, and 3.3 to compile aMule, older GCC's probably 
can't handle Microsoft C++ well enough.

HOW TO COMPILE wxWIDGETS
------------------------
Only GTK1 is supported. Don't try GTK2 anymore. wxWidgets isn't ready for it.

For GTK1:
./configure  --prefix=/usr --disable-gtk2 --enable-timedate --enable-gui 
--enable-protocol --enable-http --enable-ftp --enable-resources 
--enable-prologio --disable-debug --enable-final --enable-timer --with-gtk 
--disable-profile

After wxWidgets has compiled and you have installed it, you can compile aMule.
do "./configure && make" as usual.  If for some reason, wx-config cannot be 
found, use ./configure --with-wx-config=/path/wx-config.  Sometimes it will be
named wxgtk-2.4-config.

To install it as root type "make install". (You don't have to install if you 
don't like to. It will run fine from the source directory too)

Note: If you are using CVS version, you will have to run ./autogen.sh to 
generate configure script.  Automake > 1.5, Autoconf >= 2.57 and Gettext are 
required and the only versions we will support.

And if you want to remote-administer it, you should definitely try VNC (or 
TightVNC). You probably won't get disappointed :)
http://www.realvnc.org/     http://www.tightvnc.org/

If you change the chart colors and want to select a custom color.. be sure to 
press "Add to custom color"-button and select the color from there. Otherwise 
color will not change :). 

ADVANCED OPTIONS
----------------
There are new configure options:
	--enable-optimise
	--enable-profile
	--enable-debug          
	--disable-systray       Disable SysTray compilation
	--enable-safetray       Enable SysTray in safe mode only
	--disable-gtk           Disable pure GTK code in amule
	--enable-memdbg         Disable progress bar drawing
	--disable-amulecmd    Disable amulecmd build
	

With --enable-optimise, -O flag will be added to the compilation options. If not 
given, no optimization will occur. It is currently preferable not to optimise, 
because if aMule crashes, the optimised code will not produce usable stack 
trace.  -O2 is reported to work fine, -O3 will totally crash on start up, don't 
waste your time as of now.

With --enable-profile, -pg flag will be added to the compilation options. aMule 
will then record profiling data in gmon.out, from which one can see where aMule 
spends its time. You probably do not want to turn this on, unless you want to 
help the devs figure out where your CPU time is going :P

With --disable-systray, you will have no systray. Usefull for systems where systray does not compile.

With --enable-safetray, you will enable SysTray in safe mode only

With --enable-memdbg, you will disable progress bar drawing. That saves cpu, but look less nice ;)

With --disable-gtk, well... go figure yourself :P

With --disable-amulecmd, amulecmd will not be build at all. 
