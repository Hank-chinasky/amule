//------------------------------------------------------------------------------
// Source code generated by wxDesigner from file: muuli.wdr
// Do not modify this file, all changes will be lost!
//------------------------------------------------------------------------------

#ifdef __GNUG__
    #pragma implementation "muuli_wdr.h"
#endif

// For compilers that support precompilation
#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

// Include private header
#include "muuli_wdr.h"

#include <wx/intl.h>

// Custom source
#include "types.h"
#include "amule.h"
#include "ServerListCtrl.h"
#include "SearchListCtrl.h"
#include "DownloadListCtrl.h"
#include "UploadListCtrl.h"
#include "QueueListCtrl.h"
#include "SharedFilesCtrl.h"
#include "OScopeCtrl.h"
#include "ColorFrameCtrl.h"
#include "FriendListCtrl.h"
#include "FileDetailListCtrl.h"
#include "animate.h"
#include "MuleNotebook.h"
#include "ChatSelector.h"
#include "DirectoryTreeCtrl.h"	// Needed for CDirectoryTreeCtrl
#include "treebasc.h"		// Needed for wxTR_CHECKBOX


// Implement window functions

wxSizer *desktopDlg( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item1 = new wxStaticText( parent, ID_TEXT, 
        _("For system tray integration to work,\n"
          "you must specify which desktop you are using.\n"
          "You can change this later from preferences."),
        wxDefaultPosition, wxDefaultSize, 0 );
    item0->Add( item1, 0, wxALIGN_CENTER|wxALL, 5 );

    wxString strs2[] = 
    {
        _("Gnome 2.x (or other XEMBED compatible)"), 
        _("KDE 3.x"), 
        _("KDE 2.x / Gnome 1.2 "), 
        _("No systray integration, please")
    };
    wxRadioBox *item2 = new wxRadioBox( parent, ID_SYSTRAYSELECT, _("Desktop"), wxDefaultPosition, wxDefaultSize, 4, strs2, 1, wxRA_SPECIFY_COLS );
    item0->Add( item2, 0, wxALIGN_CENTER|wxALL, 5 );

    wxStaticBox *item4 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item3 = new wxStaticBoxSizer( item4, wxVERTICAL );

    wxButton *item5 = new wxButton( parent, ID_OK, _("OK"), wxDefaultPosition, wxDefaultSize, 0 );
    item5->SetDefault();
    item3->Add( item5, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item3, 0, wxALIGN_CENTER|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *s_dlgcnt;
wxSizer *buttonToolbar;
wxSizer *contentSizer;
wxSizer *s_fed2klh;
wxSizer *muleDlg( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );
    s_dlgcnt = item0;

    wxBoxSizer *item1 = new wxBoxSizer( wxHORIZONTAL );
    buttonToolbar = item1;

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item2 = new wxBoxSizer( wxVERTICAL );
    contentSizer = item2;

    item0->Add( item2, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticBox *item4 = new wxStaticBox( parent, -1, _("Fast ED2K Links Handler (Direct Download)") );
    wxStaticBoxSizer *item3 = new wxStaticBoxSizer( item4, wxVERTICAL );
    s_fed2klh = item3;

    wxBoxSizer *item5 = new wxBoxSizer( wxHORIZONTAL );

    wxTextCtrl *item6 = new wxTextCtrl( parent, ID_TEXTCTRL, wxT(""), wxDefaultPosition, wxSize(-1,20), wxTE_MULTILINE|wxTE_PROCESS_ENTER );
    item6->SetName( "FastEd2kLinks" );
    item5->Add( item6, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxALL, 5 );

    wxButton *item7 = new wxButton( parent, ID_BUTTON_FAST, _("Commit"), wxDefaultPosition, wxDefaultSize, 0 );
    item5->Add( item7, 0, wxALIGN_CENTER|wxALL, 5 );

    item3->Add( item5, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item3, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxBOTTOM, 5 );

    wxBoxSizer *item8 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item9 = new wxStaticText( parent, ID_TEXT, _("Loading ..."), wxDefaultPosition, wxDefaultSize, wxST_NO_AUTORESIZE );
    item9->SetName( "infoLabel" );
    item8->Add( item9, 1, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT, 5 );

    wxStaticLine *item10 = new wxStaticLine( parent, ID_LINE, wxDefaultPosition, wxSize(-1,20), wxLI_VERTICAL );
    item8->Add( item10, 0, wxALIGN_CENTER, 5 );

    wxStaticBitmap *item11 = new wxStaticBitmap( parent, ID_STATICBITMAP, amuleDlgImages( 4 ), wxDefaultPosition, wxDefaultSize );
    item11->SetToolTip( _("Number of users on the server you are connected to ...") );
    item8->Add( item11, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item12 = new wxStaticText( parent, ID_TEXT, _("Users: 0"), wxDefaultPosition, wxDefaultSize, 0 );
    item12->SetName( "userLabel" );
    item8->Add( item12, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT|wxRIGHT, 5 );

    wxStaticLine *item13 = new wxStaticLine( parent, ID_LINE, wxDefaultPosition, wxSize(-1,20), wxLI_VERTICAL );
    item8->Add( item13, 0, wxALIGN_CENTER|wxLEFT, 5 );

    wxStaticBitmap *item14 = new wxStaticBitmap( parent, ID_STATICBITMAP, amuleDlgImages( 5 ), wxDefaultPosition, wxDefaultSize );
    item14->SetName( "transferImg" );
    item8->Add( item14, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item15 = new wxStaticText( parent, ID_TEXT, _("Up: 0.0 | Down: 0.0"), wxDefaultPosition, wxDefaultSize, 0 );
    item15->SetName( "speedLabel" );
    item8->Add( item15, 0, wxADJUST_MINSIZE|wxALIGN_CENTER, 5 );

    wxStaticLine *item16 = new wxStaticLine( parent, ID_LINE, wxDefaultPosition, wxSize(-1,20), wxLI_VERTICAL );
    item8->Add( item16, 0, wxALIGN_CENTER|wxLEFT, 5 );

    wxStaticBitmap *item17 = new wxStaticBitmap( parent, ID_STATICBITMAP, amuleDlgImages( 13 ), wxDefaultPosition, wxDefaultSize );
    item17->SetName( "connImage" );
    item8->Add( item17, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item18 = new wxStaticText( parent, ID_TEXT, _("Not Connected ..."), wxDefaultPosition, wxDefaultSize, 0 );
    item18->SetName( "connLabel" );
    item8->Add( item18, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxRIGHT, 5 );

    item0->Add( item8, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *serverListDlg( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxSplitterWindow *item1 = new wxSplitterWindow( parent, ID_SRV_SPLITTER, wxDefaultPosition, wxSize(200,160), wxSP_LIVE_UPDATE );
    item1->SetMinimumPaneSize( 120 );
    wxPanel *item2 = new wxPanel( item1, -1 );
    serverListDlgUp( item2, FALSE, TRUE );
    wxPanel *item3 = new wxPanel( item1, -1 );
    serverListDlgDown( item3, FALSE, TRUE );
    item1->SplitHorizontally( item2, item3 );
    item1->SetName( "SrvSplitterWnd" );
    item0->Add( item1, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *IDC_SEARCH_FRM;
wxSizer *s_srcopts;
wxSizer *s_srced2klh;
wxSizer *searchDlg( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxFlexGridSizer *item1 = new wxFlexGridSizer( 1, 0, 0 );
    item1->AddGrowableCol( 0 );
    item1->AddGrowableRow( 1 );

    wxBoxSizer *item2 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBox *item4 = new wxStaticBox( parent, -1, _("Search") );
    wxStaticBoxSizer *item3 = new wxStaticBoxSizer( item4, wxVERTICAL );
    IDC_SEARCH_FRM = item3;

    wxStaticBox *item6 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item5 = new wxStaticBoxSizer( item6, wxHORIZONTAL );
    s_srcopts = item5;

    wxBoxSizer *item7 = new wxBoxSizer( wxVERTICAL );

    wxFlexGridSizer *item8 = new wxFlexGridSizer( 2, 0, 0 );
    item8->AddGrowableCol( 0 );

    wxStaticText *item9 = new wxStaticText( parent, IDC_MSTATIC3, _("Name"), wxDefaultPosition, wxDefaultSize, 0 );
    item8->Add( item9, 0, wxADJUST_MINSIZE, 5 );

    item8->Add( 20, 20, 0, wxALIGN_CENTER, 5 );

    wxTextCtrl *item10 = new wxTextCtrl( parent, IDC_SEARCHNAME, wxT(""), wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER );
    item8->Add( item10, 1, wxGROW, 5 );

    wxButton *item11 = new wxButton( parent, IDC_SEARCH_RESET, _("Reset"), wxDefaultPosition, wxDefaultSize, 0 );
    item11->Enable( FALSE );
    item8->Add( item11, 0, wxADJUST_MINSIZE|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    item7->Add( item8, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxFlexGridSizer *item12 = new wxFlexGridSizer( 2, 0, 0 );

    wxStaticText *item13 = new wxStaticText( parent, IDC_MSTATIC4, _("Type"), wxDefaultPosition, wxDefaultSize, 0 );
    item12->Add( item13, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item14 = new wxStaticText( parent, IDC_MSTATIC4, _("Category"), wxDefaultPosition, wxDefaultSize, 0 );
    item12->Add( item14, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxString strs15[] = 
    {
        _("Any"), 
        _("Archives"), 
        _("Audio"), 
        _("CD-Images"), 
        _("Pictures"), 
        _("Programs"), 
        _("Videos")
    };
    wxChoice *item15 = new wxChoice( parent, IDC_TypeSearch, wxDefaultPosition, wxSize(100,30), 7, strs15, 0 );
    item15->SetName( "SearchSearchType" );
    item12->Add( item15, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxString *strs16 = (wxString*) NULL;
    wxChoice *item16 = new wxChoice( parent, ID_AUTOCATASSIGN, wxDefaultPosition, wxSize(100,30), 0, strs16, 0 );
    item16->SetToolTip( _("Automatically assign new downloads to selected category") );
    item12->Add( item16, 0, wxALIGN_CENTER_VERTICAL, 5 );

    item7->Add( item12, 1, wxGROW|wxRIGHT, 5 );

    item5->Add( item7, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxRIGHT, 5 );

    wxBoxSizer *item17 = new wxBoxSizer( wxHORIZONTAL );
    s_srced2klh = item17;

    wxTextCtrl *item18 = new wxTextCtrl( parent, ID_ED2KLINKHANDLER, wxT(""), wxDefaultPosition, wxSize(80,40), wxTE_MULTILINE );
    item17->Add( item18, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxButton *item19 = new wxButton( parent, ID_BTN_DDLOAD, _("Commit"), wxDefaultPosition, wxDefaultSize, 0 );
    item17->Add( item19, 0, wxADJUST_MINSIZE|wxGROW, 5 );

    item5->Add( item17, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    wxBoxSizer *item20 = new wxBoxSizer( wxHORIZONTAL );

    wxFlexGridSizer *item21 = new wxFlexGridSizer( 2, 0, 0 );

    wxTextCtrl *item22 = new wxTextCtrl( parent, IDC_EDITSEARCHMIN, wxT(""), wxDefaultPosition, wxSize(80,-1), wxTE_PROCESS_ENTER );
    item21->Add( item22, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxStaticText *item23 = new wxStaticText( parent, IDC_SEARCHMINSIZE, _("Min Size"), wxDefaultPosition, wxDefaultSize, 0 );
    item21->Add( item23, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxTextCtrl *item24 = new wxTextCtrl( parent, IDC_EDITSEARCHMAX, wxT(""), wxDefaultPosition, wxSize(80,-1), wxTE_PROCESS_ENTER );
    item21->Add( item24, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxStaticText *item25 = new wxStaticText( parent, IDC_SEARCHMAXSIZE, _("Max Size"), wxDefaultPosition, wxDefaultSize, 0 );
    item21->Add( item25, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxTextCtrl *item26 = new wxTextCtrl( parent, IDC_EDITSEARCHEXTENSION, wxT(""), wxDefaultPosition, wxSize(80,-1), wxTE_PROCESS_ENTER );
    item21->Add( item26, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxStaticText *item27 = new wxStaticText( parent, IDC_SEARCHEXTENSION, _("Extension"), wxDefaultPosition, wxDefaultSize, 0 );
    item21->Add( item27, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxTextCtrl *item28 = new wxTextCtrl( parent, IDC_EDITSEARCHAVAIBILITY, wxT(""), wxDefaultPosition, wxSize(80,-1), wxTE_PROCESS_ENTER );
    item21->Add( item28, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxStaticText *item29 = new wxStaticText( parent, IDC_SEARCHAVAIL, _("Min Availability"), wxDefaultPosition, wxDefaultSize, 0 );
    item21->Add( item29, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    item20->Add( item21, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 5 );

    item5->Add( item20, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT, 5 );

    item3->Add( item5, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxFlexGridSizer *item30 = new wxFlexGridSizer( 2, 0, 0 );
    item30->AddGrowableCol( 0 );

    wxBoxSizer *item31 = new wxBoxSizer( wxHORIZONTAL );

    wxCheckBox *item32 = new wxCheckBox( parent, IDC_SGLOBAL, _("Search global"), wxDefaultPosition, wxDefaultSize, 0 );
    item32->SetValue( TRUE );
    item32->SetName( "globalSearch" );
    item31->Add( item32, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 0 );

    item30->Add( item31, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item33 = new wxBoxSizer( wxHORIZONTAL );

    wxGridSizer *item34 = new wxGridSizer( 3, 0, 0 );

    wxButton *item35 = new wxButton( parent, IDC_STARTS, _("Start"), wxDefaultPosition, wxDefaultSize, 0 );
    item35->SetName( "StartSearch" );
    item35->Enable( FALSE );
    item34->Add( item35, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxButton *item36 = new wxButton( parent, IDC_CANCELS, _("Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    item36->SetName( "CancelSearch" );
    item36->Enable( FALSE );
    item34->Add( item36, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxButton *item37 = new wxButton( parent, IDC_CLEARALL, _("Clear All"), wxDefaultPosition, wxDefaultSize, 0 );
    item37->Enable( FALSE );
    item34->Add( item37, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item33->Add( item34, 0, wxALIGN_CENTER, 5 );

    item30->Add( item33, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 5 );

    item3->Add( item30, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxTOP, 5 );

    item2->Add( item3, 1, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    item1->Add( item2, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticBox *item39 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item38 = new wxStaticBoxSizer( item39, wxVERTICAL );

    wxWindow *item40 = new CMuleNotebook(parent, ID_NOTEBOOK, wxDefaultPosition,wxDefaultSize,0);
    wxASSERT( item40 );
    item38->Add( item40, 1, wxGROW, 5 );

    wxGauge *item41 = new wxGauge( parent, ID_SEARCHPROGRESS, 100, wxDefaultPosition, wxSize(-1,10), 0 );
    item38->Add( item41, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item42 = new wxBoxSizer( wxHORIZONTAL );

    wxButton *item43 = new wxButton( parent, IDC_SDOWNLOAD, _("Download selected"), wxDefaultPosition, wxDefaultSize, 0 );
    item43->Enable( FALSE );
    item42->Add( item43, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxTOP, 5 );

    item38->Add( item42, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item1->Add( item38, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item1, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 0 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *transferTopPane( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item1 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBitmap *item2 = new wxStaticBitmap( parent, ID_STATICBITMAP, amuleDlgImages( 10 ), wxDefaultPosition, wxDefaultSize );
    item1->Add( item2, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item3 = new wxStaticText( parent, ID_TEXT, _("Downloads"), wxDefaultPosition, wxSize(-1,32), 0 );
    item3->SetName( "downloadsLabel" );
    item1->Add( item3, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT|wxRIGHT, 5 );

    CMuleNotebook *item4 = new CMuleNotebook( parent, ID_CATEGORIES, wxDefaultPosition, wxSize( -1, 32 ), 0 );
    wxASSERT( item4 );
    item1->Add( item4, 1, wxALIGN_CENTER, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    CDownloadListCtrl *item5 = new CDownloadListCtrl( parent, ID_DLOADLIST, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxSUNKEN_BORDER );
    item5->SetName( "downloadList" );
    item0->Add( item5, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *queueSizer;
wxSizer *transferBottomPane( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );
    queueSizer = item0;

    wxBoxSizer *item1 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBitmap *item2 = new wxStaticBitmap( parent, ID_STATICBITMAP, amuleDlgImages( 11 ), wxDefaultPosition, wxDefaultSize );
    item1->Add( item2, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item3 = new wxStaticText( parent, ID_TEXT, _("Uploads"), wxDefaultPosition, wxSize(150,-1), 0 );
    item3->SetName( "uploadTitle" );
    item1->Add( item3, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT|wxRIGHT, 5 );

    item0->Add( item1, 0, wxALIGN_CENTER_VERTICAL, 5 );

    CQueueListCtrl *item4 = new CQueueListCtrl( parent, ID_QUEUELIST, wxDefaultPosition, wxSize(160,120), wxLC_REPORT|wxLC_SINGLE_SEL|wxSUNKEN_BORDER );
    item4->SetName( "uploadQueue" );
    item0->Add( item4, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    CUploadListCtrl *item5 = new CUploadListCtrl( parent, ID_UPLOADLIST, wxDefaultPosition, wxSize(160,120), wxLC_REPORT|wxLC_SINGLE_SEL|wxSUNKEN_BORDER );
    item5->SetName( "uploadList" );
    item0->Add( item5, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *messagePage( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxStaticBox *item1 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item0 = new wxStaticBoxSizer( item1, wxVERTICAL );

    wxBoxSizer *item2 = new wxBoxSizer( wxHORIZONTAL );

    wxBoxSizer *item3 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item4 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBitmap *item5 = new wxStaticBitmap( parent, ID_STATICBITMAP, amuleDlgImages( 14 ), wxDefaultPosition, wxDefaultSize );
    item4->Add( item5, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item6 = new wxStaticText( parent, ID_TEXT, _("Friends"), wxDefaultPosition, wxSize(-1,32), 0 );
    item4->Add( item6, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT, 5 );

    item3->Add( item4, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    CFriendListCtrl *item7 = new CFriendListCtrl( parent, ID_FRIENDLIST, wxDefaultPosition, wxSize(160,120), wxLC_REPORT|wxSUNKEN_BORDER );
    item3->Add( item7, 1, wxGROW|wxALIGN_CENTER_VERTICAL|wxRIGHT|wxBOTTOM, 5 );

    item2->Add( item3, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    wxBoxSizer *item8 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item9 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBitmap *item10 = new wxStaticBitmap( parent, ID_STATICBITMAP, amuleDlgImages( 15 ), wxDefaultPosition, wxDefaultSize );
    item9->Add( item10, 0, wxALIGN_CENTER_HORIZONTAL, 5 );

    wxStaticText *item11 = new wxStaticText( parent, ID_TEXT, _("Messages"), wxDefaultPosition, wxSize(-1,32), 0 );
    item9->Add( item11, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT|wxRIGHT, 5 );

    CChatSelector *item12 = new CChatSelector(parent, IDC_CHATSELECTOR,wxDefaultPosition,wxSize(200,32),0L);
    wxASSERT( item12 );
    item9->Add( item12, 1, wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    item8->Add( item9, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxHtmlWindow *item13 = new wxHtmlWindow(parent,ID_HTMLWIN,wxDefaultPosition,wxSize(80,40),wxHW_SCROLLBAR_AUTO);
    wxASSERT( item13 );
    item8->Add( item13, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item14 = new wxBoxSizer( wxHORIZONTAL );

    wxTextCtrl *item15 = new wxTextCtrl( parent, IDC_CMESSAGE, wxT(""), wxDefaultPosition, wxSize(80,-1), wxTE_PROCESS_ENTER );
    item14->Add( item15, 1, wxALIGN_CENTER, 5 );

    wxButton *item16 = new wxButton( parent, IDC_CSEND, _("Send"), wxDefaultPosition, wxDefaultSize, 0 );
    item14->Add( item16, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT, 5 );

    wxButton *item17 = new wxButton( parent, IDC_CCLOSE, _("Close"), wxDefaultPosition, wxDefaultSize, 0 );
    item14->Add( item17, 0, wxALIGN_CENTER, 5 );

    item8->Add( item14, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxTOP|wxBOTTOM, 5 );

    item2->Add( item8, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    item0->Add( item2, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *IDC_FD_X0;
wxSizer *IDC_MINF_0;
wxSizer *IDC_FD_X6;
wxSizer *IDC_FD_ICH;
wxSizer *IDC_FD_SN;
wxSizer *fileDetails( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, _("General") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );
    IDC_FD_X0 = item1;

    wxFlexGridSizer *item3 = new wxFlexGridSizer( 2, 0, 0 );

    wxStaticText *item4 = new wxStaticText( parent, IDC_FD_X1, _("Full Name :"), wxDefaultPosition, wxDefaultSize, 0 );
    item3->Add( item4, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item5 = new wxStaticText( parent, IDC_FNAME, _("N/A"), wxDefaultPosition, wxSize(350,-1), 0 );
    item5->SetForegroundColour( *wxBLUE );
    item3->Add( item5, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item6 = new wxStaticText( parent, IDC_FD_X2, _("met-File :"), wxDefaultPosition, wxDefaultSize, 0 );
    item3->Add( item6, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item7 = new wxStaticText( parent, IDC_METFILE, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item7->SetForegroundColour( *wxBLUE );
    item3->Add( item7, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item8 = new wxStaticText( parent, IDC_FD_X3, _("Hash :"), wxDefaultPosition, wxDefaultSize, 0 );
    item3->Add( item8, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item9 = new wxStaticText( parent, IDC_FHASH, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->SetForegroundColour( *wxBLUE );
    item3->Add( item9, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    item1->Add( item3, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxFlexGridSizer *item10 = new wxFlexGridSizer( 4, 0, 0 );

    wxStaticText *item11 = new wxStaticText( parent, IDC_FD_X4, _("Filesize :"), wxDefaultPosition, wxDefaultSize, 0 );
    item10->Add( item11, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item12 = new wxStaticText( parent, IDC_FSIZE, _("N/A"), wxDefaultPosition, wxSize(100,-1), 0 );
    item12->SetForegroundColour( *wxBLUE );
    item10->Add( item12, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item13 = new wxStaticText( parent, IDC_FD_X5, _("Partfilestatus :"), wxDefaultPosition, wxDefaultSize, 0 );
    item10->Add( item13, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item14 = new wxStaticText( parent, IDC_PFSTATUS, _("N/A"), wxDefaultPosition, wxSize(80,-1), 0 );
    item14->SetForegroundColour( *wxBLUE );
    item10->Add( item14, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxStaticText *item15 = new wxStaticText( parent, IDC_FD_X15, _("Last seen complete :"), wxDefaultPosition, wxDefaultSize, 0 );
    item10->Add( item15, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item16 = new wxStaticText( parent, IDC_LASTSEENCOMPL, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item16->SetForegroundColour( *wxBLUE );
    item10->Add( item16, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    item1->Add( item10, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticBox *item18 = new wxStaticBox( parent, -1, _("Media Info") );
    wxStaticBoxSizer *item17 = new wxStaticBoxSizer( item18, wxVERTICAL );
    IDC_MINF_0 = item17;

    wxFlexGridSizer *item19 = new wxFlexGridSizer( 6, 0, 0 );

    wxStaticText *item20 = new wxStaticText( parent, IDC_MINF_1, _("Codec:"), wxDefaultPosition, wxDefaultSize, 0 );
    item19->Add( item20, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxStaticText *item21 = new wxStaticText( parent, IDC_MINFCODEC, _("N/A"), wxDefaultPosition, wxSize(100,-1), 0 );
    item21->SetForegroundColour( *wxBLUE );
    item19->Add( item21, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item22 = new wxStaticText( parent, IDC_MINF_2, _("Bitrate:"), wxDefaultPosition, wxDefaultSize, 0 );
    item19->Add( item22, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item23 = new wxStaticText( parent, IDC_MINFBIT, _("N/A"), wxDefaultPosition, wxSize(50,-1), 0 );
    item23->SetForegroundColour( *wxBLUE );
    item19->Add( item23, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item24 = new wxStaticText( parent, IDC_MINF_3, _("Length:"), wxDefaultPosition, wxDefaultSize, 0 );
    item19->Add( item24, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item25 = new wxStaticText( parent, IDC_MINFLEN, _("N/A"), wxDefaultPosition, wxSize(100,-1), 0 );
    item25->SetForegroundColour( *wxBLUE );
    item19->Add( item25, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    item17->Add( item19, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item17, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxBOTTOM, 5 );

    wxStaticBox *item27 = new wxStaticBox( parent, -1, _("Transfer") );
    wxStaticBoxSizer *item26 = new wxStaticBoxSizer( item27, wxHORIZONTAL );
    IDC_FD_X6 = item26;

    wxFlexGridSizer *item28 = new wxFlexGridSizer( 3, 0, 0 );

    wxStaticText *item29 = new wxStaticText( parent, IDC_FD_X7, _("Found Sources :"), wxDefaultPosition, wxSize(88,-1), 0 );
    item28->Add( item29, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item30 = new wxStaticText( parent, IDC_SOURCECOUNT, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item30->SetForegroundColour( *wxBLUE );
    item28->Add( item30, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item31 = new wxStaticText( parent, IDC_FD_X10, _("Transferring Sources :"), wxDefaultPosition, wxSize(88,-1), 0 );
    item28->Add( item31, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    wxStaticText *item32 = new wxStaticText( parent, IDC_FD_X9, _("Filepart-Count :"), wxDefaultPosition, wxSize(88,-1), 0 );
    item28->Add( item32, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item33 = new wxStaticText( parent, IDC_PARTCOUNT, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item33->SetForegroundColour( *wxBLUE );
    item28->Add( item33, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item34 = new wxStaticText( parent, IDC_FD_X11, _("Available :"), wxDefaultPosition, wxSize(88,-1), 0 );
    item28->Add( item34, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    wxStaticText *item35 = new wxStaticText( parent, IDC_FD_X13, _("Datarate :"), wxDefaultPosition, wxDefaultSize, 0 );
    item28->Add( item35, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item36 = new wxStaticText( parent, IDC_DATARATE, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item36->SetForegroundColour( *wxBLUE );
    item28->Add( item36, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item37 = new wxStaticText( parent, ID_TEXT, wxT(""), wxDefaultPosition, wxDefaultSize, 0 );
    item28->Add( item37, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item38 = new wxStaticText( parent, IDC_FD_X14, _("Transferred :"), wxDefaultPosition, wxSize(88,-1), 0 );
    item28->Add( item38, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item39 = new wxStaticText( parent, IDC_TRANSFERED, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item39->SetForegroundColour( *wxBLUE );
    item28->Add( item39, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item40 = new wxStaticText( parent, IDC_FD_X12, _("Completed Size :"), wxDefaultPosition, wxDefaultSize, 0 );
    item28->Add( item40, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    item26->Add( item28, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item41 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item42 = new wxStaticText( parent, IDC_SOURCECOUNT2, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item42->SetForegroundColour( *wxBLUE );
    item41->Add( item42, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item43 = new wxStaticText( parent, IDC_PARTAVAILABLE, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item43->SetForegroundColour( *wxBLUE );
    item41->Add( item43, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item44 = new wxStaticText( parent, ID_TEXT, wxT(""), wxDefaultPosition, wxDefaultSize, 0 );
    item41->Add( item44, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item45 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item46 = new wxStaticText( parent, IDC_COMPLSIZE, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item46->SetForegroundColour( *wxBLUE );
    item45->Add( item46, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    wxStaticText *item47 = new wxStaticText( parent, ID_TEXT, _(" / ("), wxDefaultPosition, wxDefaultSize, 0 );
    item45->Add( item47, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item48 = new wxStaticText( parent, IDC_PROCCOMPL, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item48->SetForegroundColour( *wxBLUE );
    item45->Add( item48, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item49 = new wxStaticText( parent, ID_TEXT, _(")"), wxDefaultPosition, wxDefaultSize, 0 );
    item45->Add( item49, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    item41->Add( item45, 0, wxALIGN_CENTER, 5 );

    item26->Add( item41, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    item0->Add( item26, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxBOTTOM, 5 );

    wxStaticBox *item51 = new wxStaticBox( parent, -1, _("Intelligent Corruption Handling") );
    wxStaticBoxSizer *item50 = new wxStaticBoxSizer( item51, wxVERTICAL );
    IDC_FD_ICH = item50;

    wxFlexGridSizer *item52 = new wxFlexGridSizer( 4, 0, 0 );

    wxStaticText *item53 = new wxStaticText( parent, IDC_FD_LSTATS1, _("Lost to corruption :"), wxDefaultPosition, wxDefaultSize, 0 );
    item52->Add( item53, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item54 = new wxStaticText( parent, IDC_FD_STATS1, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item54->SetForegroundColour( *wxBLUE );
    item52->Add( item54, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item55 = new wxStaticText( parent, IDC_FD_LSTATS2, _("Gained by compression :"), wxDefaultPosition, wxDefaultSize, 0 );
    item52->Add( item55, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    wxStaticText *item56 = new wxStaticText( parent, IDC_FD_STATS2, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item56->SetForegroundColour( *wxBLUE );
    item52->Add( item56, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item57 = new wxStaticText( parent, IDC_FD_LSTATS3, _("Packages saved by I.C.H. :"), wxDefaultPosition, wxDefaultSize, 0 );
    item52->Add( item57, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item58 = new wxStaticText( parent, IDC_FD_STATS3, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item58->SetForegroundColour( *wxBLUE );
    item52->Add( item58, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item59 = new wxStaticText( parent, ID_TEXT, wxT(""), wxDefaultPosition, wxDefaultSize, 0 );
    item52->Add( item59, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item60 = new wxStaticText( parent, ID_TEXT, wxT(""), wxDefaultPosition, wxDefaultSize, 0 );
    item52->Add( item60, 0, wxALIGN_CENTER, 5 );

    item50->Add( item52, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item50, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxBOTTOM, 5 );

    wxStaticBox *item62 = new wxStaticBox( parent, -1, _("Source Names") );
    wxStaticBoxSizer *item61 = new wxStaticBoxSizer( item62, wxVERTICAL );
    IDC_FD_SN = item61;

    CFileDetailListCtrl *item63 = new CFileDetailListCtrl( parent, IDC_LISTCTRLFILENAMES, wxDefaultPosition, wxSize(-1,90), wxLC_REPORT|wxSUNKEN_BORDER );
    wxASSERT( item63 );
    item61->Add( item63, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item64 = new wxBoxSizer( wxHORIZONTAL );

    wxButton *item65 = new wxButton( parent, IDC_TAKEOVER, _("Takeover"), wxDefaultPosition, wxDefaultSize, 0 );
    item64->Add( item65, 0, wxALIGN_CENTER, 5 );

    item64->Add( 20, 20, 1, wxALIGN_CENTER|wxALL, 5 );

    wxButton *item66 = new wxButton( parent, IDC_BUTTONSTRIP, _("Cleanup"), wxDefaultPosition, wxDefaultSize, 0 );
    item64->Add( item66, 0, wxALIGN_CENTER, 5 );

    item61->Add( item64, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item67 = new wxBoxSizer( wxHORIZONTAL );

    wxTextCtrl *item68 = new wxTextCtrl( parent, IDC_FILENAME, wxT(""), wxDefaultPosition, wxDefaultSize, 0 );
    item67->Add( item68, 1, wxALIGN_CENTER, 5 );

    wxButton *item69 = new wxButton( parent, IDC_RENAME, _("Rename"), wxDefaultPosition, wxDefaultSize, 0 );
    item67->Add( item69, 0, wxALIGN_CENTER, 5 );

    item61->Add( item67, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item61, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxBOTTOM, 5 );

    wxStaticBox *item71 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item70 = new wxStaticBoxSizer( item71, wxVERTICAL );

    wxGridSizer *item72 = new wxGridSizer( 2, 0, 0 );

    wxButton *item73 = new wxButton( parent, IDC_CMTBT, _("Show all comments"), wxDefaultPosition, wxDefaultSize, 0 );
    item72->Add( item73, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxButton *item74 = new wxButton( parent, ID_CLOSEWNDFD, _("Close"), wxDefaultPosition, wxDefaultSize, 0 );
    item74->SetDefault();
    item72->Add( item74, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item70->Add( item72, 1, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    item0->Add( item70, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxBOTTOM, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *commentDlg( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, _("Comment this file (this text will be show by all users)") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxBoxSizer *item3 = new wxBoxSizer( wxHORIZONTAL );

    wxTextCtrl *item4 = new wxTextCtrl( parent, IDC_CMT_TEXT, wxT(""), wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER );
    item3->Add( item4, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxButton *item5 = new wxButton( parent, IDC_FC_CLEAR, _("Clear"), wxDefaultPosition, wxDefaultSize, 0 );
    item3->Add( item5, 0, wxALIGN_CENTER|wxALL, 5 );

    item1->Add( item3, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item6 = new wxStaticText( parent, ID_TEXT, 
        _("For a film you can say its length, its story, language ...\n"
          "and if it's a fake, you can tell that to other users of aMule."),
        wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item6, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    item0->Add( item1, 1, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxBoxSizer *item7 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBox *item9 = new wxStaticBox( parent, -1, _("File Quality") );
    wxStaticBoxSizer *item8 = new wxStaticBoxSizer( item9, wxVERTICAL );

    wxString strs10[] = 
    {
        _("Not rated"), 
        _("Invalid / Corrupt / Fake"), 
        _("Poor"), 
        _("Good"), 
        _("Fair"), 
        _("Excellent")
    };
    wxChoice *item10 = new wxChoice( parent, IDC_RATELIST, wxDefaultPosition, wxDefaultSize, 6, strs10, 0 );
    item8->Add( item10, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticText *item11 = new wxStaticText( parent, ID_TEXT, _("Choose the file rating or advice users if the file is invalid ..."), wxDefaultPosition, wxDefaultSize, 0 );
    item8->Add( item11, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    item7->Add( item8, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxALL, 5 );

    wxStaticBox *item13 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item12 = new wxStaticBoxSizer( item13, wxHORIZONTAL );

    wxButton *item14 = new wxButton( parent, IDCOK, _("Apply"), wxDefaultPosition, wxDefaultSize, 0 );
    item14->SetDefault();
    item12->Add( item14, 0, wxALIGN_CENTER|wxALL, 5 );

    wxButton *item15 = new wxButton( parent, IDCCANCEL, _("Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    item12->Add( item15, 0, wxALIGN_CENTER|wxALL, 5 );

    item7->Add( item12, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item7, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *commentLstDlg( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxListCtrl *item1 = new wxListCtrl( parent, IDC_LST, wxDefaultPosition, wxSize(600,270), wxLC_REPORT|wxSUNKEN_BORDER );
    item0->Add( item1, 1, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxFlexGridSizer *item2 = new wxFlexGridSizer( 4, 0, 0 );
    item2->AddGrowableCol( 3 );

    wxStaticText *item3 = new wxStaticText( parent, ID_TEXT, _("("), wxDefaultPosition, wxDefaultSize, 0 );
    item2->Add( item3, 0, wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    wxStaticText *item4 = new wxStaticText( parent, IDC_CMSTATUS, _("No comment(s)"), wxDefaultPosition, wxDefaultSize, 0 );
    item4->SetForegroundColour( *wxBLUE );
    item2->Add( item4, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item5 = new wxStaticText( parent, ID_TEXT, _(")"), wxDefaultPosition, wxDefaultSize, 0 );
    item2->Add( item5, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticBox *item7 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item6 = new wxStaticBoxSizer( item7, wxHORIZONTAL );

    wxButton *item8 = new wxButton( parent, IDCREF, _("Refresh"), wxDefaultPosition, wxDefaultSize, 0 );
    item6->Add( item8, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxButton *item9 = new wxButton( parent, IDCOK, _("Close"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->SetDefault();
    item6->Add( item9, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item2->Add( item6, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item2, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxTOP|wxBOTTOM, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *downloadDlg( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxGIFAnimationCtrl *item1 = new wxGIFAnimationCtrl(parent,ID_ANIMATE,wxEmptyString,wxPoint(0,0),wxSize(272,60),wxNO_BORDER);
    wxASSERT( item1 );
    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticText *item2 = new wxStaticText( parent, ID_TEXT, _("Downloading, please wait ..."), wxDefaultPosition, wxDefaultSize, 0 );
    item0->Add( item2, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT|wxRIGHT, 5 );

    wxStaticLine *item3 = new wxStaticLine( parent, ID_LINE, wxDefaultPosition, wxSize(20,-1), wxLI_HORIZONTAL );
    item0->Add( item3, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticBox *item5 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item4 = new wxStaticBoxSizer( item5, wxVERTICAL );

    wxButton *item6 = new wxButton( parent, ID_CANCEL, _("Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    item6->SetDefault();
    item4->Add( item6, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item4, 0, wxALIGN_CENTER|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *addFriendDlg( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, _("Required Information") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxFlexGridSizer *item3 = new wxFlexGridSizer( 2, 0, 0 );

    wxStaticText *item4 = new wxStaticText( parent, ID_TEXT, _("IP Address :"), wxDefaultPosition, wxSize(70,-1), 0 );
    item3->Add( item4, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT|wxBOTTOM, 5 );

    wxTextCtrl *item5 = new wxTextCtrl( parent, ID_IPADDRESS, wxT(""), wxDefaultPosition, wxSize(150,-1), 0 );
    item3->Add( item5, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxBOTTOM, 5 );

    wxStaticText *item6 = new wxStaticText( parent, ID_TEXT, _("Port :"), wxDefaultPosition, wxSize(70,-1), 0 );
    item3->Add( item6, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP, 5 );

    wxTextCtrl *item7 = new wxTextCtrl( parent, ID_IPORT, wxT(""), wxDefaultPosition, wxSize(80,-1), 0 );
    item3->Add( item7, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    item1->Add( item3, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticBox *item9 = new wxStaticBox( parent, -1, _("Additional Information") );
    wxStaticBoxSizer *item8 = new wxStaticBoxSizer( item9, wxVERTICAL );

    wxFlexGridSizer *item10 = new wxFlexGridSizer( 2, 0, 0 );

    wxStaticText *item11 = new wxStaticText( parent, ID_TEXT, _("Username :"), wxDefaultPosition, wxSize(70,-1), 0 );
    item10->Add( item11, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT|wxBOTTOM, 5 );

    wxTextCtrl *item12 = new wxTextCtrl( parent, ID_USERNAME, wxT(""), wxDefaultPosition, wxSize(250,-1), 0 );
    item10->Add( item12, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxBOTTOM, 5 );

    wxStaticText *item13 = new wxStaticText( parent, ID_TEXT, _("Userhash :"), wxDefaultPosition, wxSize(70,-1), 0 );
    item10->Add( item13, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT|wxBOTTOM, 5 );

    wxTextCtrl *item14 = new wxTextCtrl( parent, ID_USERHASH, wxT(""), wxDefaultPosition, wxSize(250,-1), 0 );
    item10->Add( item14, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxBOTTOM, 5 );

    item8->Add( item10, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item8, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticBox *item16 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item15 = new wxStaticBoxSizer( item16, wxHORIZONTAL );

    wxButton *item17 = new wxButton( parent, ID_ADDFRIEND, _("Add"), wxDefaultPosition, wxDefaultSize, 0 );
    item17->SetDefault();
    item15->Add( item17, 0, wxALIGN_CENTER|wxALL, 5 );

    wxButton *item18 = new wxButton( parent, ID_CLOSEDLG, _("Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    item15->Add( item18, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item15, 0, wxALIGN_CENTER|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *sharedfilesDlg( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxStaticBox *item1 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item0 = new wxStaticBoxSizer( item1, wxVERTICAL );

    wxBoxSizer *item2 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBitmap *item3 = new wxStaticBitmap( parent, ID_STATICBITMAP, moreImages( 0 ), wxDefaultPosition, wxDefaultSize );
    item2->Add( item3, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    wxStaticText *item4 = new wxStaticText( parent, ID_TEXT, _("Shared Files"), wxDefaultPosition, wxDefaultSize, 0 );
    item4->SetName( "sharedFilesLabel" );
    item2->Add( item4, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT, 5 );

    item0->Add( item2, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    CSharedFilesCtrl *item5 = new CSharedFilesCtrl( parent, ID_SHFILELIST, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxSUNKEN_BORDER );
    item5->SetName( "sharedFilesCt" );
    item0->Add( item5, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item6 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBox *item8 = new wxStaticBox( parent, -1, _("Statistics") );
    wxStaticBoxSizer *item7 = new wxStaticBoxSizer( item8, wxVERTICAL );

    wxFlexGridSizer *item9 = new wxFlexGridSizer( 6, 0, 0 );

    wxStaticBitmap *item10 = new wxStaticBitmap( parent, ID_STATICBITMAP, moreImages( 1 ), wxDefaultPosition, wxDefaultSize );
    item9->Add( item10, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT|wxBOTTOM, 5 );

    wxStaticText *item11 = new wxStaticText( parent, ID_TEXT, _("Current Session"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item11, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT|wxBOTTOM, 5 );

    item9->Add( 20, 20, 0, wxALIGN_CENTER, 5 );

    item9->Add( 20, 20, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item12 = new wxStaticText( parent, ID_TEXT, _("Total"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item12, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxBOTTOM, 5 );

    item9->Add( 20, 20, 0, wxALIGN_CENTER, 5 );

    item9->Add( 20, 20, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item13 = new wxStaticText( parent, ID_TEXT, _("Requested :"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item13, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item14 = new wxStaticText( parent, IDC_SREQUESTED, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item14->SetForegroundColour( *wxBLUE );
    item9->Add( item14, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxGauge *item15 = new wxGauge( parent, ID_GAUGE, 100, wxDefaultPosition, wxSize(200,-1), 0 );
    item15->SetName( "popbar" );
    item9->Add( item15, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item16 = new wxStaticText( parent, ID_TEXT, _("Requested :"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item16, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item17 = new wxStaticText( parent, IDC_SREQUESTED2, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item17->SetForegroundColour( *wxBLUE );
    item9->Add( item17, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    item9->Add( 20, 20, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item18 = new wxStaticText( parent, ID_TEXT, _("Active Uploads :"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item18, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item19 = new wxStaticText( parent, IDC_SACCEPTED, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item19->SetForegroundColour( *wxBLUE );
    item9->Add( item19, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxGauge *item20 = new wxGauge( parent, ID_GAUGE, 100, wxDefaultPosition, wxSize(200,-1), 0 );
    item20->SetName( "popbarAccept" );
    item9->Add( item20, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxStaticText *item21 = new wxStaticText( parent, ID_TEXT, _("Active Uploads :"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item21, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item22 = new wxStaticText( parent, IDC_SACCEPTED2, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item22->SetForegroundColour( *wxBLUE );
    item9->Add( item22, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    item9->Add( 20, 20, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item23 = new wxStaticText( parent, ID_TEXT, _("Transferred :"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item23, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item24 = new wxStaticText( parent, IDC_STRANSFERED, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item24->SetForegroundColour( *wxBLUE );
    item9->Add( item24, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxGauge *item25 = new wxGauge( parent, ID_GAUGE, 100, wxDefaultPosition, wxSize(200,-1), 0 );
    item25->SetName( "popbarTrans" );
    item9->Add( item25, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxStaticText *item26 = new wxStaticText( parent, ID_TEXT, _("Transferred :"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item26, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticText *item27 = new wxStaticText( parent, IDC_STRANSFERED2, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item27->SetForegroundColour( *wxBLUE );
    item9->Add( item27, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    item7->Add( item9, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item6->Add( item7, 0, wxALIGN_CENTER|wxTOP, 5 );

    item6->Add( 20, 20, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxALL, 5 );

    wxStaticBox *item29 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item28 = new wxStaticBoxSizer( item29, wxVERTICAL );

    wxButton *item30 = new wxButton( parent, IDC_RELOADSHAREDFILES, _("Reload"), wxDefaultPosition, wxDefaultSize, 0 );
    item30->SetDefault();
    item28->Add( item30, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item6->Add( item28, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item6, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *searchPage( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    CSearchListCtrl *item1 = new CSearchListCtrl( parent, ID_SEARCHLISTCTRL, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxNO_BORDER );
    item0->Add( item1, 1, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *testSizer;
wxSizer *statsDlg( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxStaticBox *item1 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item0 = new wxStaticBoxSizer( item1, wxVERTICAL );
    testSizer = item0;

    wxBoxSizer *item2 = new wxBoxSizer( wxHORIZONTAL );

    wxBoxSizer *item3 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item4 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item6 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item5 = new wxStaticBoxSizer( item6, wxVERTICAL );

    wxWindow *item7 = new COScopeCtrl(3,1,parent);
item7->SetName("dloadScope");
    wxASSERT( item7 );
    item5->Add( item7, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item4->Add( item5, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item8 = new wxBoxSizer( wxHORIZONTAL );

    wxBoxSizer *item9 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item10 = new wxStaticText( parent, ID_TEXT, _("Download-Speed"), wxDefaultPosition, wxSize(112,-1), 0 );
    item9->Add( item10, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    wxBoxSizer *item11 = new wxBoxSizer( wxHORIZONTAL );

    wxWindow *item12 = new CColorFrameCtrl(parent,IDC_C0,20,14);
    wxASSERT( item12 );
    item11->Add( item12, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item13 = new wxStaticText( parent, ID_TEXT, _("Current"), wxDefaultPosition, wxDefaultSize, 0 );
    item11->Add( item13, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT, 5 );

    item9->Add( item11, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    item8->Add( item9, 0, wxALIGN_CENTER|wxRIGHT, 5 );

    wxBoxSizer *item14 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item15 = new wxBoxSizer( wxHORIZONTAL );

    wxWindow *item16 = new CColorFrameCtrl(parent,IDC_C0_3,20,14);
    wxASSERT( item16 );
    item15->Add( item16, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item17 = new wxStaticText( parent, ID_TEXT, _("Running average"), wxDefaultPosition, wxDefaultSize, 0 );
    item15->Add( item17, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT, 5 );

    item14->Add( item15, 0, wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    wxBoxSizer *item18 = new wxBoxSizer( wxHORIZONTAL );

    wxWindow *item19 = new CColorFrameCtrl(parent,IDC_C0_2,20,14);
    wxASSERT( item19 );
    item18->Add( item19, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item20 = new wxStaticText( parent, ID_TEXT, _("Session average"), wxDefaultPosition, wxDefaultSize, 0 );
    item18->Add( item20, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT, 5 );

    item14->Add( item18, 0, wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    item8->Add( item14, 0, wxALIGN_CENTER|wxLEFT, 5 );

    item4->Add( item8, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item3->Add( item4, 1, wxGROW|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxBoxSizer *item21 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item23 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item22 = new wxStaticBoxSizer( item23, wxVERTICAL );

    wxWindow *item24 = new COScopeCtrl(3,0,parent);
item24->SetName("otherScope");
    wxASSERT( item24 );
    item22->Add( item24, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item21->Add( item22, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item25 = new wxBoxSizer( wxHORIZONTAL );

    wxBoxSizer *item26 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item27 = new wxBoxSizer( wxHORIZONTAL );

    wxWindow *item28 = new CColorFrameCtrl(parent,IDC_S3,20,14);
    wxASSERT( item28 );
    item27->Add( item28, 0, wxALIGN_CENTER|wxLEFT, 5 );

    wxStaticText *item29 = new wxStaticText( parent, ID_TEXT, _("Active downloads"), wxDefaultPosition, wxDefaultSize, 0 );
    item27->Add( item29, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT, 5 );

    item26->Add( item27, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item30 = new wxBoxSizer( wxHORIZONTAL );

    wxWindow *item31 = new CColorFrameCtrl(parent,IDC_S0,20,14);
    wxASSERT( item31 );
    item30->Add( item31, 0, wxALIGN_CENTER|wxLEFT, 5 );

    wxStaticText *item32 = new wxStaticText( parent, ID_ACTIVEC, _("Active connections (1:1)"), wxDefaultPosition, wxDefaultSize, 0 );
    item30->Add( item32, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT, 5 );

    item26->Add( item30, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    item25->Add( item26, 0, wxALIGN_CENTER|wxRIGHT, 5 );

    wxBoxSizer *item33 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item34 = new wxBoxSizer( wxHORIZONTAL );

    wxWindow *item35 = new CColorFrameCtrl(parent,IDC_S1,20,14);
    wxASSERT( item35 );
    item34->Add( item35, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item36 = new wxStaticText( parent, ID_TEXT, _("Active uploads"), wxDefaultPosition, wxDefaultSize, 0 );
    item34->Add( item36, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT, 5 );

    item33->Add( item34, 0, wxALIGN_CENTER_VERTICAL, 5 );

    item25->Add( item33, 0, wxALIGN_CENTER_HORIZONTAL|wxLEFT|wxRIGHT, 5 );

    item21->Add( item25, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item3->Add( item21, 1, wxGROW|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    item2->Add( item3, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    wxBoxSizer *item37 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item38 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item40 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item39 = new wxStaticBoxSizer( item40, wxVERTICAL );

    wxWindow *item41 = new COScopeCtrl(3,1,parent);
item41->SetName("uloadScope");
    wxASSERT( item41 );
    item39->Add( item41, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item38->Add( item39, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item42 = new wxBoxSizer( wxHORIZONTAL );

    wxBoxSizer *item43 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item44 = new wxStaticText( parent, ID_TEXT, _("Upload-Speed"), wxDefaultPosition, wxSize(112,-1), 0 );
    item43->Add( item44, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT, 5 );

    wxBoxSizer *item45 = new wxBoxSizer( wxHORIZONTAL );

    wxWindow *item46 = new CColorFrameCtrl(parent,IDC_C1,20,14);
    wxASSERT( item46 );
    item45->Add( item46, 0, wxALIGN_CENTER|wxLEFT, 5 );

    wxStaticText *item47 = new wxStaticText( parent, ID_TEXT, _("Current"), wxDefaultPosition, wxDefaultSize, 0 );
    item45->Add( item47, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT, 5 );

    item43->Add( item45, 0, wxALIGN_CENTER_VERTICAL, 5 );

    item42->Add( item43, 0, wxALIGN_CENTER|wxRIGHT, 5 );

    wxBoxSizer *item48 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item49 = new wxBoxSizer( wxHORIZONTAL );

    wxWindow *item50 = new CColorFrameCtrl(parent,IDC_C1_3,20,14);
    wxASSERT( item50 );
    item49->Add( item50, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item51 = new wxStaticText( parent, ID_TEXT, _("Running average"), wxDefaultPosition, wxDefaultSize, 0 );
    item49->Add( item51, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT, 5 );

    item48->Add( item49, 0, wxALIGN_CENTER, 5 );

    wxBoxSizer *item52 = new wxBoxSizer( wxHORIZONTAL );

    wxWindow *item53 = new CColorFrameCtrl(parent,IDC_C1_2,20,14);
    wxASSERT( item53 );
    item52->Add( item53, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item54 = new wxStaticText( parent, ID_TEXT, _("Session average"), wxDefaultPosition, wxDefaultSize, 0 );
    item52->Add( item54, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT, 5 );

    item48->Add( item52, 0, wxALIGN_CENTER_VERTICAL, 5 );

    item42->Add( item48, 0, wxALIGN_CENTER|wxLEFT, 5 );

    item38->Add( item42, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item37->Add( item38, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticBox *item56 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item55 = new wxStaticBoxSizer( item56, wxVERTICAL );

    wxTreeCtrl *item57 = new wxTreeCtrl( parent, ID_TREECTRL, wxDefaultPosition, wxDefaultSize, wxTR_HAS_BUTTONS|wxSUNKEN_BORDER );
    item57->SetName( "statTree" );
    item55->Add( item57, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item37->Add( item55, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item2->Add( item37, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    item0->Add( item2, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *clientDetails( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, _("General") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxBoxSizer *item3 = new wxBoxSizer( wxHORIZONTAL );

    wxBoxSizer *item4 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item5 = new wxStaticText( parent, ID_TEXT, _("Username :"), wxDefaultPosition, wxDefaultSize, 0 );
    item4->Add( item5, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item6 = new wxStaticText( parent, ID_TEXT, _("Userhash :"), wxDefaultPosition, wxDefaultSize, 0 );
    item4->Add( item6, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    item3->Add( item4, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    wxBoxSizer *item7 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item8 = new wxStaticText( parent, ID_DNAME, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item8->SetForegroundColour( *wxBLUE );
    item7->Add( item8, 0, wxADJUST_MINSIZE, 5 );

    wxStaticText *item9 = new wxStaticText( parent, ID_DHASH, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->SetForegroundColour( *wxBLUE );
    item7->Add( item9, 0, wxADJUST_MINSIZE, 5 );

    item3->Add( item7, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT|wxRIGHT, 5 );

    item1->Add( item3, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    wxBoxSizer *item10 = new wxBoxSizer( wxHORIZONTAL );

    wxBoxSizer *item11 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item12 = new wxStaticText( parent, ID_TEXT, _("Clientsoftware :"), wxDefaultPosition, wxDefaultSize, 0 );
    item11->Add( item12, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item13 = new wxStaticText( parent, ID_TEXT, _("IP Address :"), wxDefaultPosition, wxDefaultSize, 0 );
    item11->Add( item13, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item14 = new wxStaticText( parent, ID_TEXT, _("Server IP :"), wxDefaultPosition, wxDefaultSize, 0 );
    item11->Add( item14, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    item10->Add( item11, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT, 5 );

    wxBoxSizer *item15 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item16 = new wxStaticText( parent, ID_DSOFT, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item16->SetForegroundColour( *wxBLUE );
    item15->Add( item16, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item17 = new wxStaticText( parent, ID_DIP, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item17->SetForegroundColour( *wxBLUE );
    item15->Add( item17, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item18 = new wxStaticText( parent, ID_DSIP, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item18->SetForegroundColour( *wxBLUE );
    item15->Add( item18, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    item10->Add( item15, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT|wxRIGHT, 5 );

    wxBoxSizer *item19 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item20 = new wxStaticText( parent, ID_TEXT, _("Clientversion :"), wxDefaultPosition, wxDefaultSize, 0 );
    item19->Add( item20, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    wxStaticText *item21 = new wxStaticText( parent, ID_TEXT, _("ID :"), wxDefaultPosition, wxDefaultSize, 0 );
    item19->Add( item21, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    wxStaticText *item22 = new wxStaticText( parent, ID_TEXT, _("Servername :"), wxDefaultPosition, wxDefaultSize, 0 );
    item19->Add( item22, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    item10->Add( item19, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT, 5 );

    wxBoxSizer *item23 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item24 = new wxStaticText( parent, ID_DVERSION, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item24->SetForegroundColour( *wxBLUE );
    item23->Add( item24, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item25 = new wxStaticText( parent, ID_DID, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item25->SetForegroundColour( *wxBLUE );
    item23->Add( item25, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item26 = new wxStaticText( parent, ID_DSNAME, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item26->SetForegroundColour( *wxBLUE );
    item23->Add( item26, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    item10->Add( item23, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT|wxRIGHT, 5 );

    item1->Add( item10, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticBox *item28 = new wxStaticBox( parent, -1, _("Transfer") );
    wxStaticBoxSizer *item27 = new wxStaticBoxSizer( item28, wxVERTICAL );

    wxBoxSizer *item29 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item30 = new wxStaticText( parent, ID_TEXT, _("Currently downloading :"), wxDefaultPosition, wxDefaultSize, 0 );
    item29->Add( item30, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item31 = new wxStaticText( parent, ID_DDOWNLOADING, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item31->SetForegroundColour( *wxBLUE );
    item29->Add( item31, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    item27->Add( item29, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    wxBoxSizer *item32 = new wxBoxSizer( wxHORIZONTAL );

    wxBoxSizer *item33 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item34 = new wxStaticText( parent, ID_TEXT, _("Downloaded (this session) :"), wxDefaultPosition, wxDefaultSize, 0 );
    item33->Add( item34, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item35 = new wxStaticText( parent, ID_TEXT, _("Average downloadrate :"), wxDefaultPosition, wxDefaultSize, 0 );
    item33->Add( item35, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item36 = new wxStaticText( parent, ID_TEXT, _("Downloaded total :"), wxDefaultPosition, wxDefaultSize, 0 );
    item33->Add( item36, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    item32->Add( item33, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT, 5 );

    wxBoxSizer *item37 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item38 = new wxStaticText( parent, ID_DDOWN, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item38->SetForegroundColour( *wxBLUE );
    item37->Add( item38, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item39 = new wxStaticText( parent, ID_DAVDR, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item39->SetForegroundColour( *wxBLUE );
    item37->Add( item39, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item40 = new wxStaticText( parent, ID_DDOWNTOTAL, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item40->SetForegroundColour( *wxBLUE );
    item37->Add( item40, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    item32->Add( item37, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT|wxRIGHT, 5 );

    wxBoxSizer *item41 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item42 = new wxStaticText( parent, ID_TEXT, _("Uploaded (this session) :"), wxDefaultPosition, wxDefaultSize, 0 );
    item41->Add( item42, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    wxStaticText *item43 = new wxStaticText( parent, ID_TEXT, _("Average Uploadrate :"), wxDefaultPosition, wxDefaultSize, 0 );
    item41->Add( item43, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    wxStaticText *item44 = new wxStaticText( parent, ID_TEXT, _("Uploaded total :"), wxDefaultPosition, wxDefaultSize, 0 );
    item41->Add( item44, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    item32->Add( item41, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT, 5 );

    wxBoxSizer *item45 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item46 = new wxStaticText( parent, ID_DDUP, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item46->SetForegroundColour( *wxBLUE );
    item45->Add( item46, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item47 = new wxStaticText( parent, ID_DAVUR, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item47->SetForegroundColour( *wxBLUE );
    item45->Add( item47, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item48 = new wxStaticText( parent, ID_DUPTOTAL, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item48->SetForegroundColour( *wxBLUE );
    item45->Add( item48, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    item32->Add( item45, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT|wxRIGHT, 5 );

    item27->Add( item32, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item27, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticBox *item50 = new wxStaticBox( parent, -1, _("Scores") );
    wxStaticBoxSizer *item49 = new wxStaticBoxSizer( item50, wxHORIZONTAL );

    wxBoxSizer *item51 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item52 = new wxStaticText( parent, ID_TEXT, _("DL/UP Modifier :"), wxDefaultPosition, wxDefaultSize, 0 );
    item51->Add( item52, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item53 = new wxStaticText( parent, ID_TEXT, _("Rating (total) :"), wxDefaultPosition, wxDefaultSize, 0 );
    item51->Add( item53, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    item49->Add( item51, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT, 5 );

    wxBoxSizer *item54 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item55 = new wxStaticText( parent, ID_DRATIO, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item55->SetForegroundColour( *wxBLUE );
    item54->Add( item55, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item56 = new wxStaticText( parent, ID_DRATING, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item56->SetForegroundColour( *wxBLUE );
    item54->Add( item56, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    item49->Add( item54, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT|wxRIGHT, 5 );

    wxBoxSizer *item57 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item58 = new wxStaticText( parent, ID_TEXT, _("Secure Ident :"), wxDefaultPosition, wxDefaultSize, 0 );
    item57->Add( item58, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    wxStaticText *item59 = new wxStaticText( parent, ID_TEXT, _("Uploadqueue score :"), wxDefaultPosition, wxDefaultSize, 0 );
    item57->Add( item59, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    item49->Add( item57, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT, 5 );

    wxBoxSizer *item60 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item61 = new wxStaticText( parent, IDC_CDIDENT, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item61->SetForegroundColour( *wxBLUE );
    item60->Add( item61, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item62 = new wxStaticText( parent, ID_DSCORE, _("N/A"), wxDefaultPosition, wxDefaultSize, 0 );
    item62->SetForegroundColour( *wxBLUE );
    item60->Add( item62, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    item49->Add( item60, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT|wxRIGHT, 5 );

    item0->Add( item49, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxStaticBox *item64 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item63 = new wxStaticBoxSizer( item64, wxVERTICAL );

    wxButton *item65 = new wxButton( parent, ID_CLOSEWND, _("Close"), wxDefaultPosition, wxDefaultSize, 0 );
    item65->SetDefault();
    item63->Add( item65, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item63, 0, wxALIGN_CENTER|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *PreferencesGeneralTab( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxGridSizer *item1 = new wxGridSizer( 2, 0, 0 );

    wxStaticBox *item3 = new wxStaticBox( parent, -1, _("Nick") );
    wxStaticBoxSizer *item2 = new wxStaticBoxSizer( item3, wxVERTICAL );

    wxTextCtrl *item4 = new wxTextCtrl( parent, IDC_NICK, _("http://www.aMule.org - the Linux Mule"), wxDefaultPosition, wxSize(90,-1), 0 );
    item2->Add( item4, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item1->Add( item2, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxRIGHT|wxTOP, 5 );

    wxStaticBox *item6 = new wxStaticBox( parent, -1, _("Language") );
    wxStaticBoxSizer *item5 = new wxStaticBoxSizer( item6, wxVERTICAL );

    wxString strs7[] = 
    {
        _("System default"), 
        _("Arabic"), 
        _("Basque"), 
        _("Bulgarian"), 
        _("Catalan"), 
        _("Chinese"), 
        _("Danish"), 
        _("Dutch"), 
        _("English"), 
        _("Estonian"), 
        _("Finnish"), 
        _("French"), 
        _("Galego"), 
        _("German"), 
        _("German (Swiss)"), 
        _("Italian"), 
        _("Korean"), 
        _("Lithuanian"), 
        _("Polish"), 
        _("Portuguese"), 
        _("Portuguese (Brazil)"), 
        _("Russian"), 
        _("Spanish"), 
        _("Spanish (Chile)"), 
        _("Spanish (Mexico)"), 
        _("Turkey"), 
        _("Hungarian"), 
        _("Catalan")
    };
    wxChoice *item7 = new wxChoice( parent, IDC_LANGUAGE, wxDefaultPosition, wxSize(100,30), 28, strs7, 0 );
    item5->Add( item7, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item1->Add( item5, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT|wxTOP, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticBox *item9 = new wxStaticBox( parent, -1, _("Misc Options") );
    wxStaticBoxSizer *item8 = new wxStaticBoxSizer( item9, wxVERTICAL );

    wxCheckBox *item10 = new wxCheckBox( parent, IDC_BEEPER, _("Beep on errors"), wxDefaultPosition, wxDefaultSize, 0 );
    item8->Add( item10, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item11 = new wxCheckBox( parent, IDC_BRINGTOFOREGROUND, _("Bring to front on link click"), wxDefaultPosition, wxDefaultSize, 0 );
    item11->SetValue( TRUE );
    item8->Add( item11, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item12 = new wxCheckBox( parent, IDC_DBLCLICK, _("Downloadlist doubleclick to expand"), wxDefaultPosition, wxDefaultSize, 0 );
    item12->SetValue( TRUE );
    item8->Add( item12, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item13 = new wxCheckBox( parent, IDC_MINTRAY, _("Minimize to trayicon"), wxDefaultPosition, wxDefaultSize, 0 );
    item8->Add( item13, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item14 = new wxCheckBox( parent, IDC_ONLINESIG, _("Enable Online-Signature"), wxDefaultPosition, wxDefaultSize, 0 );
    item14->SetValue( TRUE );
    item8->Add( item14, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item15 = new wxCheckBox( parent, IDC_EXIT, _("Prompt on exit"), wxDefaultPosition, wxDefaultSize, 0 );
    item15->SetValue( TRUE );
    item8->Add( item15, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item16 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item17 = new wxStaticText( parent, IDC_TOOLTIPDELAY_LBL, _("Tooltip Delay Time in secs (1s to 5s)"), wxDefaultPosition, wxDefaultSize, 0 );
    item16->Add( item17, 1, wxALIGN_CENTER|wxLEFT, 5 );

    wxSpinCtrl *item18 = new wxSpinCtrl( parent, IDC_TOOLTIPDELAY, wxT("1"), wxDefaultPosition, wxSize(30,-1), 0, 1, 5, 1 );
    item16->Add( item18, 0, wxALIGN_CENTER|wxRIGHT, 5 );

    item8->Add( item16, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxButton *item19 = new wxButton( parent, ID_DESKTOPMODE, _("Systray Integration"), wxDefaultPosition, wxDefaultSize, 0 );
    item8->Add( item19, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item8, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxStaticBox *item21 = new wxStaticBox( parent, -1, _("Startup") );
    wxStaticBoxSizer *item20 = new wxStaticBoxSizer( item21, wxVERTICAL );

    wxBoxSizer *item22 = new wxBoxSizer( wxVERTICAL );

    wxFlexGridSizer *item23 = new wxFlexGridSizer( 2, 0, 0 );
    item23->AddGrowableCol( 0 );

    wxStaticText *item24 = new wxStaticText( parent, ID_TEXT, wxT(""), wxDefaultPosition, wxDefaultSize, 0 );
    item23->Add( item24, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item25 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item26 = new wxStaticText( parent, IDC_DAYS, _("5 Days"), wxDefaultPosition, wxDefaultSize, 0 );
    item25->Add( item26, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    item23->Add( item25, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxCheckBox *item27 = new wxCheckBox( parent, IDC_CHECK4UPDATE, _("Check for new version"), wxDefaultPosition, wxDefaultSize, 0 );
    item23->Add( item27, 0, 0, 5 );

    wxSlider *item28 = new wxSlider( parent, IDC_CHECKDAYS, 5, 2, 7, wxDefaultPosition, wxSize(100,10), wxSL_HORIZONTAL );
    item23->Add( item28, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 5 );

    item22->Add( item23, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item20->Add( item22, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item29 = new wxCheckBox( parent, IDC_SPLASHON, _("Show Splashscreen"), wxDefaultPosition, wxDefaultSize, 0 );
    item29->SetValue( TRUE );
    item20->Add( item29, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item30 = new wxCheckBox( parent, IDC_STARTMIN, _("Start minimized"), wxDefaultPosition, wxDefaultSize, 0 );
    item20->Add( item30, 0, wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item20, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxStaticBox *item32 = new wxStaticBox( parent, -1, _("Fake Check") );
    wxStaticBoxSizer *item31 = new wxStaticBoxSizer( item32, wxVERTICAL );

    wxString strs33[] = 
    {
        _("Konqueror"), 
        _("Mozilla"), 
        _("Firefox"), 
        _("Firebird"), 
        _("Opera"), 
        _("Netscape"), 
        _("Galeon"), 
        _("Epiphany"), 
        _("User Defined")
    };
    wxChoice *item33 = new wxChoice( parent, IDC_FCHECK, wxDefaultPosition, wxSize(100,-1), 9, strs33, 0 );
    item33->SetToolTip( _("Select your browser here") );
    item31->Add( item33, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxGridSizer *item34 = new wxGridSizer( 2, 0, 0 );

    wxStaticText *item35 = new wxStaticText( parent, ID_CUSTOMBROWSETEXT, _("Custom Browser:"), wxDefaultPosition, wxDefaultSize, 0 );
    item35->Enable( FALSE );
    item34->Add( item35, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxTextCtrl *item36 = new wxTextCtrl( parent, IDC_FCHECKSELF, _("my browser"), wxDefaultPosition, wxSize(80,-1), 0 );
    item36->SetToolTip( _("Enter your browser name here") );
    item36->Enable( FALSE );
    item34->Add( item36, 0, wxGROW|wxALL, 5 );

    item31->Add( item34, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item31, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *IDC_IPF_0;
wxSizer *PreferencesConnectionTab( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item1 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBox *item3 = new wxStaticBox( parent, -1, _("Line Capacities") );
    wxStaticBoxSizer *item2 = new wxStaticBoxSizer( item3, wxVERTICAL );

    wxBoxSizer *item4 = new wxBoxSizer( wxHORIZONTAL );

    wxBoxSizer *item5 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item6 = new wxStaticText( parent, IDC_DCAP_LBL, _("Download"), wxDefaultPosition, wxDefaultSize, 0 );
    item5->Add( item6, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item7 = new wxBoxSizer( wxHORIZONTAL );

    wxSpinCtrl *item8 = new wxSpinCtrl( parent, IDC_DOWNLOAD_CAP, wxT("3"), wxDefaultPosition, wxSize(100,-1), 0, 3, 19375, 3 );
    item7->Add( item8, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item9 = new wxStaticText( parent, IDC_KBS2, _("kB/s"), wxDefaultPosition, wxDefaultSize, 0 );
    item7->Add( item9, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    item5->Add( item7, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item10 = new wxStaticText( parent, IDC_UCAP_LBL, _("Upload"), wxDefaultPosition, wxDefaultSize, 0 );
    item5->Add( item10, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item11 = new wxBoxSizer( wxHORIZONTAL );

    wxSpinCtrl *item12 = new wxSpinCtrl( parent, IDC_UPLOAD_CAP, wxT("3"), wxDefaultPosition, wxSize(100,-1), 0, 3, 19375, 3 );
    item11->Add( item12, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item13 = new wxStaticText( parent, IDC_KBS3, _("kB/s"), wxDefaultPosition, wxDefaultSize, 0 );
    item11->Add( item13, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    item5->Add( item11, 0, wxALIGN_CENTER, 5 );

    item4->Add( item5, 0, wxALIGN_CENTER, 5 );

    item2->Add( item4, 1, wxALIGN_CENTER|wxTOP|wxBOTTOM, 5 );

    item1->Add( item2, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxStaticBox *item15 = new wxStaticBox( parent, -1, _("Bandwith Limits") );
    wxStaticBoxSizer *item14 = new wxStaticBoxSizer( item15, wxVERTICAL );

    wxBoxSizer *item16 = new wxBoxSizer( wxHORIZONTAL );

    wxBoxSizer *item17 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item18 = new wxStaticText( parent, IDC_DLIMIT_LBL, _("Download"), wxDefaultPosition, wxDefaultSize, 0 );
    item17->Add( item18, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item19 = new wxBoxSizer( wxHORIZONTAL );

    wxSpinCtrl *item20 = new wxSpinCtrl( parent, IDC_MAXDOWN, wxT("0"), wxDefaultPosition, wxSize(100,-1), 0, 0, 19375, 0 );
    item19->Add( item20, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item21 = new wxStaticText( parent, IDC_KBS1, _("kB/s"), wxDefaultPosition, wxDefaultSize, 0 );
    item19->Add( item21, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    item17->Add( item19, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item22 = new wxStaticText( parent, IDC_ULIMIT_LBL, _("Upload"), wxDefaultPosition, wxDefaultSize, 0 );
    item17->Add( item22, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item23 = new wxBoxSizer( wxHORIZONTAL );

    wxSpinCtrl *item24 = new wxSpinCtrl( parent, IDC_MAXUP, wxT("0"), wxDefaultPosition, wxSize(100,-1), 0, 0, 19375, 0 );
    item23->Add( item24, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item25 = new wxStaticText( parent, IDC_KBS4, _("kB/s"), wxDefaultPosition, wxDefaultSize, 0 );
    item23->Add( item25, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    item17->Add( item23, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item26 = new wxStaticText( parent, ID_TEXT, _("Slot Allocation"), wxDefaultPosition, wxDefaultSize, 0 );
    item17->Add( item26, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item27 = new wxBoxSizer( wxHORIZONTAL );

    wxSpinCtrl *item28 = new wxSpinCtrl( parent, IDC_SLOTALLOC, wxT("2"), wxDefaultPosition, wxSize(100,-1), 0, 1, 30, 2 );
    item27->Add( item28, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item29 = new wxStaticText( parent, ID_TEXT, _("kB/s"), wxDefaultPosition, wxDefaultSize, 0 );
    item27->Add( item29, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    item17->Add( item27, 0, wxALIGN_CENTER, 5 );

    item16->Add( item17, 0, wxALIGN_CENTER|wxTOP|wxBOTTOM, 5 );

    item14->Add( item16, 1, wxALIGN_CENTER, 5 );

    item1->Add( item14, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    item0->Add( item1, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item30 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBox *item32 = new wxStaticBox( parent, -1, _("Clientport") );
    wxStaticBoxSizer *item31 = new wxStaticBoxSizer( item32, wxVERTICAL );

    wxGridSizer *item33 = new wxGridSizer( 3, 0, 20 );

    wxBoxSizer *item34 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item35 = new wxStaticText( parent, ID_TEXT, _("TCP"), wxDefaultPosition, wxDefaultSize, 0 );
    item34->Add( item35, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxSpinCtrl *item36 = new wxSpinCtrl( parent, IDC_PORT, wxT("4662"), wxDefaultPosition, wxSize(100,-1), 0, 80, 65535, 4662 );
    item34->Add( item36, 0, wxALIGN_CENTER, 5 );

    item33->Add( item34, 0, wxALIGN_CENTER, 5 );

    wxBoxSizer *item37 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item38 = new wxStaticText( parent, ID_TEXT, _("UDP"), wxDefaultPosition, wxDefaultSize, 0 );
    item37->Add( item38, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxSpinCtrl *item39 = new wxSpinCtrl( parent, IDC_UDPPORT, wxT("4672"), wxDefaultPosition, wxSize(100,-1), 0, 1025, 65535, 4672 );
    item37->Add( item39, 0, wxALIGN_CENTER, 5 );

    item33->Add( item37, 0, wxALIGN_CENTER, 5 );

    wxBoxSizer *item40 = new wxBoxSizer( wxVERTICAL );

    wxCheckBox *item41 = new wxCheckBox( parent, IDC_UDPDISABLE, _("disable"), wxDefaultPosition, wxDefaultSize, 0 );
    item40->Add( item41, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 5 );

    item33->Add( item40, 0, wxALIGN_BOTTOM|wxALIGN_CENTER_HORIZONTAL, 5 );

    item31->Add( item33, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item30->Add( item31, 1, wxALIGN_CENTER|wxLEFT|wxRIGHT|wxTOP, 5 );

    item0->Add( item30, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item42 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBox *item44 = new wxStaticBox( parent, -1, _("Max Sources per File") );
    wxStaticBoxSizer *item43 = new wxStaticBoxSizer( item44, wxVERTICAL );

    wxBoxSizer *item45 = new wxBoxSizer( wxHORIZONTAL );

    wxBoxSizer *item46 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item47 = new wxStaticText( parent, IDC_MAXSRCHARD_LBL, _("Hard Limit"), wxDefaultPosition, wxDefaultSize, 0 );
    item46->Add( item47, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxSpinCtrl *item48 = new wxSpinCtrl( parent, IDC_MAXSOURCEPERFILE, wxT("300"), wxDefaultPosition, wxSize(100,-1), 0, 40, 5000, 300 );
    item46->Add( item48, 0, wxALIGN_CENTER_VERTICAL, 5 );

    item45->Add( item46, 0, wxALIGN_CENTER|wxTOP|wxBOTTOM, 5 );

    item43->Add( item45, 0, wxALIGN_CENTER, 5 );

    item42->Add( item43, 1, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticBox *item50 = new wxStaticBox( parent, -1, _("Connection Limits") );
    wxStaticBoxSizer *item49 = new wxStaticBoxSizer( item50, wxVERTICAL );

    wxBoxSizer *item51 = new wxBoxSizer( wxHORIZONTAL );

    wxBoxSizer *item52 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item53 = new wxStaticText( parent, IDC_MAXCONLABEL, _("Max Connections"), wxDefaultPosition, wxDefaultSize, 0 );
    item52->Add( item53, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxSpinCtrl *item54 = new wxSpinCtrl( parent, IDC_MAXCON, wxT("500"), wxDefaultPosition, wxSize(100,-1), 0, 25, 7500, 500 );
    item52->Add( item54, 0, wxALIGN_CENTER_VERTICAL, 5 );

    item51->Add( item52, 0, wxALIGN_CENTER|wxTOP|wxBOTTOM, 5 );

    item49->Add( item51, 0, wxALIGN_CENTER, 5 );

    item42->Add( item49, 1, wxADJUST_MINSIZE|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item42, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item55 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item57 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item56 = new wxStaticBoxSizer( item57, wxVERTICAL );

    wxCheckBox *item58 = new wxCheckBox( parent, IDC_AUTOCONNECT, _("Autoconnect on startup"), wxDefaultPosition, wxDefaultSize, 0 );
    item56->Add( item58, 0, wxALIGN_CENTER_VERTICAL, 10 );

    wxCheckBox *item59 = new wxCheckBox( parent, IDC_RECONN, _("Reconnect on loss"), wxDefaultPosition, wxDefaultSize, 0 );
    item59->SetValue( TRUE );
    item56->Add( item59, 0, wxALIGN_CENTER_VERTICAL, 10 );

    wxCheckBox *item60 = new wxCheckBox( parent, IDC_SHOWOVERHEAD, _("Show overhead bandwith"), wxDefaultPosition, wxDefaultSize, 0 );
    item60->SetValue( TRUE );
    item56->Add( item60, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item61 = new wxCheckBox( parent, IDC_SECIDENT, _("Use Secure Ident"), wxDefaultPosition, wxDefaultSize, 0 );
    item61->SetValue( TRUE );
    item56->Add( item61, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    item55->Add( item56, 1, wxGROW|wxALIGN_CENTER_VERTICAL|wxTOP|wxBOTTOM, 5 );

    wxStaticBox *item63 = new wxStaticBox( parent, -1, _("IP-Filter") );
    wxStaticBoxSizer *item62 = new wxStaticBoxSizer( item63, wxHORIZONTAL );
    IDC_IPF_0 = item62;

    wxCheckBox *item64 = new wxCheckBox( parent, IDC_IPFONOFF, _("IP-Filter ON / OFF"), wxDefaultPosition, wxDefaultSize, 0 );
    item64->SetValue( TRUE );
    item62->Add( item64, 0, wxADJUST_MINSIZE|wxGROW, 0 );

    item62->Add( 30, 20, 0, wxALIGN_CENTER, 5 );

    wxButton *item65 = new wxButton( parent, IDC_IPFRELOAD, _("Reload"), wxDefaultPosition, wxDefaultSize, 0 );
    item62->Add( item65, 0, wxALIGN_CENTER_VERTICAL|wxTOP|wxBOTTOM, 5 );

    item55->Add( item62, 0, wxGROW, 5 );

    item0->Add( item55, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *PreferencesServerTab( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxBoxSizer *item3 = new wxBoxSizer( wxHORIZONTAL );

    wxCheckBox *item4 = new wxCheckBox( parent, IDC_REMOVEDEAD, _("Remove dead server after"), wxDefaultPosition, wxDefaultSize, 0 );
    item4->SetValue( TRUE );
    item3->Add( item4, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxRIGHT, 5 );

    wxSpinCtrl *item5 = new wxSpinCtrl( parent, IDC_SERVERRETRIES, wxT("2"), wxDefaultPosition, wxSize(30,-1), 0, 1, 10, 2 );
    item3->Add( item5, 0, wxADJUST_MINSIZE|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item6 = new wxStaticText( parent, IDC_RETRIES_LBL, _("retries"), wxDefaultPosition, wxDefaultSize, 0 );
    item3->Add( item6, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    item1->Add( item3, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item7 = new wxBoxSizer( wxHORIZONTAL );

    wxCheckBox *item8 = new wxCheckBox( parent, IDC_AUTOSERVER, _("Auto-update serverlist at startup"), wxDefaultPosition, wxDefaultSize, 0 );
    item7->Add( item8, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item9 = new wxBoxSizer( wxVERTICAL );

    wxButton *item10 = new wxButton( parent, IDC_EDITADR, _("List"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item10, 1, wxADJUST_MINSIZE|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 5 );

    item7->Add( item9, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    item1->Add( item7, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item11 = new wxCheckBox( parent, IDC_FILTER, _("Always filter bad IPs"), wxDefaultPosition, wxDefaultSize, 0 );
    item11->SetValue( TRUE );
    item1->Add( item11, 0, wxALIGN_CENTER_VERTICAL, 0 );

    wxCheckBox *item12 = new wxCheckBox( parent, IDC_UPDATESERVERCONNECT, _("Update serverlist when connecting to a server"), wxDefaultPosition, wxDefaultSize, 0 );
    item12->SetValue( TRUE );
    item1->Add( item12, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item13 = new wxCheckBox( parent, IDC_UPDATESERVERCLIENT, _("Update serverlist when a client connect"), wxDefaultPosition, wxDefaultSize, 0 );
    item13->SetValue( TRUE );
    item1->Add( item13, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item14 = new wxCheckBox( parent, IDC_SCORE, _("Use priority system"), wxDefaultPosition, wxDefaultSize, 0 );
    item14->SetValue( TRUE );
    item1->Add( item14, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item15 = new wxCheckBox( parent, IDC_SMARTIDCHECK, _("Use smart LowID check on connect"), wxDefaultPosition, wxDefaultSize, 0 );
    item15->SetValue( TRUE );
    item1->Add( item15, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item16 = new wxCheckBox( parent, IDC_SAFESERVERCONNECT, _("Safe connect"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item16, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item17 = new wxCheckBox( parent, IDC_AUTOCONNECTSTATICONLY, _("Autoconnect to servers in static list only"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item17, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item18 = new wxCheckBox( parent, IDC_MANUALSERVERHIGHPRIO, _("Set manually added servers to High Priority"), wxDefaultPosition, wxDefaultSize, 0 );
    item18->SetValue( TRUE );
    item1->Add( item18, 0, wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *PreferencesFilesTab( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, _("See my shares") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxRadioButton *item3 = new wxRadioButton( parent, IDC_SEESHARE1, _("Everybody"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item3, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxRadioButton *item4 = new wxRadioButton( parent, IDC_SEESHARE2, _("Friends"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item4, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxRadioButton *item5 = new wxRadioButton( parent, IDC_SEESHARE3, _("No One"), wxDefaultPosition, wxDefaultSize, 0 );
    item5->SetValue( TRUE );
    item1->Add( item5, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxStaticBox *item7 = new wxStaticBox( parent, -1, _("Intelligent Corruption Handling") );
    wxStaticBoxSizer *item6 = new wxStaticBoxSizer( item7, wxVERTICAL );

    wxCheckBox *item8 = new wxCheckBox( parent, IDC_ICH, _("I.C.H. active"), wxDefaultPosition, wxSize(160,-1), 0 );
    item8->SetValue( TRUE );
    item6->Add( item8, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    item0->Add( item6, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticBox *item10 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item9 = new wxStaticBoxSizer( item10, wxVERTICAL );

    wxCheckBox *item11 = new wxCheckBox( parent, IDC_ADDNEWFILESPAUSED, _("Add files to download in pause mode"), wxDefaultPosition, wxDefaultSize, 0 );
    item11->SetValue( TRUE );
    item9->Add( item11, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxCheckBox *item12 = new wxCheckBox( parent, IDC_DAP, _("Add files to download with auto priority"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item12, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item13 = new wxCheckBox( parent, IDC_PREVIEWPRIO, _("Try to download first and last chunks first"), wxDefaultPosition, wxDefaultSize, 0 );
    item13->SetValue( TRUE );
    item9->Add( item13, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxCheckBox *item14 = new wxCheckBox( parent, IDC_UAP, _("Add new shared files with auto priority"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item14, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxCheckBox *item15 = new wxCheckBox( parent, IDC_FULLCHUNKTRANS, _("Try to transfer full chunks to all uploads"), wxDefaultPosition, wxDefaultSize, 0 );
    item15->SetValue( TRUE );
    item9->Add( item15, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxCheckBox *item16 = new wxCheckBox( parent, IDC_STARTNEXTFILE, _("Start next paused file when a file completed"), wxDefaultPosition, wxDefaultSize, 0 );
    item16->SetValue( TRUE );
    item9->Add( item16, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxCheckBox *item17 = new wxCheckBox( parent, IDC_SRCSEEDS, _("Save 5 sources on rare files (< 20 sources)"), wxDefaultPosition, wxDefaultSize, 0 );
    item17->SetValue( TRUE );
    item9->Add( item17, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    wxCheckBox *item18 = new wxCheckBox( parent, IDC_METADATA, _("Extract Meta Data Tags"), wxDefaultPosition, wxDefaultSize, 0 );
    item18->Enable( FALSE );
    item9->Add( item18, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    item0->Add( item9, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticBox *item20 = new wxStaticBox( parent, -1, _("Reduce Fragmentation") );
    wxStaticBoxSizer *item19 = new wxStaticBoxSizer( item20, wxVERTICAL );

    wxFlexGridSizer *item21 = new wxFlexGridSizer( 2, 0, 0, 0 );

    wxCheckBox *item22 = new wxCheckBox( parent, IDC_FULLALLOCATE, _("Allocate full disk space for .part files"), wxDefaultPosition, wxDefaultSize, 0 );
    item22->SetToolTip( _("This option reduces fragmentation but slows down the part file creation and will disable sparse files") );
    item22->Enable( FALSE );
    item21->Add( item22, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    wxCheckBox *item23 = new wxCheckBox( parent, IDC_CHUNKALLOC, _("Allocate full chucks for .part files"), wxDefaultPosition, wxDefaultSize, 0 );
    item23->SetToolTip( _("Select this to allocate a full chunk each time data is received for it.") );
    item23->Enable( FALSE );
    item21->Add( item23, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    item19->Add( item21, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item19, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticBox *item25 = new wxStaticBox( parent, -1, _("Disk Space") );
    wxStaticBoxSizer *item24 = new wxStaticBoxSizer( item25, wxVERTICAL );

    wxCheckBox *item26 = new wxCheckBox( parent, IDC_CHECKDISKSPACE, _("Check Disk Space"), wxDefaultPosition, wxDefaultSize, 0 );
    item26->SetToolTip( _("Select this if you want aMule to check your Disk Space") );
    item24->Add( item26, 0, wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    wxFlexGridSizer *item27 = new wxFlexGridSizer( 3, 0, 0 );
    item27->AddGrowableCol( 1 );

    wxStaticText *item28 = new wxStaticText( parent, ID_MINDISKTEXT, _("    Min Disk Space:    "), wxDefaultPosition, wxDefaultSize, 0 );
    item27->Add( item28, 0, wxALIGN_CENTER|wxALL, 0 );

    wxSpinCtrl *item29 = new wxSpinCtrl( parent, IDC_MINDISKSPACE, wxT("1"), wxDefaultPosition, wxSize(150,-1), 0, 1, 1000000, 1 );
    item29->SetToolTip( _("Enter here the min disk space desired.") );
    item27->Add( item29, 0, wxALIGN_CENTER_VERTICAL, 0 );

    wxStaticText *item30 = new wxStaticText( parent, ID_TEXT, _("Mb"), wxDefaultPosition, wxDefaultSize, 0 );
    item27->Add( item30, 0, wxALIGN_CENTER|wxALL, 5 );

    item24->Add( item27, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    item0->Add( item24, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *PreferencesDirectoriesTab( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, _("Incoming Directory :") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxHORIZONTAL );

    wxTextCtrl *item3 = new wxTextCtrl( parent, IDC_INCFILES, wxT(""), wxDefaultPosition, wxSize(80,-1), 0 );
    item1->Add( item3, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxALL, 5 );

    wxButton *item4 = new wxButton( parent, IDC_SELINCDIR, _("Browse"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item4, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxALL, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxStaticBox *item6 = new wxStaticBox( parent, -1, _("Temporary Directory :") );
    wxStaticBoxSizer *item5 = new wxStaticBoxSizer( item6, wxHORIZONTAL );

    wxTextCtrl *item7 = new wxTextCtrl( parent, IDC_TEMPFILES, wxT(""), wxDefaultPosition, wxSize(80,-1), 0 );
    item5->Add( item7, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxALL, 5 );

    wxButton *item8 = new wxButton( parent, IDC_SELTEMPDIR, _("Browse"), wxDefaultPosition, wxDefaultSize, 0 );
    item5->Add( item8, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxALL, 5 );

    item0->Add( item5, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxStaticBox *item10 = new wxStaticBox( parent, -1, _("Shared Directories") );
    wxStaticBoxSizer *item9 = new wxStaticBoxSizer( item10, wxHORIZONTAL );

    wxBoxSizer *item11 = new wxBoxSizer( wxVERTICAL );

    CDirectoryTreeCtrl *item12 = new CDirectoryTreeCtrl(parent, IDC_SHARESELECTOR,wxPoint(0,0),  wxSize(100, 100),wxTR_CHECKBOX|wxSUNKEN_BORDER|wxTR_DEFAULT_STYLE);
    wxASSERT( item12 );
    item11->Add( item12, 1, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item9->Add( item11, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item9, 1, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxStaticBox *item14 = new wxStaticBox( parent, -1, _("Video Player") );
    wxStaticBoxSizer *item13 = new wxStaticBoxSizer( item14, wxVERTICAL );

    wxBoxSizer *item15 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item16 = new wxBoxSizer( wxHORIZONTAL );

    wxTextCtrl *item17 = new wxTextCtrl( parent, IDC_VIDEOPLAYER, _("mplayer -idx"), wxDefaultPosition, wxSize(80,-1), 0 );
    item16->Add( item17, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxALL, 5 );

    wxButton *item18 = new wxButton( parent, IDC_BROWSEV, _("Browse"), wxDefaultPosition, wxDefaultSize, 0 );
    item16->Add( item18, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxALL, 5 );

    item15->Add( item16, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    item13->Add( item15, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item19 = new wxCheckBox( parent, IDC_VIDEOBACKUP, _("Create Backup to preview"), wxDefaultPosition, wxDefaultSize, 0 );
    item13->Add( item19, 0, wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item13, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *PreferencesStatisticsTab( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, _("Graphs") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxStaticText *item3 = new wxStaticText( parent, IDC_SLIDERINFO, _("Update delay : 5 secs"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item3, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5 );

    wxSlider *item4 = new wxSlider( parent, IDC_SLIDER, 5, 0, 120, wxDefaultPosition, wxSize(100,-1), wxSL_HORIZONTAL );
    item1->Add( item4, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item5 = new wxStaticText( parent, IDC_SLIDERINFO3, _("Time for average graph: 100 mins"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item5, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5 );

    wxSlider *item6 = new wxSlider( parent, IDC_SLIDER3, 100, 5, 100, wxDefaultPosition, wxSize(100,-1), wxSL_HORIZONTAL );
    item1->Add( item6, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item7 = new wxStaticText( parent, IDC_SLIDERINFO4, _("Connections Graph Scale: 100 "), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item7, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5 );

    wxSlider *item8 = new wxSlider( parent, IDC_SLIDER4, 100, 2, 200, wxDefaultPosition, wxSize(100,-1), wxSL_HORIZONTAL );
    item1->Add( item8, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item9 = new wxStaticText( parent, IDC_PREFCOLORS, _("Select Statistics Colors"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item9, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5 );

    wxBoxSizer *item10 = new wxBoxSizer( wxHORIZONTAL );

    wxString strs11[] = 
    {
        _("Background"), 
        _("Grid"), 
        _("Download current"), 
        _("Download running average"), 
        _("Download session average"), 
        _("Upload current"), 
        _("Upload running average"), 
        _("Upload session average"), 
        _("Active connections"), 
        _("Active downloads"), 
        _("Active uploads"), 
        _("Systray Icon Speedbar")
    };
    wxChoice *item11 = new wxChoice( parent, IDC_COLORSELECTOR, wxDefaultPosition, wxDefaultSize, 12, strs11, 0 );
    item10->Add( item11, 0, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxRIGHT, 5 );

    wxButton *item12 = new wxButton( parent, IDC_COLOR_BUTTON, _("Select"), wxDefaultPosition, wxDefaultSize, 0 );
    item10->Add( item12, 0, wxGROW|wxLEFT, 5 );

    item1->Add( item10, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxStaticBox *item14 = new wxStaticBox( parent, -1, _("Statistics Tree") );
    wxStaticBoxSizer *item13 = new wxStaticBoxSizer( item14, wxVERTICAL );

    wxStaticText *item15 = new wxStaticText( parent, IDC_SLIDERINFO2, _("Update delay : 5 secs"), wxDefaultPosition, wxDefaultSize, 0 );
    item13->Add( item15, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5 );

    wxSlider *item16 = new wxSlider( parent, IDC_SLIDER2, 5, 5, 100, wxDefaultPosition, wxSize(100,-1), wxSL_HORIZONTAL );
    item13->Add( item16, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item13, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *PreferencesNotifyTab( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, _("Messages popup") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxCheckBox *item3 = new wxCheckBox( parent, IDC_CB_TBN_USESOUND, _("Use sound"), wxDefaultPosition, wxDefaultSize, 0 );
    item3->Enable( FALSE );
    item1->Add( item3, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item4 = new wxBoxSizer( wxHORIZONTAL );

    wxTextCtrl *item5 = new wxTextCtrl( parent, IDC_EDIT_TBN_WAVFILE, wxT(""), wxDefaultPosition, wxSize(80,-1), 0 );
    item5->Enable( FALSE );
    item4->Add( item5, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxTOP, 5 );

    wxButton *item6 = new wxButton( parent, IDC_BTN_BROWSE_WAV, _("Browse"), wxDefaultPosition, wxDefaultSize, 0 );
    item6->Enable( FALSE );
    item4->Add( item6, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT|wxTOP, 5 );

    item1->Add( item4, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxBOTTOM, 5 );

    wxBoxSizer *item7 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item8 = new wxStaticText( parent, ID_TEXT, _("Pop out when :"), wxDefaultPosition, wxDefaultSize, 0 );
    item7->Add( item8, 0, wxALIGN_CENTER_VERTICAL|wxTOP|wxBOTTOM, 5 );

    wxCheckBox *item9 = new wxCheckBox( parent, IDC_CB_TBN_ONLOG, _("New entry on log"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->Enable( FALSE );
    item7->Add( item9, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxCheckBox *item10 = new wxCheckBox( parent, IDC_CB_TBN_ONCHAT, _("Starts a new chat session"), wxDefaultPosition, wxDefaultSize, 0 );
    item10->Enable( FALSE );
    item7->Add( item10, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxCheckBox *item11 = new wxCheckBox( parent, IDC_CB_TBN_POP_ALWAYS, _("A new chat message is received"), wxDefaultPosition, wxDefaultSize, 0 );
    item11->Enable( FALSE );
    item7->Add( item11, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxCheckBox *item12 = new wxCheckBox( parent, IDC_CB_TBN_ONDOWNLOAD, _("A download is added or finished"), wxDefaultPosition, wxDefaultSize, 0 );
    item12->Enable( FALSE );
    item7->Add( item12, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxCheckBox *item13 = new wxCheckBox( parent, IDC_CB_TBN_ONNEWVERSION, _("New aMule version detected"), wxDefaultPosition, wxDefaultSize, 0 );
    item13->Enable( FALSE );
    item7->Add( item13, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxCheckBox *item14 = new wxCheckBox( parent, IDC_CB_TBN_IMPORTATNT, _("Urgent OOD, serverconnection lost"), wxDefaultPosition, wxDefaultSize, 0 );
    item14->SetForegroundColour( *wxRED );
    item14->Enable( FALSE );
    item7->Add( item14, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    item1->Add( item7, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxStaticBox *item16 = new wxStaticBox( parent, -1, _("Notify by Mail") );
    wxStaticBoxSizer *item15 = new wxStaticBoxSizer( item16, wxVERTICAL );

    wxCheckBox *item17 = new wxCheckBox( parent, IDC_SENDMAIL, _("Send an Email when transfer complete."), wxDefaultPosition, wxDefaultSize, 0 );
    item17->Enable( FALSE );
    item15->Add( item17, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxFlexGridSizer *item18 = new wxFlexGridSizer( 2, 0, 0 );
    item18->AddGrowableCol( 1 );

    wxStaticText *item19 = new wxStaticText( parent, ID_TEXT, _("SMTP server :"), wxDefaultPosition, wxDefaultSize, 0 );
    item18->Add( item19, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxTextCtrl *item20 = new wxTextCtrl( parent, IDC_SMTP, wxT(""), wxDefaultPosition, wxDefaultSize, wxVSCROLL );
    item20->Enable( FALSE );
    item18->Add( item20, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item21 = new wxStaticText( parent, ID_TEXT, _("Email Address :"), wxDefaultPosition, wxDefaultSize, 0 );
    item18->Add( item21, 0, wxALIGN_CENTER|wxRIGHT, 5 );

    wxTextCtrl *item22 = new wxTextCtrl( parent, IDC_EMAIL, wxT(""), wxDefaultPosition, wxSize(80,-1), 0 );
    item22->Enable( FALSE );
    item18->Add( item22, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    item15->Add( item18, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item15, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *PreferencesaMuleTweaksTab( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, _("aMule Tweaks Advertisements && Parameters") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxStaticBox *item4 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item3 = new wxStaticBoxSizer( item4, wxVERTICAL );

    wxStaticText *item5 = new wxStaticText( parent, IDC_WARNING, _("!!! WARNING !!!"), wxDefaultPosition, wxDefaultSize, 0 );
    item5->SetForegroundColour( *wxRED );
    item5->SetFont( wxFont( 24, wxROMAN, wxNORMAL, wxNORMAL ) );
#if defined(__WXMSW__) && !(wxCHECK_VERSION(2,3,0))
    item5->SetSize( item5->GetBestSize() );
#endif
    item3->Add( item5, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxALL, 5 );

    wxStaticText *item6 = new wxStaticText( parent, IDC_STATIC, 
        _("Do not change these setting unless you know\n"
          "what you are doing, otherwise you can easily\n"
          "make things worse for yourself.\n"
          "\n"
          "aMule will run fine without adjusting any of\n"
          "these settings."),
        wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE );
    item6->SetForegroundColour( *wxRED );
    item3->Add( item6, 1, wxADJUST_MINSIZE|wxALIGN_CENTER|wxALL, 5 );

    item1->Add( item3, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticText *item7 = new wxStaticText( parent, IDC_MAXCON5SECLABEL, _("Max new connections / 5 secs"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item7, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxSpinCtrl *item8 = new wxSpinCtrl( parent, IDC_MAXCON5SEC, wxT("20"), wxDefaultPosition, wxSize(100,-1), 0, 5, 500, 20 );
    item1->Add( item8, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item9 = new wxCheckBox( parent, IDC_VERBOSE, _("Verbose (additional program feedback)"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item9, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item10 = new wxCheckBox( parent, IDC_AUTOTAKEED2KLINKS, _("Autotake ED2K Links only during runtime"), wxDefaultPosition, wxDefaultSize, 0 );
    item10->SetValue( TRUE );
    item1->Add( item10, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item11 = new wxCheckBox( parent, IDC_SHOWRATEONTITLE, _("Show transfer rates on title"), wxDefaultPosition, wxDefaultSize, 0 );
    item11->SetValue( TRUE );
    item1->Add( item11, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item12 = new wxStaticText( parent, IDC_FILEBUFFERSIZE_STATIC, _("File Buffer Size: 240000 bytes"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item12, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxSlider *item13 = new wxSlider( parent, IDC_FILEBUFFERSIZE, 16, 1, 100, wxDefaultPosition, wxSize(100,-1), wxSL_HORIZONTAL );
    item1->Add( item13, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item14 = new wxStaticText( parent, IDC_QUEUESIZE_STATIC, _("Upload Queue Size: 5000 clients"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item14, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxSlider *item15 = new wxSlider( parent, IDC_QUEUESIZE, 50, 5, 100, wxDefaultPosition, wxSize(100,-1), wxSL_HORIZONTAL );
    item1->Add( item15, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item16 = new wxStaticText( parent, IDC_SERVERKEEPALIVE_LABEL, _("Server connection refresh interval: Disable"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item16, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxSlider *item17 = new wxSlider( parent, IDC_SERVERKEEPALIVE, 0, 0, 30, wxDefaultPosition, wxSize(100,-1), wxSL_HORIZONTAL );
    item1->Add( item17, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item1, 1, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *PreferencesGuiTweaksTab( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, _("Arrange Downloads") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxCheckBox *item3 = new wxCheckBox( parent, IDC_ENABLE_AUTO_ARRANGING, _("Enable auto-arranging download list "), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item3, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxRadioButton *item4 = new wxRadioButton( parent, ID_RADIOBUTTON, _("Download speed"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item4, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxRadioButton *item5 = new wxRadioButton( parent, ID_RADIOBUTTON, _("Number of sources"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item5, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxRadioButton *item6 = new wxRadioButton( parent, ID_RADIOBUTTON, _("Status"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item6, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    item0->Add( item1, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticBox *item8 = new wxStaticBox( parent, -1, _("GTK Theme Selector") );
    wxStaticBoxSizer *item7 = new wxStaticBoxSizer( item8, wxVERTICAL );

    wxBoxSizer *item9 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item10 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item11 = new wxStaticText( parent, ID_TEXT, _("Theme :"), wxDefaultPosition, wxDefaultSize, 0 );
    item10->Add( item11, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxRIGHT, 5 );

    wxString *strs12 = (wxString*) NULL;
    wxComboBox *item12 = new wxComboBox( parent, IDC_SELECTED_THEME, wxT(""), wxDefaultPosition, wxSize(200,-1), 0, strs12, wxCB_DROPDOWN );
    item12->Enable( FALSE );
    item10->Add( item12, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    item9->Add( item10, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item7->Add( item9, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item13 = new wxCheckBox( parent, IDC_USE_FONT, _("Use Font "), wxDefaultPosition, wxDefaultSize, 0 );
    item13->Enable( FALSE );
    item7->Add( item13, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxBoxSizer *item14 = new wxBoxSizer( wxHORIZONTAL );

    wxTextCtrl *item15 = new wxTextCtrl( parent, IDC_SELECTED_FONT, wxT(""), wxDefaultPosition, wxSize(170,-1), 0 );
    item15->Enable( FALSE );
    item14->Add( item15, 1, wxALIGN_CENTER, 5 );

    wxButton *item16 = new wxButton( parent, IDC_FONT_BUTTON, _("Font"), wxDefaultPosition, wxSize(50,25), 0 );
    item16->Enable( FALSE );
    item14->Add( item16, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT, 5 );

    item7->Add( item14, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxBOTTOM, 5 );

    wxBoxSizer *item17 = new wxBoxSizer( wxHORIZONTAL );

    wxButton *item18 = new wxButton( parent, IDC_PREVIEW_THEME, _("Preview"), wxDefaultPosition, wxDefaultSize, 0 );
    item18->Enable( FALSE );
    item17->Add( item18, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxRIGHT|wxTOP|wxBOTTOM, 5 );

    wxButton *item19 = new wxButton( parent, IDC_APPLY_THEME, _("Apply"), wxDefaultPosition, wxDefaultSize, 0 );
    item19->Enable( FALSE );
    item17->Add( item19, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxALL, 5 );

    item7->Add( item17, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item7, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxStaticBox *item21 = new wxStaticBox( parent, -1, _("Download Queue Files Progress") );
    wxStaticBoxSizer *item20 = new wxStaticBoxSizer( item21, wxVERTICAL );

    wxCheckBox *item22 = new wxCheckBox( parent, IDC_PERCENT, _("Show percentage"), wxDefaultPosition, wxDefaultSize, 0 );
    item22->SetValue( TRUE );
    item20->Add( item22, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    wxCheckBox *item23 = new wxCheckBox( parent, IDC_PROGBAR, _("Show progressbar "), wxDefaultPosition, wxDefaultSize, 0 );
    item23->SetValue( TRUE );
    item20->Add( item23, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    wxFlexGridSizer *item24 = new wxFlexGridSizer( 2, 0, 0 );

    wxBoxSizer *item25 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item26 = new wxStaticText( parent, IDC_3DDEP, _("Progressbar Style"), wxDefaultPosition, wxDefaultSize, 0 );
    item25->Add( item26, 1, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item27 = new wxStaticText( parent, ID_TEXT, wxT(""), wxDefaultPosition, wxDefaultSize, 0 );
    item25->Add( item27, 0, wxALIGN_CENTER_VERTICAL, 5 );

    item24->Add( item25, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxBoxSizer *item28 = new wxBoxSizer( wxVERTICAL );

    wxSlider *item29 = new wxSlider( parent, IDC_3DDEPTH, 5, 0, 5, wxDefaultPosition, wxSize(200,-1), wxSL_HORIZONTAL );
    item28->Add( item29, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item30 = new wxBoxSizer( wxVERTICAL );

    wxGridSizer *item31 = new wxGridSizer( 1, 0, 0, 0 );

    wxStaticText *item32 = new wxStaticText( parent, IDC_FLAT, _("Flat"), wxDefaultPosition, wxDefaultSize, 0 );
    item31->Add( item32, 0, wxALIGN_CENTER_VERTICAL|wxLEFT, 5 );

    wxStaticText *item33 = new wxStaticText( parent, IDC_ROUND, _("Round"), wxDefaultPosition, wxDefaultSize, 0 );
    item31->Add( item33, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    item30->Add( item31, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item28->Add( item30, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item24->Add( item28, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT, 5 );

    item20->Add( item24, 1, wxGROW|wxALIGN_CENTER_VERTICAL|wxTOP, 5 );

    item0->Add( item20, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticBox *item35 = new wxStaticBox( parent, -1, _("Misc Gui Tweaks") );
    wxStaticBoxSizer *item34 = new wxStaticBoxSizer( item35, wxVERTICAL );

    wxCheckBox *item36 = new wxCheckBox( parent, IDC_NEWSTYLETABS, _("Use old style tabs on preferences"), wxDefaultPosition, wxDefaultSize, 0 );
    item34->Add( item36, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    wxCheckBox *item37 = new wxCheckBox( parent, IDC_FED2KLH, _("Show Fast ED2K Links Handler"), wxDefaultPosition, wxDefaultSize, 0 );
    item37->SetValue( TRUE );
    item34->Add( item37, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    item0->Add( item34, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *PreferencesSourcesDroppingTab( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, _("No Needed Sources Handling") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxCheckBox *item3 = new wxCheckBox( parent, IDC_ENABLE_AUTO_NNS, _("Enable auto drop No Needed Sources"), wxDefaultPosition, wxDefaultSize, 0 );
    item3->SetValue( TRUE );
    item1->Add( item3, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    item0->Add( item1, 0, wxADJUST_MINSIZE|wxGROW|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxStaticBox *item5 = new wxStaticBox( parent, -1, _("Extended Dropping") );
    wxStaticBoxSizer *item4 = new wxStaticBoxSizer( item5, wxVERTICAL );

    wxRadioButton *item6 = new wxRadioButton( parent, IDC_ENABLE_AUTO_NNS, _("Drop sources anyway"), wxDefaultPosition, wxDefaultSize, 0 );
    item6->SetValue( TRUE );
    item4->Add( item6, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxRadioButton *item7 = new wxRadioButton( parent, IDC_AUTO_NNS_EXTENDED_RADIO, _("Send sources to any other file before dropping (High CPU)"), wxDefaultPosition, wxDefaultSize, 0 );
    item4->Add( item7, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    item0->Add( item4, 0, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticBox *item9 = new wxStaticBox( parent, -1, _("Full Queue Sources Handling") );
    wxStaticBoxSizer *item8 = new wxStaticBoxSizer( item9, wxVERTICAL );

    wxCheckBox *item10 = new wxCheckBox( parent, IDC_ENABLE_AUTO_FQS, _("Enable auto drop Full Queue Sources"), wxDefaultPosition, wxDefaultSize, 0 );
    item10->SetValue( TRUE );
    item8->Add( item10, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    item0->Add( item8, 0, wxADJUST_MINSIZE|wxGROW|wxLEFT|wxRIGHT, 5 );

    wxStaticBox *item12 = new wxStaticBox( parent, -1, _("High Queue Rating Sources Handling") );
    wxStaticBoxSizer *item11 = new wxStaticBoxSizer( item12, wxVERTICAL );

    wxCheckBox *item13 = new wxCheckBox( parent, IDC_ENABLE_AUTO_HQRS, _("Enable auto drop High Queue Rating Sources"), wxDefaultPosition, wxDefaultSize, 0 );
    item13->SetValue( TRUE );
    item11->Add( item13, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxFlexGridSizer *item14 = new wxFlexGridSizer( 4, 0, 0 );

    wxStaticText *item15 = new wxStaticText( parent, ID_TEXT, _("High Queue Rating value"), wxDefaultPosition, wxDefaultSize, 0 );
    item14->Add( item15, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxSpinCtrl *item16 = new wxSpinCtrl( parent, IDC_HQR_VALUE, wxT("1200"), wxDefaultPosition, wxSize(100,-1), 0, 300, 3000, 1200 );
    item14->Add( item16, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item17 = new wxStaticText( parent, ID_TEXT, _("(Min 300 / Max 3000)"), wxDefaultPosition, wxDefaultSize, 0 );
    item14->Add( item17, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    item11->Add( item14, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item11, 0, wxADJUST_MINSIZE|wxGROW|wxLEFT|wxRIGHT|wxBOTTOM, 5 );

    wxStaticBox *item19 = new wxStaticBox( parent, -1, _("Auto Drop Sources Timer") );
    wxStaticBoxSizer *item18 = new wxStaticBoxSizer( item19, wxVERTICAL );

    wxFlexGridSizer *item20 = new wxFlexGridSizer( 4, 0, 0 );

    wxStaticText *item21 = new wxStaticText( parent, ID_TEXT, _("Timer (in secs)"), wxDefaultPosition, wxDefaultSize, 0 );
    item20->Add( item21, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxSpinCtrl *item22 = new wxSpinCtrl( parent, IDC_AUTO_DROP_TIMER, wxT("240"), wxDefaultPosition, wxSize(100,-1), 0, 60, 3600, 240 );
    item20->Add( item22, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item23 = new wxStaticText( parent, ID_TEXT, _("(Min 60 / 3600 Max)"), wxDefaultPosition, wxDefaultSize, 0 );
    item20->Add( item23, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    item18->Add( item20, 0, wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item18, 0, wxADJUST_MINSIZE|wxGROW|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *PreferencesRemoteControlsTab( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, _("Webserver Parameters") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxCheckBox *item3 = new wxCheckBox( parent, IDC_ENABLE_WEB, _("Enable Webserver"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item3, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item4 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item5 = new wxStaticText( parent, ID_TEXT, _("Webserver port"), wxDefaultPosition, wxDefaultSize, 0 );
    item4->Add( item5, 1, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxSpinCtrl *item6 = new wxSpinCtrl( parent, IDC_WEB_PORT, wxT("10000"), wxDefaultPosition, wxSize(100,-1), 0, 1025, 65535, 10000 );
    item4->Add( item6, 0, wxALIGN_CENTER, 5 );

    item1->Add( item4, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item7 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item8 = new wxStaticText( parent, ID_TEXT, _("Page Refresh Time (in secs)"), wxDefaultPosition, wxDefaultSize, 0 );
    item7->Add( item8, 1, wxADJUST_MINSIZE|wxALIGN_CENTER, 5 );

    wxSpinCtrl *item9 = new wxSpinCtrl( parent, IDC_WEB_REFRESH_TIMEOUT, wxT("120"), wxDefaultPosition, wxSize(100,-1), 0, 120, 600, 120 );
    item7->Add( item9, 0, wxALIGN_CENTER, 5 );

    item1->Add( item7, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item10 = new wxCheckBox( parent, IDC_WEB_GZIP, _("Enable Gzip compression"), wxDefaultPosition, wxDefaultSize, 0 );
    item10->SetValue( TRUE );
    item1->Add( item10, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item11 = new wxCheckBox( parent, IDC_ENABLE_WEB_LOW, _("Enable Low rights User"), wxDefaultPosition, wxDefaultSize, 0 );
    item11->SetValue( TRUE );
    item1->Add( item11, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxGridSizer *item12 = new wxGridSizer( 2, 0, 0 );

    wxStaticText *item13 = new wxStaticText( parent, ID_TEXT, _("Full rights password"), wxDefaultPosition, wxDefaultSize, 0 );
    item12->Add( item13, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxTextCtrl *item14 = new wxTextCtrl( parent, IDC_WEB_PASSWD, wxT(""), wxDefaultPosition, wxSize(80,-1), wxTE_PASSWORD );
    item12->Add( item14, 1, wxGROW|wxALIGN_RIGHT, 5 );

    wxStaticText *item15 = new wxStaticText( parent, ID_TEXT, _("Low rights password"), wxDefaultPosition, wxDefaultSize, 0 );
    item12->Add( item15, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL|wxRIGHT, 5 );

    wxTextCtrl *item16 = new wxTextCtrl( parent, IDC_WEB_PASSWD_LOW, wxT(""), wxDefaultPosition, wxSize(80,-1), wxTE_PASSWORD );
    item12->Add( item16, 1, wxGROW|wxALIGN_RIGHT, 5 );

    item1->Add( item12, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticBox *item18 = new wxStaticBox( parent, -1, _("External Connection Parameters") );
    wxStaticBoxSizer *item17 = new wxStaticBoxSizer( item18, wxVERTICAL );

    wxCheckBox *item19 = new wxCheckBox( parent, IDC_EXT_CONN_ACCEPT, _("Accept external connections"), wxDefaultPosition, wxDefaultSize, 0 );
    item17->Add( item19, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxCheckBox *item20 = new wxCheckBox( parent, IDC_EXT_CONN_USETCP, _("Use TCP ports instead of unix local sockets"), wxDefaultPosition, wxDefaultSize, 0 );
    item17->Add( item20, 0, wxADJUST_MINSIZE|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item21 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item22 = new wxStaticText( parent, ID_TEXT, _("External TCP port"), wxDefaultPosition, wxDefaultSize, 0 );
    item21->Add( item22, 1, wxALIGN_CENTER|wxRIGHT, 5 );

    wxSpinCtrl *item23 = new wxSpinCtrl( parent, IDC_EXT_CONN_TCP_PORT, wxT("10000"), wxDefaultPosition, wxSize(100,-1), 0, 1025, 65535, 10000 );
    item21->Add( item23, 0, wxALIGN_CENTER, 5 );

    item17->Add( item21, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item24 = new wxBoxSizer( wxHORIZONTAL );

    wxCheckBox *item25 = new wxCheckBox( parent, IDC_EXT_CONN_PASSWD_ENABLE, _("Enable password"), wxDefaultPosition, wxDefaultSize, 0 );
    item24->Add( item25, 1, wxALIGN_CENTER, 5 );

    wxTextCtrl *item26 = new wxTextCtrl( parent, IDC_EXT_CONN_PASSWD, wxT(""), wxDefaultPosition, wxDefaultSize, 0 );
    item24->Add( item26, 1, wxALIGN_CENTER, 5 );

    item17->Add( item24, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item17, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *preferencesDlgTop( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxNotebook *item2 = new wxNotebook( parent, ID_NOTEBOOK_TOP, wxDefaultPosition, wxDefaultSize, 0 );
    wxNotebookSizer *item1 = new wxNotebookSizer( item2 );

    wxPanel *item3 = new wxPanel( item2, -1 );
    PreferencesGeneralTab( item3, FALSE );
    item2->AddPage( item3, _("General") );

    wxPanel *item4 = new wxPanel( item2, -1 );
    PreferencesConnectionTab( item4, FALSE );
    item2->AddPage( item4, _("Connection") );

    wxPanel *item5 = new wxPanel( item2, -1 );
    PreferencesRemoteControlsTab( item5, FALSE );
    item2->AddPage( item5, _("Remote Controls") );

    wxPanel *item6 = new wxPanel( item2, -1 );
    PreferencesServerTab( item6, FALSE );
    item2->AddPage( item6, _("Server") );

    wxPanel *item7 = new wxPanel( item2, -1 );
    PreferencesFilesTab( item7, FALSE );
    item2->AddPage( item7, _("Files") );

    wxPanel *item8 = new wxPanel( item2, -1 );
    PreferencesSourcesDroppingTab( item8, FALSE );
    item2->AddPage( item8, _("Sources Dropping") );

    wxPanel *item9 = new wxPanel( item2, -1 );
    PreferencesDirectoriesTab( item9, FALSE );
    item2->AddPage( item9, _("Directories") );

    wxPanel *item10 = new wxPanel( item2, -1 );
    PreferencesStatisticsTab( item10, FALSE );
    item2->AddPage( item10, _("Statistics") );

    wxPanel *item11 = new wxPanel( item2, -1 );
    PreferencesNotifyTab( item11, FALSE );
    item2->AddPage( item11, _("Notify") );

    wxPanel *item12 = new wxPanel( item2, -1 );
    PreferencesaMuleTweaksTab( item12, FALSE );
    item2->AddPage( item12, _("aMule Tweaks") );

    wxPanel *item13 = new wxPanel( item2, -1 );
    PreferencesGuiTweaksTab( item13, FALSE );
    item2->AddPage( item13, _("Gui Tweaks") );

    item0->Add( item1, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticBox *item15 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item14 = new wxStaticBoxSizer( item15, wxHORIZONTAL );

    wxButton *item16 = new wxButton( parent, ID_PREFS_OK_TOP, _("OK"), wxDefaultPosition, wxDefaultSize, 0 );
    item16->SetDefault();
    item14->Add( item16, 0, wxALIGN_CENTER|wxALL, 5 );

    wxButton *item17 = new wxButton( parent, ID_PREFS_CANCEL_TOP, _("Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    item14->Add( item17, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item14, 0, wxALIGN_CENTER|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *CategoriesEditWindow( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxBoxSizer *item3 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item4 = new wxStaticText( parent, IDC_STATIC_TITLE, _("Title :"), wxDefaultPosition, wxDefaultSize, 0 );
    item3->Add( item4, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT|wxRIGHT, 5 );

    wxTextCtrl *item5 = new wxTextCtrl( parent, IDC_TITLE, wxT(""), wxDefaultPosition, wxDefaultSize, 0 );
    item3->Add( item5, 1, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_HORIZONTAL|wxRIGHT, 5 );

    item1->Add( item3, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxTOP|wxBOTTOM, 5 );

    wxBoxSizer *item6 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item7 = new wxStaticText( parent, IDC_STATIC_COMMENT, _("Comment :"), wxDefaultPosition, wxDefaultSize, 0 );
    item6->Add( item7, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT|wxRIGHT, 5 );

    wxTextCtrl *item8 = new wxTextCtrl( parent, IDC_COMMENT, wxT(""), wxDefaultPosition, wxDefaultSize, 0 );
    item6->Add( item8, 1, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_HORIZONTAL|wxRIGHT, 5 );

    item1->Add( item6, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxBOTTOM, 5 );

    wxBoxSizer *item9 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item10 = new wxStaticText( parent, IDC_STATIC_INCOMING, _("Incoming Dir :"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item10, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT|wxRIGHT, 5 );

    wxTextCtrl *item11 = new wxTextCtrl( parent, IDC_INCOMING, wxT(""), wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item11, 1, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    wxButton *item12 = new wxButton( parent, IDC_BROWSE, _("..."), wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item12, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT, 5 );

    item1->Add( item9, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxBOTTOM, 5 );

    wxFlexGridSizer *item13 = new wxFlexGridSizer( 2, 0, 0 );

    wxStaticText *item14 = new wxStaticText( parent, IDC_STATIC_PRIO, _("Change priority for new assigned files :"), wxDefaultPosition, wxDefaultSize, 0 );
    item13->Add( item14, 0, wxADJUST_MINSIZE|wxLEFT|wxRIGHT, 5 );

    wxString strs15[] = 
    {
        _("Dont change"), 
        _("Low"), 
        _("Normal"), 
        _("High"), 
        _("Auto")
    };
    wxChoice *item15 = new wxChoice( parent, IDC_PRIOCOMBO, wxDefaultPosition, wxSize(100,20), 5, strs15, 0 );
    item13->Add( item15, 0, wxGROW|wxRIGHT, 5 );

    item1->Add( item13, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxBOTTOM, 5 );

    wxFlexGridSizer *item16 = new wxFlexGridSizer( 3, 0, 0 );
    item16->AddGrowableCol( 2 );

    wxStaticText *item17 = new wxStaticText( parent, IDC_STATIC_COLOR, _("Select color for this Category (currently selected) :"), wxDefaultPosition, wxDefaultSize, 0 );
    item16->Add( item17, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticBox *item19 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item18 = new wxStaticBoxSizer( item19, wxVERTICAL );

    wxStaticBitmap *item20 = new wxStaticBitmap( parent, ID_BOX_CATCOLOR, amuleSpecial( 0 ), wxDefaultPosition, wxDefaultSize );
    item18->Add( item20, 0, wxALIGN_CENTER, 5 );

    item16->Add( item18, 0, wxALIGN_CENTER, 5 );

    wxButton *item21 = new wxButton( parent, IDC_CATCOLOR, _("Select"), wxDefaultPosition, wxDefaultSize, 0 );
    item16->Add( item21, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    item1->Add( item16, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticBox *item23 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item22 = new wxStaticBoxSizer( item23, wxHORIZONTAL );

    wxButton *item24 = new wxButton( parent, wxID_OK, _("OK"), wxDefaultPosition, wxDefaultSize, 0 );
    item24->SetDefault();
    item22->Add( item24, 0, wxALIGN_CENTER|wxALL, 5 );

    wxButton *item25 = new wxButton( parent, wxID_CANCEL, _("Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    item22->Add( item25, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item22, 0, wxALIGN_CENTER|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *transferDlg( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item1 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBox *item3 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item2 = new wxStaticBoxSizer( item3, wxVERTICAL );

    wxSplitterWindow *item4 = new wxSplitterWindow( parent, ID_SPLATTER, wxDefaultPosition, wxDefaultSize, wxSP_LIVE_UPDATE );
    item4->SetMinimumPaneSize( 90 );
    wxPanel *item5 = new wxPanel( item4, -1 );
    transferTopPane( item5, FALSE, TRUE );
    wxPanel *item6 = new wxPanel( item4, -1 );
    transferBottomPane( item6, FALSE, TRUE );
    item4->SplitHorizontally( item5, item6 );
    item4->SetName( "splitterWnd" );
    item2->Add( item4, 1, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item7 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item8 = new wxStaticText( parent, ID_TEXT, _("Clients on queue :"), wxDefaultPosition, wxDefaultSize, 0 );
    item7->Add( item8, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item9 = new wxStaticText( parent, ID_TEXT, _("0"), wxDefaultPosition, wxDefaultSize, wxST_NO_AUTORESIZE );
    item9->SetForegroundColour( *wxBLUE );
    item9->SetName( "clientCount" );
    item7->Add( item9, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxLEFT|wxRIGHT, 5 );

    item2->Add( item7, 0, wxALIGN_CENTER_VERTICAL, 5 );

    item1->Add( item2, 1, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    item0->Add( item1, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *ServerInfoLog( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item1 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBitmap *item2 = new wxStaticBitmap( parent, ID_STATICBITMAP, amuleDlgImages( 2 ), wxDefaultPosition, wxDefaultSize );
    item2->SetToolTip( _("Display server motd when connected ...") );
    item1->Add( item2, 0, wxALIGN_CENTER|wxALL, 5 );

    wxStaticText *item3 = new wxStaticText( parent, ID_TEXT, _("Server Info"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item3, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item1, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item4 = new wxBoxSizer( wxHORIZONTAL );

    wxBoxSizer *item5 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item6 = new wxBoxSizer( wxHORIZONTAL );

    wxTextCtrl *item7 = new wxTextCtrl( parent, ID_SERVERINFO, wxT(""), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_READONLY|wxVSCROLL|wxHSCROLL );
    item6->Add( item7, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    wxBoxSizer *item8 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBox *item10 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item9 = new wxStaticBoxSizer( item10, wxVERTICAL );

    wxButton *item11 = new wxButton( parent, ID_BTN_RESET_SERVER, _("Reset"), wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item11, 0, wxALIGN_CENTER|wxALL, 5 );

    item8->Add( item9, 0, wxALIGN_CENTER|wxALL, 5 );

    item6->Add( item8, 0, wxALIGN_BOTTOM|wxALIGN_CENTER_HORIZONTAL, 5 );

    item5->Add( item6, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item4->Add( item5, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item4, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *aMuleLog( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item1 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBitmap *item2 = new wxStaticBitmap( parent, ID_STATICBITMAP, amuleDlgImages( 3 ), wxDefaultPosition, wxDefaultSize );
    item1->Add( item2, 0, wxALIGN_CENTER|wxALL, 5 );

    wxStaticText *item3 = new wxStaticText( parent, ID_TEXT, _("aMule Log"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item3, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item1, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item4 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item5 = new wxBoxSizer( wxHORIZONTAL );

    wxTextCtrl *item6 = new wxTextCtrl( parent, ID_LOGVIEW, wxT(""), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_READONLY|wxVSCROLL|wxHSCROLL );
    item5->Add( item6, 1, wxGROW|wxALIGN_CENTER_HORIZONTAL, 5 );

    wxBoxSizer *item7 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBox *item9 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item8 = new wxStaticBoxSizer( item9, wxVERTICAL );

    wxButton *item10 = new wxButton( parent, ID_BTN_RESET, _("Reset"), wxDefaultPosition, wxDefaultSize, 0 );
    item8->Add( item10, 0, wxALIGN_CENTER|wxALL, 5 );

    item7->Add( item8, 0, wxALIGN_CENTER|wxALL, 5 );

    item5->Add( item7, 0, wxALIGN_BOTTOM|wxALIGN_CENTER_HORIZONTAL, 5 );

    item4->Add( item5, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item4, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *serverListDlgUp( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxBoxSizer *item3 = new wxBoxSizer( wxHORIZONTAL );

    wxBitmapButton *item4 = new wxBitmapButton( parent, ID_UPDATELIST, amuleDlgImages( 0 ), wxDefaultPosition, wxDefaultSize );
    item4->SetToolTip( _("Click on this button to update the servers list from URL ...") );
    item4->SetName( "updateList" );
    item3->Add( item4, 0, wxALIGN_CENTER, 5 );

    wxStaticText *item5 = new wxStaticText( parent, ID_TEXT, _("Serverlist"), wxDefaultPosition, wxDefaultSize, 0 );
    item5->SetName( "serverListLabel" );
    item3->Add( item5, 0, wxADJUST_MINSIZE|wxALIGN_CENTER|wxALL, 5 );

    wxTextCtrl *item6 = new wxTextCtrl( parent, IDC_SERVERLISTURL, _("http://www.srv1000.com/azz/server.met"), wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER );
    item3->Add( item6, 1, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_HORIZONTAL|wxLEFT|wxTOP|wxBOTTOM, 5 );

    item1->Add( item3, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxBoxSizer *item7 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item8 = new wxStaticText( parent, ID_TEXT, _("Manual Server Add : Name"), wxDefaultPosition, wxDefaultSize, 0 );
    item7->Add( item8, 0, wxALIGN_CENTER|wxRIGHT|wxTOP|wxBOTTOM, 5 );

    wxTextCtrl *item9 = new wxTextCtrl( parent, IDC_SERVERNAME, wxT(""), wxDefaultPosition, wxDefaultSize, 0 );
    item7->Add( item9, 1, wxADJUST_MINSIZE|wxGROW|wxALIGN_CENTER_HORIZONTAL|wxALL, 5 );

    wxStaticText *item10 = new wxStaticText( parent, ID_TEXT, _("IP:Port"), wxDefaultPosition, wxDefaultSize, 0 );
    item7->Add( item10, 0, wxALIGN_CENTER|wxALL, 5 );

    wxTextCtrl *item11 = new wxTextCtrl( parent, IDC_IPADDRESS, wxT(""), wxDefaultPosition, wxSize(150,-1), 0 );
    item7->Add( item11, 0, wxALIGN_CENTER|wxALL, 5 );

    wxStaticText *item12 = new wxStaticText( parent, ID_TEXT, _(":"), wxDefaultPosition, wxDefaultSize, 0 );
    item7->Add( item12, 0, wxALIGN_CENTER|wxTOP|wxBOTTOM, 5 );

    wxTextCtrl *item13 = new wxTextCtrl( parent, IDC_SPORT, wxT(""), wxDefaultPosition, wxDefaultSize, 0 );
    item7->Add( item13, 0, wxALIGN_CENTER|wxALL, 5 );

    wxButton *item14 = new wxButton( parent, ID_ADDTOLIST, _("Add"), wxDefaultPosition, wxDefaultSize, 0 );
    item14->SetToolTip( _("Add manually a server (fill fields to the left before) ...") );
    item7->Add( item14, 0, wxALIGN_CENTER|wxLEFT|wxTOP|wxBOTTOM, 5 );

    item1->Add( item7, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    CServerListCtrl *item15 = new CServerListCtrl( parent, ID_SERVERLIST, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxSUNKEN_BORDER );
    item1->Add( item15, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item1, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *serverListDlgDown( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxNotebook *item4 = new wxNotebook( parent, ID_SRVLOG_NOTEBOOK, wxDefaultPosition, wxDefaultSize, 0 );
    wxNotebookSizer *item3 = new wxNotebookSizer( item4 );

    wxPanel *item5 = new wxPanel( item4, -1 );
    aMuleLog( item5, FALSE );
    item4->AddPage( item5, _("aMule Log") );

    wxPanel *item6 = new wxPanel( item4, -1 );
    ServerInfoLog( item6, FALSE );
    item4->AddPage( item6, _("Server Info") );

    item1->Add( item3, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( item1, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *preferencesDlgLeft( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxNotebook *item2 = new wxNotebook( parent, ID_NOTEBOOK_LEFT, wxDefaultPosition, wxSize(400,400), wxNB_LEFT );
    wxNotebookSizer *item1 = new wxNotebookSizer( item2 );

    wxPanel *item3 = new wxPanel( item2, -1 );
    PreferencesGeneralTab( item3, FALSE );
    item2->AddPage( item3, _("General") );

    wxPanel *item4 = new wxPanel( item2, -1 );
    PreferencesConnectionTab( item4, FALSE );
    item2->AddPage( item4, _("Connection") );

    wxPanel *item5 = new wxPanel( item2, -1 );
    PreferencesRemoteControlsTab( item5, FALSE );
    item2->AddPage( item5, _("Remote Controls") );

    wxPanel *item6 = new wxPanel( item2, -1 );
    PreferencesServerTab( item6, FALSE );
    item2->AddPage( item6, _("Server") );

    wxPanel *item7 = new wxPanel( item2, -1 );
    PreferencesFilesTab( item7, FALSE );
    item2->AddPage( item7, _("Files") );

    wxPanel *item8 = new wxPanel( item2, -1 );
    PreferencesSourcesDroppingTab( item8, FALSE );
    item2->AddPage( item8, _("Sources Dropping") );

    wxPanel *item9 = new wxPanel( item2, -1 );
    PreferencesDirectoriesTab( item9, FALSE );
    item2->AddPage( item9, _("Directories") );

    wxPanel *item10 = new wxPanel( item2, -1 );
    PreferencesStatisticsTab( item10, FALSE );
    item2->AddPage( item10, _("Statistics") );

    wxPanel *item11 = new wxPanel( item2, -1 );
    PreferencesNotifyTab( item11, FALSE );
    item2->AddPage( item11, _("Notify") );

    wxPanel *item12 = new wxPanel( item2, -1 );
    PreferencesaMuleTweaksTab( item12, FALSE );
    item2->AddPage( item12, _("aMule Tweaks") );

    wxPanel *item13 = new wxPanel( item2, -1 );
    PreferencesGuiTweaksTab( item13, FALSE );
    item2->AddPage( item13, _("Gui Tweaks") );

    item0->Add( item1, 1, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticBox *item15 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item14 = new wxStaticBoxSizer( item15, wxHORIZONTAL );

    wxButton *item16 = new wxButton( parent, ID_PREFS_OK_LEFT, _("OK"), wxDefaultPosition, wxDefaultSize, 0 );
    item16->SetDefault();
    item14->Add( item16, 0, wxALIGN_CENTER|wxALL, 5 );

    wxButton *item17 = new wxButton( parent, ID_PREFS_CANCEL_LEFT, _("Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    item14->Add( item17, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item14, 0, wxALIGN_CENTER|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *LocaleWarning( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, _("Info") );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxStaticText *item3 = new wxStaticText( parent, ID_LOCALETEXT, 
        _("The selected locale seems not to be installed on your box\n"
          "You must generate it to use this language.\n"
          "A good start on linux systems is the file /etc/locale.gen and the package 'locales'\n"
          "Good luck!\n"
          "(Note: I'll try to set it anyway)"),
        wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE );
    item1->Add( item3, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item1, 0, wxALIGN_CENTER|wxALL, 5 );

    wxStaticBox *item5 = new wxStaticBox( parent, -1, wxT("") );
    wxStaticBoxSizer *item4 = new wxStaticBoxSizer( item5, wxVERTICAL );

    wxButton *item6 = new wxButton( parent, ID_OK, _("OK"), wxDefaultPosition, wxDefaultSize, 0 );
    item6->SetDefault();
    item4->Add( item6, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item4, 0, wxALIGN_CENTER|wxALL, 5 );

    wxCheckBox *item7 = new wxCheckBox( parent, ID_LOCALENEVERAGAIN, _("Never show this again"), wxDefaultPosition, wxDefaultSize, 0 );
    item0->Add( item7, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

// Implement menubar functions

// Implement toolbar functions

void muleToolbar( wxToolBar *parent )
{
    parent->SetMargins( 0, 0 );
    
    parent->AddTool( ID_BUTTONCONNECT, _("Connect"), connButImg( 0 ), wxNullBitmap, wxITEM_NORMAL, _("Connect to any server") );
    parent->AddSeparator();
    parent->AddTool( ID_BUTTONSERVERS, _("Servers"), amuleDlgImages( 20 ), wxNullBitmap, wxITEM_CHECK, _("Servers List Window") );
    parent->AddTool( ID_BUTTONSEARCH, _("Searches"), amuleDlgImages( 18 ), wxNullBitmap, wxITEM_CHECK, _("Searches Window") );
    parent->AddTool( ID_BUTTONTRANSFER, _("Transfers"), amuleDlgImages( 17 ), wxNullBitmap, wxITEM_CHECK, _("Files Transfers Window") );
    parent->AddTool( ID_BUTTONSHARED, _("SharedFiles"), amuleDlgImages( 21 ), wxNullBitmap, wxITEM_CHECK, _("Shared Files Window") );
    parent->AddTool( ID_BUTTONMESSAGES, _("Messages"), amuleDlgImages( 22 ), wxNullBitmap, wxITEM_CHECK, _("Messages Window") );
    parent->AddTool( ID_BUTTONSTATISTICS, _("Statistics"), amuleDlgImages( 16 ), wxNullBitmap, wxITEM_CHECK, _("Statistics Graph Window") );
    parent->AddSeparator();
    parent->AddTool( ID_BUTTONNEWPREFERENCES, _("Preferences"), amuleDlgImages( 19 ), wxNullBitmap, wxITEM_NORMAL, _("Preferences Settings Window") );
    
    parent->Realize();
}

// Implement bitmap functions

wxBitmap clientImages( size_t index )
{
    if (index == 0)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,0,0,0,0,0,0,0,
            0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,0,0,0,0,0,0,233,250,233,246,255,246,246,255,246,233,250,
            233,0,0,0,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,0,0,0,202,237,202,216,242,215,202,237,202,202,237,202,202,237,202,202,237,202,216,
            242,215,208,239,208,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,
            0,114,201,112,159,224,158,146,223,144,148,226,146,148,226,146,148,226,146,148,226,146,148,226,146,
            159,224,158,114,201,112,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,0,0,0,73,
            193,70,98,212,95,0,0,0,0,0,0,93,217,90,93,217,90,0,0,0,0,0,0,98,212,
            95,73,193,70,0,0,0,220,220,220,220,220,220,220,220,220,0,0,0,8,165,4,26,187,21,
            50,206,46,0,0,0,0,0,0,52,220,46,49,213,45,0,0,0,0,0,0,50,206,46,26,
            187,21,8,165,4,0,0,0,220,220,220,220,220,220,0,0,0,18,178,14,19,193,14,27,206,
            22,27,216,22,27,216,22,27,216,22,27,216,22,27,216,22,27,216,22,27,206,22,19,193,14,
            18,178,14,0,0,0,220,220,220,220,220,220,0,0,0,26,187,21,27,206,22,32,218,27,34,
            226,29,34,226,29,34,226,29,34,226,29,34,226,29,34,226,29,32,218,27,27,206,22,26,187,
            21,0,0,0,220,220,220,220,220,220,0,0,0,37,196,34,42,216,37,0,0,0,54,240,47,
            57,243,49,57,243,49,57,243,49,57,243,49,54,240,47,0,0,0,42,216,37,37,196,34,0,
            0,0,220,220,220,220,220,220,220,220,220,0,0,0,52,220,46,61,237,54,0,0,0,72,250,
            64,72,250,64,72,250,64,72,250,64,0,0,0,61,237,54,49,213,45,0,0,0,220,220,220,
            220,220,220,220,220,220,220,220,220,0,0,0,61,223,55,68,233,62,77,246,69,0,0,0,0,
            0,0,0,0,0,0,0,0,77,246,69,61,223,55,53,205,48,0,0,0,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,0,0,0,68,233,62,79,243,74,88,252,82,88,252,82,
            88,252,82,83,247,79,76,235,72,65,214,61,0,0,0,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,0,0,0,0,0,0,79,243,74,83,247,79,83,247,
            79,76,235,72,0,0,0,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,0,0,0,0,0,0,0,0,
            0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 1)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,0,0,0,0,0,0,0,
            0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,0,0,0,0,0,0,247,233,233,255,248,248,255,248,248,248,237,
            237,0,0,0,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,0,0,0,230,205,205,238,220,220,234,212,212,232,208,208,234,212,212,234,212,212,234,
            212,212,234,212,212,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,
            0,181,116,116,212,166,166,211,156,156,211,156,156,212,156,156,212,156,156,212,156,156,212,166,166,
            212,166,166,189,129,129,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,0,0,0,170,
            82,82,191,110,110,0,0,0,0,0,0,197,106,106,197,106,106,0,0,0,0,0,0,191,110,
            110,175,88,88,0,0,0,220,220,220,220,220,220,220,220,220,0,0,0,142,21,21,159,36,36,
            181,61,61,0,0,0,0,0,0,189,62,62,189,62,62,0,0,0,0,0,0,187,62,62,163,
            41,41,144,21,21,0,0,0,220,220,220,220,220,220,0,0,0,154,24,24,169,28,28,183,33,
            33,193,37,37,193,37,37,193,37,37,193,37,37,193,37,37,193,37,37,185,31,31,169,28,28,
            154,24,24,0,0,0,220,220,220,220,220,220,0,0,0,169,28,28,185,31,31,205,37,37,211,
            39,39,211,39,39,211,39,39,211,39,39,211,39,39,211,39,39,205,37,37,185,31,31,169,28,
            28,0,0,0,220,220,220,220,220,220,0,0,0,185,31,31,210,35,35,232,43,43,233,48,48,
            237,50,50,237,50,50,237,50,50,237,50,50,233,48,48,221,42,42,205,37,37,180,30,30,0,
            0,0,220,220,220,220,220,220,220,220,220,0,0,0,210,35,35,237,50,50,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,232,43,43,205,37,37,0,0,0,220,220,220,
            220,220,220,220,220,220,220,220,220,0,0,0,210,35,35,236,41,41,245,50,50,253,50,50,253,
            53,53,253,53,53,253,50,50,237,50,50,221,42,42,199,33,33,0,0,0,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,0,0,0,226,38,38,241,43,43,245,45,45,253,50,50,
            253,50,50,241,43,43,232,43,43,210,35,35,0,0,0,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,0,0,0,0,0,0,241,43,43,241,43,43,245,45,
            45,236,41,41,0,0,0,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,0,0,0,0,0,0,0,0,
            0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 2)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,0,0,0,0,0,0,0,
            0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,0,0,0,0,0,0,254,247,233,255,254,246,255,254,246,254,247,
            233,0,0,0,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,0,0,0,246,239,202,248,243,213,246,239,202,246,239,202,246,239,202,246,239,202,248,
            243,213,248,243,213,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,
            0,221,204,105,240,229,157,242,228,144,246,232,146,246,232,146,246,232,146,246,232,146,242,228,144,
            240,229,157,225,210,119,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,0,0,0,228,
            200,70,241,221,94,0,0,0,0,0,0,252,229,90,252,229,90,0,0,0,0,0,0,241,221,
            94,228,200,70,0,0,0,220,220,220,220,220,220,220,220,220,0,0,0,209,181,6,230,203,20,
            244,218,47,0,0,0,0,0,0,253,227,46,253,227,46,0,0,0,0,0,0,244,218,47,230,
            203,20,209,181,6,0,0,0,220,220,220,220,220,220,0,0,0,215,190,17,230,203,20,246,220,
            23,254,229,26,254,229,26,254,229,26,254,229,26,254,229,26,254,229,26,246,220,23,230,203,20,
            215,190,17,0,0,0,220,220,220,220,220,220,0,0,0,220,199,27,237,217,31,249,230,34,255,
            238,37,255,238,37,255,238,37,255,238,37,255,238,37,255,238,37,249,230,34,237,217,31,220,199,
            27,0,0,0,220,220,220,220,220,220,0,0,0,223,205,39,239,224,45,255,238,37,255,247,59,
            255,247,59,255,247,59,255,247,59,255,247,59,255,247,59,255,238,37,239,224,45,223,205,39,0,
            0,0,220,220,220,220,220,220,220,220,220,0,0,0,237,227,57,255,238,37,0,0,0,255,252,
            80,255,252,80,255,252,80,255,252,80,0,0,0,246,220,23,232,218,57,0,0,0,220,220,220,
            220,220,220,220,220,220,220,220,220,0,0,0,238,227,64,246,238,78,255,238,37,0,0,0,0,
            0,0,0,0,0,0,0,0,255,238,37,241,231,72,232,218,57,0,0,0,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,0,0,0,246,238,78,251,243,91,254,252,98,254,252,98,
            254,253,103,254,252,98,244,237,85,233,223,76,0,0,0,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,0,0,0,0,0,0,254,251,92,254,252,98,254,252,
            98,251,243,91,0,0,0,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,0,0,0,0,0,0,0,0,
            0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 3)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,0,0,0,0,0,0,0,
            0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,0,0,0,0,0,0,232,232,232,244,243,244,244,243,244,232,232,
            232,0,0,0,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,0,0,0,213,213,213,222,222,222,213,213,213,213,213,213,222,222,222,213,213,213,222,
            222,222,222,222,222,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,
            0,141,141,141,185,184,185,178,177,178,178,177,178,185,184,185,178,177,178,178,177,178,178,177,178,
            185,184,185,158,158,158,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,0,0,0,126,
            126,126,145,145,145,0,0,0,0,0,0,145,145,145,145,145,145,0,0,0,0,0,0,145,145,
            145,133,133,133,0,0,0,220,220,220,220,220,220,220,220,220,0,0,0,89,89,89,98,98,98,
            126,126,126,0,0,0,0,0,0,126,126,126,126,126,126,0,0,0,0,0,0,126,126,126,105,
            105,105,89,89,89,0,0,0,220,220,220,220,220,220,0,0,0,89,89,89,105,105,105,113,113,
            113,113,113,113,126,126,126,113,113,113,126,126,126,113,113,113,121,121,121,113,113,113,102,102,102,
            94,94,94,0,0,0,220,220,220,220,220,220,0,0,0,98,98,98,113,113,113,133,133,133,133,
            133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,126,126,126,113,113,113,105,105,
            105,0,0,0,220,220,220,220,220,220,0,0,0,113,113,113,133,133,133,141,141,141,145,145,145,
            158,158,158,158,158,158,153,153,153,153,153,153,145,145,145,145,145,145,126,126,126,113,113,113,0,
            0,0,220,220,220,220,220,220,220,220,220,0,0,0,133,133,133,158,158,158,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,145,145,145,133,133,133,0,0,0,220,220,220,
            220,220,220,220,220,220,220,220,220,0,0,0,141,141,141,0,0,0,158,158,158,169,168,168,178,
            177,178,178,177,178,166,166,166,158,158,158,0,0,0,126,126,126,0,0,0,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,0,0,0,145,145,145,165,164,163,169,168,168,178,177,178,
            169,168,168,169,168,168,153,153,153,138,138,138,0,0,0,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,0,0,0,0,0,0,165,164,163,169,168,168,165,164,
            163,158,158,158,0,0,0,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,0,0,0,0,0,0,0,0,
            0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 4)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 16 23 1",
        "  c None",
        "a c Black",
        "b c #DDA670",
        "c c #C3C3C3",
        "d c #E6E5E6",
        "e c #E9E9E9",
        "f c #D8D7D8",
        "g c #CCCCCC",
        "i c #BF7220",
        "j c #D5D5D5",
        "k c #F8F7F8",
        "l c #ECECEC",
        "m c #F1DECB",
        "n c #C37A33",
        "o c #DEDEDE",
        "p c #BE6A13",
        "q c #F2F1F2",
        "r c #DBB68F",
        "s c #F5F5F5",
        "t c #CC9554",
        "u c #D2A06B",
        "v c #FEFEFE",
        "w c #C88642",
        /* pixels */
        "                ",
        "      aaaa      ",
        "    aavvvvaa    ",
        "   asssrrqssa   ",
        "  aglrppppmdfa  ",
        "  ajoipmrptdja  ",
        " acjdelqupudjca ",
        " agolssupnsloja ",
        " ajdssvppvsqdja ",
        " aolsvvvvvvvloa ",
        "  alvvvwbvvsla  ",
        "  alsvvpwvkqda  ",
        "   asvvvvvsla   ",
        "    aavvvvaa    ",
        "      aaaa      ",
        "                "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 5)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,89,35,23,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,17,101,41,38,72,35,37,91,42,16,65,18,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,79,54,23,104,44,34,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,0,80,9,217,255,217,119,199,128,13,90,20,220,220,220,220,220,220,220,220,220,220,
            220,220,73,46,37,126,27,8,130,55,32,220,220,220,109,47,26,92,42,5,14,87,5,10,92,
            0,0,110,0,177,255,184,72,170,83,0,93,1,11,82,12,28,64,26,220,220,220,220,220,220,
            97,38,4,181,114,61,132,62,13,75,65,4,255,198,163,233,195,158,15,87,14,157,224,153,125,
            233,148,102,201,118,73,183,84,60,180,72,43,148,53,22,83,24,220,220,220,92,42,5,142,59,
            9,164,96,51,108,40,0,229,224,158,220,173,147,194,145,89,8,103,9,106,192,103,62,181,81,
            64,177,87,34,151,47,18,147,28,20,146,36,0,74,3,220,220,220,92,40,3,157,80,26,198,
            137,56,247,163,101,236,140,92,149,77,37,80,54,27,27,67,14,9,86,6,1,89,3,42,185,
            61,22,146,34,0,85,0,4,64,2,33,63,27,220,220,220,100,48,11,187,110,54,178,110,47,
            171,100,38,132,62,13,100,41,23,220,220,220,220,220,220,220,220,220,5,82,0,49,164,63,40,
            139,49,0,74,3,220,220,220,220,220,220,60,38,24,105,51,13,187,110,54,169,109,73,90,42,
            0,220,173,147,168,110,98,118,63,22,82,51,23,220,220,220,3,71,30,4,74,12,7,66,12,
            26,67,25,220,220,220,220,220,220,220,220,220,99,45,7,201,124,68,200,110,48,224,176,127,255,
            246,254,22,5,13,149,115,54,140,96,35,78,55,47,47,57,59,42,67,45,220,220,220,220,220,
            220,220,220,220,220,220,220,75,52,36,92,40,3,215,136,79,231,147,77,203,159,98,250,236,227,
            76,58,46,166,127,50,208,155,85,238,201,195,255,251,255,192,190,193,64,62,65,220,220,220,220,
            220,220,220,220,220,220,220,220,97,38,4,240,161,104,255,219,171,211,173,100,208,164,99,160,98,
            41,187,114,46,203,141,102,126,105,102,3,24,17,255,251,255,61,53,64,220,220,220,220,220,220,
            220,220,220,72,46,29,120,64,15,224,144,85,216,161,104,243,181,106,196,127,49,192,122,60,156,
            98,60,189,151,138,212,198,189,157,159,138,231,230,236,50,49,55,220,220,220,220,220,220,220,220,
            220,75,52,36,102,44,4,171,91,32,194,145,89,208,133,76,215,121,51,178,92,19,152,99,45,
            198,179,149,230,227,222,229,224,246,226,231,234,50,59,58,220,220,220,220,220,220,220,220,220,84,
            39,8,138,70,21,119,37,0,114,31,0,108,38,4,93,43,20,72,44,32,126,117,110,150,151,
            145,170,176,166,162,168,156,52,52,52,220,220,220,220,220,220,220,220,220,220,220,220,82,51,23,
            133,75,35,165,95,44,161,95,35,120,64,15,79,40,7,220,220,220,58,49,50,60,59,67,54,
            53,67,48,47,61,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,85,59,44,111,70,
            42,168,110,98,167,121,72,129,92,50,80,54,27,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 6)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,9,84,125,8,73,108,7,65,97,7,
            65,97,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,9,84,125,16,149,221,27,164,239,15,139,206,10,90,133,
            6,52,77,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,9,84,125,16,149,221,255,255,255,130,205,246,67,180,242,14,132,196,10,94,
            140,6,52,77,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,9,84,125,27,164,239,162,218,249,93,191,244,67,180,242,16,149,221,13,121,180,6,
            52,77,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,7,65,97,15,139,206,67,180,242,67,180,242,33,167,240,16,149,221,13,121,180,6,52,77,
            6,52,77,6,52,77,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,6,
            52,77,10,94,140,15,139,206,16,149,221,16,149,221,13,126,187,10,90,133,6,52,77,8,73,
            108,7,65,97,6,52,77,220,220,220,220,220,220,220,220,220,220,220,220,9,84,125,6,58,86,
            6,52,77,9,84,125,12,116,172,12,116,172,10,90,133,6,52,77,9,78,116,10,90,133,9,
            84,125,6,52,77,220,220,220,220,220,220,220,220,220,9,84,125,12,111,165,10,94,140,7,62,
            92,6,52,77,6,52,77,6,52,77,6,52,77,121,0,0,121,0,0,9,84,125,121,0,0,
            121,0,0,220,220,220,220,220,220,9,84,125,78,185,243,104,195,244,14,132,196,12,116,172,10,
            94,140,10,94,140,10,94,140,121,0,0,242,84,90,237,28,36,121,0,0,237,28,36,237,28,
            36,68,1,0,220,220,220,9,84,125,186,227,250,63,179,242,13,121,180,16,149,221,63,179,242,
            27,164,239,121,0,0,242,84,90,251,199,201,245,122,126,239,49,56,245,117,122,243,100,105,237,
            28,36,68,1,0,9,84,125,104,195,244,27,164,239,10,94,140,33,167,240,231,245,253,113,198,
            245,121,0,0,245,130,134,254,241,241,248,170,173,244,109,113,248,167,170,245,117,122,226,26,34,
            68,1,0,9,84,125,78,185,243,16,149,221,7,62,92,33,167,240,231,245,253,113,198,245,121,
            0,0,242,84,90,251,199,201,247,156,160,246,145,149,245,122,126,242,89,95,195,21,27,68,1,
            0,9,84,125,44,171,240,16,149,221,6,52,77,33,167,240,207,236,252,93,191,244,67,180,242,
            121,0,0,241,67,74,247,156,160,245,132,136,243,97,103,219,25,33,68,1,0,220,220,220,9,
            84,125,16,149,221,16,149,221,6,52,77,33,167,240,138,209,247,72,182,242,44,171,240,44,171,
            240,121,0,0,237,28,36,245,126,130,219,25,33,68,1,0,220,220,220,220,220,220,7,65,97,
            16,149,221,16,149,221,6,52,77,16,149,221,85,187,243,54,175,241,15,144,215,6,52,77,6,
            52,77,121,0,0,179,14,18,68,1,0,220,220,220,220,220,220,220,220,220,7,65,97,6,52,
            77,6,52,77,220,220,220,6,52,77,6,52,77,6,52,77,6,52,77,220,220,220,220,220,220,
            220,220,220,68,1,0,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 7)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,60,60,60,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,60,60,60,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,60,60,60,60,60,60,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,65,65,65,197,197,197,65,65,65,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,60,60,60,60,60,60,60,60,60,220,220,220,60,60,60,56,56,56,56,56,56,60,60,
            60,201,201,201,235,235,235,139,139,139,56,56,56,220,220,220,220,220,220,220,220,220,220,220,220,
            60,60,60,118,118,118,60,60,60,60,60,60,228,228,228,180,180,180,67,67,67,180,180,180,235,
            235,235,235,235,235,180,180,180,129,129,129,56,56,56,220,220,220,220,220,220,60,60,60,60,60,
            60,118,118,118,60,60,60,227,227,227,180,180,180,65,65,65,167,167,167,227,227,227,213,213,213,
            235,235,235,167,167,167,185,185,185,139,139,139,65,65,65,220,220,220,60,60,60,108,108,108,151,
            151,151,180,180,180,161,161,161,108,108,108,65,65,65,65,65,65,60,60,60,213,213,213,227,227,
            227,180,180,180,56,56,56,60,60,60,55,55,55,220,220,220,60,60,60,151,151,151,118,118,118,
            118,118,118,60,60,60,60,60,60,220,220,220,220,220,220,65,65,65,197,197,197,197,197,197,185,
            185,185,56,56,56,220,220,220,220,220,220,60,60,60,60,60,60,118,118,118,118,118,118,60,60,
            60,180,180,180,151,151,151,82,82,82,55,55,55,65,65,65,67,67,67,65,65,65,67,67,67,
            60,60,60,220,220,220,220,220,220,220,220,220,60,60,60,151,151,151,118,118,118,180,180,180,255,
            255,255,0,0,0,118,118,118,118,118,118,56,56,56,55,55,55,55,55,55,220,220,220,220,220,
            220,220,220,220,220,220,220,60,60,60,60,60,60,156,156,156,167,167,167,167,167,167,235,235,235,
            56,56,56,151,151,151,151,151,151,213,213,213,255,255,255,197,197,197,56,56,56,220,220,220,220,
            220,220,220,220,220,220,220,220,60,60,60,180,180,180,227,227,227,180,180,180,167,167,167,125,125,
            125,139,139,139,151,151,151,108,108,108,23,23,23,255,255,255,55,55,55,220,220,220,220,220,220,
            220,220,220,60,60,60,67,67,67,170,170,170,180,180,180,180,180,180,156,156,156,125,125,125,116,
            116,116,165,165,165,197,197,197,165,165,165,235,235,235,55,55,55,220,220,220,220,220,220,220,220,
            220,60,60,60,67,67,67,118,118,118,156,156,156,156,156,156,139,139,139,118,118,118,118,118,118,
            180,180,180,228,228,228,228,228,228,228,228,228,56,56,56,220,220,220,220,220,220,220,220,220,60,
            60,60,83,83,83,60,60,60,60,60,60,60,60,60,60,60,60,56,56,56,118,118,118,156,156,
            156,167,167,167,165,165,165,55,55,55,220,220,220,220,220,220,220,220,220,220,220,220,60,60,60,
            91,91,91,118,118,118,108,108,108,82,82,82,60,60,60,220,220,220,55,55,55,55,55,55,55,
            55,55,55,55,55,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,60,60,60,91,91,
            91,129,129,129,139,139,139,98,98,98,60,60,60,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 8)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,174,174,174,165,165,165,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,120,
            215,116,85,213,79,220,220,220,220,220,220,153,153,153,143,143,143,153,153,153,153,153,153,142,142,
            142,151,151,151,190,190,190,220,220,220,81,211,75,139,216,134,220,220,220,220,220,220,220,220,220,
            94,191,89,92,211,85,168,173,168,193,193,193,211,211,211,179,179,179,179,179,179,211,211,211,196,
            196,196,171,187,171,67,201,60,112,191,108,220,220,220,220,220,220,220,220,220,129,129,129,156,168,
            155,63,197,55,136,206,132,202,204,203,190,206,188,135,209,131,135,209,131,187,206,185,202,204,203,
            104,203,100,71,186,65,152,159,151,129,129,129,220,220,220,220,220,220,120,120,120,95,96,96,137,
            171,133,66,194,55,102,209,93,75,192,66,82,187,74,93,188,87,71,189,62,92,208,78,68,194,
            60,144,167,143,94,94,94,119,119,119,220,220,220,157,157,157,75,75,75,71,71,71,139,140,139,
            108,179,102,73,197,63,133,154,132,139,140,139,139,140,139,138,152,137,76,196,65,98,180,91,146,
            146,146,82,82,82,75,75,75,157,157,157,63,63,63,14,14,14,101,101,101,190,190,190,134,148,
            133,81,194,68,131,153,128,193,193,193,198,198,198,139,156,137,84,227,66,124,158,121,190,190,190,
            119,119,119,14,14,14,63,63,63,85,85,85,20,20,20,151,151,151,218,218,218,153,153,153,99,
            170,91,114,171,107,196,196,196,206,206,207,114,171,107,90,208,80,139,139,139,215,215,215,174,174,
            174,22,22,22,84,84,84,116,116,116,57,57,57,135,135,135,219,219,219,193,193,193,104,131,99,
            97,191,83,148,153,148,168,173,168,115,195,103,98,157,88,165,165,165,219,219,219,157,157,157,56,
            56,56,118,118,118,146,146,146,100,100,100,111,111,111,211,211,211,214,214,214,118,122,119,102,179,
            89,98,135,90,108,124,104,116,217,100,90,126,81,206,206,207,215,215,215,123,123,123,101,101,101,
            147,147,147,174,174,174,129,129,129,123,123,123,171,171,171,211,211,211,165,165,165,87,130,79,88,
            161,74,79,125,69,102,176,87,126,126,126,206,206,207,179,178,179,126,126,126,130,130,130,174,174,
            174,220,220,220,175,175,175,135,135,135,153,153,153,142,142,142,186,186,186,78,88,75,119,191,102,
            108,194,89,76,108,68,157,157,157,145,144,145,151,151,151,137,137,137,174,174,174,220,220,220,220,
            220,220,220,220,220,186,186,186,139,139,139,157,157,157,196,196,196,120,120,120,90,126,81,95,162,
            82,80,87,80,193,193,193,151,151,151,134,134,134,186,186,186,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,193,193,193,151,151,151,179,179,179,193,193,193,94,94,94,88,90,88,159,
            159,159,179,179,179,151,151,151,196,196,196,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,186,186,186,161,161,161,148,148,148,148,148,148,161,161,161,
            186,186,186,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 9)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 16 21 1",
        "  c None",
        "a c #0D1219",
        "b c #263247",
        "c c #080B0F",
        "d c #FFFFFF",
        "e c #090C11",
        "f c #272728",
        "g c #59B200",
        "h c #161E2A",
        "i c #07090E",
        "j c #DEDFE1",
        "l c #E6E7EA",
        "m c #1A2332",
        "n c #10151F",
        "o c #18202D",
        "p c #72E500",
        "q c #E8E9EC",
        "r c #323233",
        "s c #E6E6E6",
        "t c #1F293B",
        "u c #2C2C2D",
        /* pixels */
        " gggggggg       ",
        "gppnectppg      ",
        "gpnddddtpg      ",
        "gpmssssbpg      ",
        "gpprurfppg      ",
        "gpajqqsmpg      ",
        "gpelddshpg      ",
        "gpelddsopg      ",
        "gpelddsopg      ",
        "gpelddshpg      ",
        "gpcqddshpg      ",
        "gpiqddshpg      ",
        "gppi  hppg      ",
        " gggggggg       ",
        "                ",
        "                "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 10)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 16 20 1",
        "  c None",
        "a c #0D1219",
        "b c #263247",
        "c c #080B0F",
        "d c #FFFFFF",
        "e c #B20000",
        "f c #090C11",
        "g c #272728",
        "h c #161E2A",
        "i c #07090E",
        "j c #E50000",
        "k c #DEDFE1",
        "m c #E6E7EA",
        "n c #1A2332",
        "o c #18202D",
        "p c #E8E9EC",
        "q c #323233",
        "r c #E6E6E6",
        "s c #1F293B",
        "t c #2C2C2D",
        /* pixels */
        " eeeeeeee       ",
        "ejji  hjje      ",
        "ejipddrhje      ",
        "ejcpddrhje      ",
        "ejfmddroje      ",
        "ejfmddroje      ",
        "ejfmddroje      ",
        "ejfmddrhje      ",
        "ejakpprnje      ",
        "ejjqtqgjje      ",
        "ejsrrrrbje      ",
        "ejaddddsje      ",
        "ejjaffsjje      ",
        " eeeeeeee       ",
        "                ",
        "                "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 11)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,176,176,176,168,168,168,172,172,172,168,168,168,166,166,
            166,172,172,172,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,163,164,166,188,188,189,198,198,199,201,201,202,201,201,202,201,201,202,185,
            186,188,162,163,165,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,142,142,143,166,166,166,175,176,178,182,183,185,185,186,188,187,188,190,182,183,185,181,182,183,
            164,165,167,144,144,144,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,148,148,149,142,
            142,143,163,164,166,168,169,171,170,171,173,170,171,173,170,171,173,170,171,173,170,171,173,163,164,
            166,144,144,144,155,156,156,220,220,220,220,220,220,220,220,220,220,220,220,134,134,136,175,176,178,
            189,190,192,189,190,192,189,190,192,189,190,192,189,190,192,187,188,190,187,188,190,187,188,190,176,
            176,176,135,136,135,220,220,220,220,220,220,220,220,220,166,166,166,152,152,153,166,166,168,179,180,
            182,182,183,185,175,176,178,182,183,185,179,180,182,172,172,172,182,183,185,180,181,183,169,170,170,
            152,152,153,172,172,172,220,220,220,220,220,220,195,195,195,200,200,200,175,175,175,198,198,198,204,
            204,204,172,172,172,201,201,202,199,199,199,172,172,172,204,204,204,198,198,198,175,175,175,201,201,
            202,199,199,199,220,220,220,220,220,220,199,199,199,198,198,198,198,198,198,200,200,200,199,199,199,
            198,198,198,198,198,198,196,196,196,196,196,196,199,199,199,199,199,199,193,193,193,193,193,193,199,
            199,199,220,220,220,220,220,220,201,201,202,198,198,198,195,195,195,201,201,202,199,199,199,195,195,
            195,198,198,198,196,196,196,187,188,190,191,191,191,198,198,198,193,193,193,193,193,193,199,199,199,
            220,220,220,220,220,220,200,200,200,199,199,199,192,192,192,192,192,192,199,199,199,193,193,193,201,
            201,202,199,199,199,191,191,191,213,213,213,199,199,199,188,188,189,184,184,184,199,199,199,220,220,
            220,220,220,220,200,200,200,184,184,184,215,215,215,188,188,189,204,204,204,195,195,195,220,220,220,
            188,188,189,192,192,192,195,195,195,207,207,207,188,188,188,220,220,220,201,201,202,220,220,220,220,
            220,220,188,188,189,220,220,220,203,203,203,220,220,220,198,198,198,188,188,189,220,220,220,220,220,
            220,188,188,189,207,207,207,198,198,198,204,204,204,220,220,220,184,184,184,220,220,220,188,188,189,
            220,220,220,220,220,220,198,198,198,220,220,220,220,220,220,201,201,202,211,211,211,220,220,220,204,
            204,204,204,204,204,220,220,220,213,213,213,198,198,198,213,213,213,188,188,189,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 12)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 16 19 1",
        "  c None",
        "a c Black",
        "b c #696969",
        "c c #808080",
        "d c #858484",
        "e c #9E9E9E",
        "f c #454545",
        "g c #FEFE00",
        "h c #A0A0A4",
        "j c #BABBBB",
        "k c #222222",
        "l c #ECECED",
        "m c #C0C0C0",
        "n c #CFCFD3",
        "o c #FDFDF5",
        "p c #DFDFDF",
        "q c #313030",
        "r c #726443",
        "s c #545B73",
        /* pixels */
        "    f      f    ",
        "   fq     fgf   ",
        "  fqf fqqqgggq  ",
        "  fbfqpjfgggggq ",
        " ffbfpjfgggggggf",
        " qbejebfffgggqfq",
        " febcqf  fgggq  ",
        "fqbcqjefffffff  ",
        " febjoacbqfq    ",
        "fqehhlqeenomf   ",
        " fjpjecdebkoq   ",
        "ffhjjecbhmhlq   ",
        "ffbeedcbjplpf   ",
        "ffffqfqcehhf    ",
        "qrbbsq qfqq     ",
        "fscdbf          "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 13)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,60,56,11,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,50,56,52,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,98,44,10,79,50,18,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,50,56,52,255,255,0,50,56,52,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,80,54,39,105,47,7,114,59,28,220,220,220,86,48,25,79,50,18,79,50,18,50,56,
            52,255,255,0,255,255,0,255,255,0,50,56,52,220,220,220,220,220,220,220,220,220,220,220,220,
            93,42,15,189,109,40,125,58,13,95,40,33,255,215,169,232,196,118,50,56,52,255,255,0,255,
            255,0,255,255,0,255,255,0,255,255,0,50,56,52,220,220,220,220,220,220,100,55,34,136,62,
            25,174,99,32,106,48,8,255,212,159,209,167,119,50,56,52,255,255,0,255,255,0,255,255,0,
            255,255,0,255,255,0,255,255,0,255,255,0,50,56,52,220,220,220,96,42,16,152,65,20,199,
            131,68,223,167,110,193,151,93,135,97,35,50,56,52,50,56,52,50,56,52,255,255,0,255,255,
            0,255,255,0,50,56,52,50,56,52,50,56,52,220,220,220,105,47,7,198,115,45,177,108,49,
            159,101,53,135,69,8,101,43,3,220,220,220,220,220,220,50,56,52,255,255,0,255,255,0,255,
            255,0,50,56,52,220,220,220,220,220,220,65,40,33,101,43,3,189,109,40,194,107,40,95,37,
            0,221,184,140,153,120,85,112,78,53,90,51,8,50,56,52,50,56,52,50,56,52,50,56,52,
            50,56,52,220,220,220,220,220,220,220,220,220,106,48,8,200,123,55,193,109,65,223,179,154,242,
            243,247,0,0,0,146,103,69,153,100,60,62,43,28,41,53,53,72,57,36,220,220,220,220,220,
            220,220,220,220,220,220,220,77,45,34,101,43,3,214,140,77,217,148,83,209,160,104,251,238,221,
            84,62,39,189,119,47,217,148,83,224,206,196,245,255,255,196,192,207,52,48,62,220,220,220,220,
            220,220,220,220,220,220,220,220,102,39,0,237,167,107,255,218,143,229,173,96,209,155,108,163,100,
            56,209,126,46,189,131,68,118,108,96,16,25,24,249,255,255,39,43,52,220,220,220,220,220,220,
            220,220,220,88,49,32,106,48,8,220,153,98,205,179,118,226,168,104,211,131,78,188,106,59,161,
            95,45,190,160,126,197,198,190,155,164,163,223,235,233,56,65,60,220,220,220,220,220,220,220,220,
            220,88,43,24,106,48,8,159,93,41,198,144,74,205,135,75,206,116,53,172,90,30,145,102,60,
            199,182,152,237,230,202,229,229,217,222,231,226,53,58,51,220,220,220,220,220,220,220,220,220,88,
            43,24,121,61,24,102,39,0,112,37,0,105,43,20,102,39,0,98,44,10,129,118,114,152,154,
            151,182,179,172,151,158,177,52,57,60,220,220,220,220,220,220,220,220,220,220,220,220,86,48,25,
            144,74,25,185,97,26,176,91,37,135,56,17,105,43,20,220,220,220,53,58,51,64,47,53,58,
            54,55,53,58,51,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,80,54,39,122,73,
            40,187,121,71,174,118,57,142,85,40,80,43,17,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 14)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,174,174,174,165,165,165,
            220,220,220,0,0,0,255,255,0,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,120,
            215,116,85,213,79,220,220,220,220,220,220,154,154,154,139,144,138,0,0,0,0,0,0,0,0,
            0,255,255,0,255,255,128,255,255,0,0,0,0,0,0,0,0,0,0,220,220,220,220,220,220,
            94,191,89,92,211,85,168,170,168,193,193,193,214,214,214,0,0,0,255,255,0,255,255,128,255,
            255,255,255,255,183,255,255,128,255,255,0,255,255,0,0,0,0,220,220,220,129,129,129,156,168,
            155,63,197,55,136,206,132,202,204,203,190,206,188,135,209,131,0,0,0,128,128,0,255,255,183,
            255,255,128,255,255,0,128,128,0,0,0,0,220,220,220,220,220,220,120,120,120,95,96,96,137,
            171,133,66,194,55,102,209,93,75,192,66,82,187,74,93,188,87,0,0,0,255,255,128,128,128,
            0,255,255,0,0,0,0,119,119,119,220,220,220,157,157,157,75,75,75,71,71,71,139,140,139,
            108,179,102,73,197,63,133,154,132,139,140,139,0,0,0,255,255,0,255,255,0,0,0,0,255,
            255,0,255,255,0,0,0,0,157,157,157,63,63,63,14,14,14,101,101,101,190,190,190,134,148,
            133,81,194,68,131,153,128,193,193,193,0,0,0,128,128,0,0,0,0,124,158,121,0,0,0,
            128,128,0,0,0,0,63,63,63,85,85,85,20,20,20,151,151,151,218,218,218,154,154,154,99,
            170,91,111,168,106,197,197,197,0,0,0,0,0,0,92,208,78,139,142,139,215,215,215,0,0,
            0,0,0,0,84,84,84,116,116,116,57,57,57,135,135,135,219,219,219,193,193,193,104,131,99,
            97,191,83,148,153,148,168,170,168,115,195,103,98,157,88,168,170,168,219,219,219,157,157,157,56,
            56,56,119,119,119,147,147,147,100,100,100,111,111,111,211,211,211,214,214,214,118,122,119,102,179,
            89,98,135,90,108,124,104,116,217,100,97,112,94,203,203,203,215,215,215,124,124,124,101,101,101,
            147,147,147,174,174,174,129,129,129,125,127,124,171,171,171,209,209,209,165,165,165,87,130,79,88,
            161,74,79,125,69,102,176,87,125,127,124,205,205,205,179,179,179,125,127,124,129,129,129,174,174,
            174,220,220,220,174,174,174,135,135,135,154,154,154,142,142,142,186,186,186,78,88,75,119,191,102,
            108,194,89,76,108,68,154,154,154,147,147,147,151,151,151,137,137,137,174,174,174,220,220,220,220,
            220,220,220,220,220,186,186,186,137,137,137,154,154,154,203,203,203,120,120,120,90,126,81,95,162,
            82,80,87,80,193,193,193,151,151,151,134,134,134,186,186,186,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,193,193,193,148,148,148,177,177,177,195,195,195,93,94,92,88,90,88,159,
            159,159,177,177,177,154,154,154,193,193,193,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,186,186,186,161,161,161,148,148,148,148,148,148,161,161,161,
            186,186,186,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 15)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,0,0,0,255,255,0,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,176,176,176,168,169,171,0,0,0,0,0,0,0,0,
            0,255,255,0,255,255,128,255,255,0,0,0,0,0,0,0,0,0,0,220,220,220,220,220,220,
            220,220,220,220,220,220,162,163,165,188,188,189,198,198,199,0,0,0,255,255,0,255,255,128,255,
            255,255,255,255,196,255,255,128,255,255,0,255,255,0,0,0,0,220,220,220,220,220,220,220,220,
            220,142,142,143,166,166,166,175,176,178,183,184,185,185,186,188,0,0,0,128,128,0,255,255,196,
            255,255,128,255,255,0,128,128,0,0,0,0,220,220,220,220,220,220,220,220,220,148,148,149,142,
            142,143,162,163,165,168,169,171,171,172,174,168,169,171,171,172,174,0,0,0,255,255,128,128,128,
            0,255,255,0,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,134,134,136,175,176,178,
            189,190,192,189,190,192,189,190,192,189,190,192,0,0,0,255,255,0,255,255,0,0,0,0,255,
            255,0,255,255,0,0,0,0,220,220,220,220,220,220,166,166,166,152,152,153,166,166,168,181,182,
            183,181,182,183,175,176,178,183,184,185,0,0,0,128,128,0,0,0,0,179,180,182,0,0,0,
            128,128,0,0,0,0,220,220,220,220,220,220,198,198,198,198,198,198,174,174,174,198,198,198,204,
            204,204,174,174,174,198,198,198,0,0,0,0,0,0,204,204,204,196,196,196,176,176,176,0,0,
            0,0,0,0,220,220,220,220,220,220,198,198,198,198,198,198,198,198,198,201,201,201,198,198,198,
            198,198,198,198,198,198,195,195,195,195,195,195,201,201,201,199,199,199,193,193,193,193,193,193,199,
            199,199,220,220,220,220,220,220,201,201,201,198,198,198,198,198,198,201,201,201,198,198,198,198,198,
            198,198,198,198,195,195,195,188,188,189,192,192,192,198,198,198,193,193,193,193,193,193,199,199,199,
            220,220,220,220,220,220,201,201,201,198,198,198,192,192,192,193,193,193,198,198,198,193,193,193,201,
            201,201,201,201,201,188,188,189,213,213,213,199,199,199,188,188,189,184,184,184,199,199,199,220,220,
            220,220,220,220,199,199,199,184,184,184,215,215,215,188,188,189,204,204,204,196,196,196,220,220,220,
            188,188,189,192,192,192,198,198,198,204,204,204,188,188,188,220,220,220,201,201,201,220,220,220,220,
            220,220,188,188,189,220,220,220,201,201,201,220,220,220,198,198,198,188,188,188,220,220,220,220,220,
            220,188,188,189,207,207,207,198,198,198,204,204,204,220,220,220,184,184,184,220,220,220,192,192,192,
            220,220,220,220,220,220,198,198,198,220,220,220,220,220,220,201,201,201,211,211,211,220,220,220,204,
            204,204,204,204,204,220,220,220,213,213,213,198,198,198,213,213,213,188,188,189,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 16)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,247,247,247,165,165,165,158,158,158,170,170,170,170,
            170,170,160,160,160,163,163,163,247,247,247,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,223,223,223,106,106,106,171,171,171,163,163,163,162,162,162,163,163,163,
            163,163,163,172,172,172,105,105,105,215,215,215,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,251,251,251,73,73,73,148,148,148,198,198,198,237,237,237,247,247,247,247,247,247,237,237,
            237,199,199,199,149,149,149,71,71,71,251,251,251,220,220,220,220,220,220,220,220,220,220,220,220,
            191,191,191,70,70,70,199,199,199,252,252,252,255,255,255,255,255,255,255,255,255,255,255,255,252,
            252,252,202,202,202,71,71,71,187,187,187,220,220,220,220,220,220,220,220,220,220,220,220,159,159,
            159,94,94,94,233,233,233,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
            235,235,235,98,98,98,140,140,140,220,220,220,220,220,220,220,220,220,247,247,247,127,127,127,91,
            91,91,231,231,231,95,95,95,90,90,90,247,247,247,254,254,254,107,107,107,82,82,82,222,222,
            222,86,86,86,124,124,124,247,247,247,220,220,220,220,220,220,69,69,69,133,133,133,68,68,68,
            171,171,171,1,1,1,0,0,0,202,202,202,224,224,224,0,0,0,1,1,1,149,149,149,50,
            50,50,116,116,116,59,59,59,220,220,220,220,220,220,39,39,39,188,188,188,139,139,139,153,153,
            153,37,37,37,39,39,39,230,230,230,235,235,235,49,49,49,29,29,29,141,141,141,121,121,121,
            189,189,189,53,53,53,227,227,227,187,187,187,91,91,91,180,180,180,111,111,111,111,111,111,243,
            243,243,255,255,255,89,89,89,84,84,84,255,255,255,244,244,244,109,109,109,103,103,103,177,177,
            177,113,113,113,163,163,163,132,132,132,9,9,9,5,5,5,0,0,0,14,14,14,128,128,128,
            243,243,243,145,145,145,144,144,144,243,243,243,130,130,130,14,14,14,0,0,0,4,4,4,15,
            15,15,128,128,128,231,231,231,132,132,132,148,148,148,227,227,227,40,40,40,45,45,45,88,88,
            88,203,203,203,204,204,204,94,94,94,43,43,43,48,48,48,227,227,227,156,156,156,128,128,128,
            215,215,215,220,220,220,220,220,220,247,247,247,204,204,204,131,131,131,98,98,98,113,113,113,61,
            61,61,62,62,62,112,112,112,96,96,96,135,135,135,198,198,198,251,251,251,220,220,220,220,220,
            220,231,231,231,121,121,121,151,151,151,190,190,190,171,171,171,44,44,44,60,60,60,218,218,218,
            215,215,215,54,54,54,40,40,40,166,166,166,187,187,187,149,149,149,130,130,130,239,239,239,132,
            132,132,68,68,68,178,178,178,214,214,214,77,77,77,24,24,24,16,16,16,15,15,15,14,14,
            14,24,24,24,28,28,28,62,62,62,212,212,212,189,189,189,76,76,76,132,132,132,160,160,160,
            0,0,0,18,18,18,117,117,117,12,12,12,223,223,223,219,219,219,132,132,132,136,136,136,223,
            223,223,231,231,231,14,14,14,111,111,111,38,38,38,0,0,0,152,152,152,220,220,220,219,219,
            219,92,92,92,32,32,32,88,88,88,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,128,128,128,32,32,32,60,60,60,207,207,207,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 17)
    {
        static const unsigned char data[] = 
        {
            220,220,220,140,128,115,220,220,220,220,220,220,220,220,220,220,220,220,142,125,108,176,159,142,220,
            220,220,220,220,220,0,0,0,0,0,0,0,0,0,0,0,0,220,220,220,220,220,220,220,220,
            220,162,149,136,212,174,136,220,220,220,220,220,220,130,130,130,255,217,178,183,157,132,220,220,220,
            220,220,220,0,0,0,116,236,72,116,236,72,0,0,0,220,220,220,220,220,220,220,220,220,220,
            220,220,196,183,170,170,144,119,85,85,85,238,225,212,255,128,115,183,106,157,0,0,0,0,0,
            0,0,0,0,116,236,72,116,236,72,0,0,0,0,0,0,0,0,0,220,220,220,220,220,220,
            220,220,220,162,149,136,153,153,153,246,183,144,255,128,153,110,110,110,0,0,0,116,236,72,116,
            236,72,116,236,72,116,236,72,116,236,72,116,236,72,0,0,0,220,220,220,220,220,220,119,119,
            119,230,230,230,238,238,238,212,174,162,142,91,125,220,220,220,0,0,0,116,236,72,116,236,72,
            116,236,72,116,236,72,116,236,72,116,236,72,0,0,0,220,220,220,110,110,110,234,234,234,251,
            251,251,251,251,251,208,208,208,187,187,187,110,110,110,48,48,48,34,34,34,0,0,0,116,236,
            72,116,236,72,0,0,0,0,0,0,0,0,0,220,220,220,174,174,174,255,255,255,255,255,255,
            149,123,200,157,106,170,246,246,246,191,191,191,246,246,246,255,255,255,13,13,13,116,236,72,116,
            236,72,16,16,16,147,147,147,220,220,220,110,110,110,212,212,212,225,212,200,238,238,238,208,170,
            196,255,217,242,251,251,251,238,238,238,255,255,255,255,255,255,53,53,53,44,44,44,52,52,52,
            63,63,63,196,196,196,220,220,220,220,220,220,174,162,149,178,166,153,234,234,234,255,255,255,234,
            234,234,183,183,183,246,246,246,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
            255,230,230,230,85,85,85,220,220,220,85,85,85,128,128,128,140,140,140,132,132,132,174,174,174,
            221,221,221,255,255,255,255,255,255,255,255,255,251,251,251,255,255,255,255,255,255,255,255,255,238,
            238,238,170,170,170,220,220,220,85,85,85,191,191,191,178,178,178,200,200,200,242,242,242,255,255,
            255,255,255,255,251,251,251,251,251,251,200,200,200,238,238,238,255,255,255,255,255,255,234,234,234,
            144,144,144,220,220,220,136,136,136,221,221,221,221,221,221,242,242,242,255,255,255,255,255,255,246,
            246,246,208,208,208,225,225,225,178,178,178,208,208,208,230,230,230,238,238,238,217,217,217,170,170,
            170,220,220,220,220,220,220,130,130,130,183,183,183,234,234,234,251,251,251,242,242,242,225,225,225,
            149,149,149,187,187,187,128,128,128,178,178,178,187,187,187,212,212,212,204,204,204,110,110,110,220,
            220,220,85,85,85,200,200,200,204,204,204,170,170,170,208,208,208,242,242,242,204,204,204,106,106,
            106,128,128,128,106,106,106,85,85,85,128,128,128,178,178,178,125,125,125,220,220,220,162,162,162,
            191,191,191,200,200,200,128,128,128,130,130,130,123,123,123,217,217,217,149,149,149,170,170,170,162,
            162,162,85,85,85,174,174,174,238,238,238,162,162,162,220,220,220,220,220,220,220,220,220,85,85,
            85,136,136,136,220,220,220,110,110,110,162,162,162,119,119,119,85,85,85,136,136,136,220,220,220,
            220,220,220,119,119,119,130,130,130,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 18)
    {
        static const unsigned char data[] = 
        {
            220,220,220,140,128,115,220,220,220,220,220,220,220,220,220,220,220,220,142,125,108,176,159,142,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,162,149,136,212,174,136,220,220,220,220,220,220,130,130,130,255,217,178,183,157,132,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,196,183,170,170,144,119,85,85,85,238,225,212,255,128,115,183,106,157,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,162,149,136,153,153,153,246,183,144,255,128,153,110,110,110,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,119,119,
            119,230,230,230,238,238,238,212,174,162,142,91,125,220,220,220,220,220,220,136,136,136,85,85,85,
            136,136,136,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,110,110,110,234,234,234,251,
            251,251,251,251,251,208,208,208,187,187,187,110,110,110,162,162,162,234,234,234,242,242,242,230,230,
            230,170,170,170,110,110,110,220,220,220,220,220,220,220,220,220,174,174,174,255,255,255,255,255,255,
            149,123,200,157,106,170,246,246,246,191,191,191,246,246,246,255,255,255,255,255,255,255,255,255,251,
            251,251,238,238,238,147,147,147,220,220,220,110,110,110,212,212,212,225,212,200,238,238,238,208,170,
            196,255,217,242,251,251,251,238,238,238,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
            255,255,255,196,196,196,220,220,220,220,220,220,174,162,149,178,166,153,234,234,234,255,255,255,234,
            234,234,183,183,183,246,246,246,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
            255,230,230,230,85,85,85,220,220,220,85,85,85,128,128,128,140,140,140,132,132,132,174,174,174,
            221,221,221,255,255,255,255,255,255,255,255,255,251,251,251,255,255,255,255,255,255,255,255,255,238,
            238,238,170,170,170,220,220,220,85,85,85,191,191,191,178,178,178,200,200,200,242,242,242,255,255,
            255,255,255,255,251,251,251,251,251,251,200,200,200,238,238,238,255,255,255,255,255,255,234,234,234,
            144,144,144,220,220,220,136,136,136,221,221,221,221,221,221,242,242,242,255,255,255,255,255,255,246,
            246,246,208,208,208,225,225,225,178,178,178,208,208,208,230,230,230,238,238,238,217,217,217,170,170,
            170,220,220,220,220,220,220,130,130,130,183,183,183,234,234,234,251,251,251,242,242,242,225,225,225,
            149,149,149,187,187,187,128,128,128,178,178,178,187,187,187,212,212,212,204,204,204,110,110,110,220,
            220,220,85,85,85,200,200,200,204,204,204,170,170,170,208,208,208,242,242,242,204,204,204,106,106,
            106,128,128,128,106,106,106,85,85,85,128,128,128,178,178,178,125,125,125,220,220,220,162,162,162,
            191,191,191,200,200,200,128,128,128,130,130,130,123,123,123,217,217,217,149,149,149,170,170,170,162,
            162,162,85,85,85,174,174,174,238,238,238,162,162,162,220,220,220,220,220,220,220,220,220,85,85,
            85,136,136,136,220,220,220,110,110,110,162,162,162,119,119,119,85,85,85,136,136,136,220,220,220,
            220,220,220,119,119,119,130,130,130,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 19)
    {
        static const unsigned char data[] = 
        {
            220,220,220,140,128,115,220,220,220,220,220,220,220,220,220,220,220,220,142,125,108,176,159,142,220,
            220,220,220,220,220,220,220,220,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,162,149,136,212,174,136,220,220,220,220,220,220,130,130,130,255,217,178,183,157,132,220,220,220,
            220,220,220,0,0,0,198,198,196,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,196,183,170,170,144,119,85,85,85,238,225,212,255,128,115,0,0,0,0,0,0,0,0,
            0,204,204,204,204,204,204,204,204,204,0,0,0,0,0,0,0,0,0,220,220,220,220,220,220,
            220,220,220,162,149,136,153,153,153,246,183,144,255,128,153,0,0,0,202,202,202,202,202,202,204,
            204,204,207,207,207,207,207,207,202,202,202,194,194,194,0,0,0,220,220,220,220,220,220,119,119,
            119,230,230,230,238,238,238,212,174,162,142,91,125,220,220,220,0,0,0,201,201,200,203,203,203,
            207,207,207,206,206,206,205,205,205,0,0,0,220,220,220,220,220,220,110,110,110,234,234,234,251,
            251,251,251,251,251,208,208,208,187,187,187,110,110,110,162,162,162,0,0,0,205,205,205,205,205,
            205,205,205,205,0,0,0,220,220,220,220,220,220,220,220,220,174,174,174,255,255,255,255,255,255,
            149,123,200,157,106,170,246,246,246,191,191,191,0,0,0,205,205,204,205,205,205,0,0,0,206,
            206,206,206,206,206,0,0,0,220,220,220,110,110,110,212,212,212,225,212,200,238,238,238,208,170,
            196,255,217,242,251,251,251,238,238,238,0,0,0,206,206,206,0,0,0,248,245,244,0,0,0,
            198,194,193,0,0,0,220,220,220,220,220,220,174,162,149,178,166,153,234,234,234,255,255,255,234,
            234,234,183,183,183,246,246,246,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,0,0,
            0,0,0,0,85,85,85,220,220,220,85,85,85,128,128,128,140,140,140,132,132,132,174,174,174,
            221,221,221,255,255,255,255,255,255,255,255,255,251,251,251,255,255,255,255,255,255,255,255,255,238,
            238,238,170,170,170,220,220,220,85,85,85,191,191,191,178,178,178,200,200,200,242,242,242,255,255,
            255,255,255,255,251,251,251,251,251,251,200,200,200,238,238,238,255,255,255,255,255,255,234,234,234,
            144,144,144,220,220,220,136,136,136,221,221,221,221,221,221,242,242,242,255,255,255,255,255,255,246,
            246,246,208,208,208,225,225,225,178,178,178,208,208,208,230,230,230,238,238,238,217,217,217,170,170,
            170,220,220,220,220,220,220,130,130,130,183,183,183,234,234,234,251,251,251,242,242,242,225,225,225,
            149,149,149,187,187,187,128,128,128,178,178,178,187,187,187,212,212,212,204,204,204,110,110,110,220,
            220,220,85,85,85,200,200,200,204,204,204,170,170,170,208,208,208,242,242,242,204,204,204,106,106,
            106,128,128,128,106,106,106,85,85,85,128,128,128,178,178,178,125,125,125,220,220,220,162,162,162,
            191,191,191,200,200,200,128,128,128,130,130,130,123,123,123,217,217,217,149,149,149,170,170,170,162,
            162,162,85,85,85,174,174,174,238,238,238,162,162,162,220,220,220,220,220,220,220,220,220,85,85,
            85,136,136,136,220,220,220,110,110,110,162,162,162,119,119,119,85,85,85,136,136,136,220,220,220,
            220,220,220,119,119,119,130,130,130,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 20)
    {
        static const unsigned char data[] = 
        {
            220,220,220,140,128,115,220,220,220,220,220,220,220,220,220,220,220,220,142,125,108,176,159,142,220,
            220,220,220,220,220,220,220,220,85,85,85,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,162,149,136,212,174,136,220,220,220,220,220,220,130,130,130,255,217,178,183,157,132,220,220,220,
            220,220,220,85,85,85,251,225,54,99,98,78,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,196,183,170,170,144,119,85,85,85,238,225,212,255,128,115,85,85,85,85,85,85,99,98,
            78,253,244,13,255,248,7,252,235,31,85,85,85,85,85,85,85,85,85,220,220,220,220,220,220,
            220,220,220,162,149,136,153,153,153,246,183,144,255,128,153,85,85,85,238,222,51,255,241,41,253,
            250,0,252,249,0,253,249,3,251,230,42,235,217,58,99,98,78,220,220,220,220,220,220,119,119,
            119,230,230,230,238,238,238,212,174,162,142,91,125,220,220,220,99,98,78,233,224,28,253,250,0,
            253,250,0,251,242,12,227,216,37,120,118,66,220,220,220,220,220,220,110,110,110,234,234,234,251,
            251,251,251,251,251,208,208,208,187,187,187,110,110,110,162,162,162,121,120,65,255,248,8,251,239,
            21,252,235,32,120,118,66,220,220,220,220,220,220,220,220,220,174,174,174,255,255,255,255,255,255,
            149,123,200,157,106,170,246,246,246,191,191,191,99,98,78,241,229,35,252,236,27,159,144,90,252,
            236,31,233,214,64,97,96,79,220,220,220,110,110,110,212,212,212,225,212,200,238,238,238,208,170,
            196,255,217,242,251,251,251,238,238,238,99,98,78,203,194,47,98,97,78,255,255,255,85,85,85,
            217,210,34,87,86,84,220,220,220,220,220,220,174,162,149,178,166,153,234,234,234,255,255,255,234,
            234,234,183,183,183,246,246,246,85,85,85,85,85,85,255,255,255,255,255,255,255,255,255,99,98,
            78,85,85,85,85,85,85,220,220,220,85,85,85,128,128,128,140,140,140,132,132,132,174,174,174,
            221,221,221,255,255,255,255,255,255,255,255,255,251,251,251,255,255,255,255,255,255,255,255,255,238,
            238,238,170,170,170,220,220,220,85,85,85,191,191,191,178,178,178,200,200,200,242,242,242,255,255,
            255,255,255,255,251,251,251,251,251,251,200,200,200,238,238,238,255,255,255,255,255,255,234,234,234,
            144,144,144,220,220,220,136,136,136,221,221,221,221,221,221,242,242,242,255,255,255,255,255,255,246,
            246,246,208,208,208,225,225,225,178,178,178,208,208,208,230,230,230,238,238,238,217,217,217,170,170,
            170,220,220,220,220,220,220,130,130,130,183,183,183,234,234,234,251,251,251,242,242,242,225,225,225,
            149,149,149,187,187,187,128,128,128,178,178,178,187,187,187,212,212,212,204,204,204,110,110,110,220,
            220,220,85,85,85,200,200,200,204,204,204,170,170,170,208,208,208,242,242,242,204,204,204,106,106,
            106,128,128,128,106,106,106,85,85,85,128,128,128,178,178,178,125,125,125,220,220,220,162,162,162,
            191,191,191,200,200,200,128,128,128,130,130,130,123,123,123,217,217,217,149,149,149,170,170,170,162,
            162,162,85,85,85,174,174,174,238,238,238,162,162,162,220,220,220,220,220,220,220,220,220,85,85,
            85,136,136,136,220,220,220,110,110,110,162,162,162,119,119,119,85,85,85,136,136,136,220,220,220,
            220,220,220,119,119,119,130,130,130,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    return wxNullBitmap;
}

wxBitmap dlStatusImages( size_t index )
{
    if (index == 0)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 16 16 1",
        "  c None",
        "a c Black",
        "b c #110000",
        "c c #6F4848",
        "d c #7F0000",
        "e c #220000",
        "f c #444444",
        "g c #888888",
        "h c #8C0000",
        "i c #4C4040",
        "j c #C10000",
        "k c #191919",
        "m c #2A2A2A",
        "n c #FF0000",
        "o c #666666",
        "p c #333333",
        /* pixels */
        "          h     ",
        "         dna    ",
        "        dnjna   ",
        "       dnjhjna  ",
        "      anjhmhjna ",
        "      aapaopaaa ",
        "         aga    ",
        "     kpk aoa    ",
        "     pop ppa    ",
        "     fgi        ",
        "  bebaoabeb     ",
        "  cnjhphjni     ",
        "   cnjhjni      ",
        "    cnjni       ",
        "     cni        ",
        "      h         "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 1)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 16 17 1",
        "  c None",
        "a c #444444",
        "b c #114C11",
        "c c #888888",
        "d c #790000",
        "e c #008000",
        "f c #007700",
        "g c #191919",
        "i c #00B700",
        "j c #B70000",
        "k c #2A2A2A",
        "l c #FF0000",
        "m c #666666",
        "n c #002A00",
        "o c #00FF00",
        "p c #333333",
        "q c #001500",
        /* pixels */
        "          d     ",
        "         dld    ",
        "        dljld   ",
        "       dljdjld  ",
        "      dljdkdjld ",
        "          m     ",
        "          c     ",
        "     gpg  m     ",
        "     pmp pp     ",
        "     aca        ",
        "  qnqmmmqnq     ",
        "  eoibpbioe     ",
        "   eoifioe      ",
        "    eoioe       ",
        "     eoe        ",
        "      e         "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 2)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 16 16 1",
        "  c None",
        "a c #110000",
        "b c #6F4848",
        "c c #220000",
        "d c #444444",
        "e c #888888",
        "f c #008000",
        "g c #770000",
        "h c #191919",
        "j c #BB0000",
        "k c #00AE00",
        "l c #2A2A2A",
        "m c #FF0000",
        "n c #666666",
        "o c #00FF00",
        "p c #333333",
        /* pixels */
        "          f     ",
        "         fof    ",
        "        fokof   ",
        "       fokfkof  ",
        "      fokflfkof ",
        "          np    ",
        "          e     ",
        "     hph  n     ",
        "     pnp pp     ",
        "     ded        ",
        "  acannnaca     ",
        "  bmjgpgjmg     ",
        "   bmjgjmg      ",
        "    gmjmg       ",
        "     gmg        ",
        "      g         "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 3)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 16 12 1",
        "  c None",
        "a c #006F00",
        "b c #888888",
        "c c #191919",
        "e c #404F40",
        "f c #00D400",
        "g c #666666",
        "h c #002A00",
        "i c #00FF00",
        "j c #333333",
        "k c #001500",
        "l c #00CA00",
        /* pixels */
        "          a     ",
        "         aia    ",
        "        ailia   ",
        "       ailalia  ",
        "      aila alia ",
        "          gj    ",
        "          b     ",
        "     cjc  g     ",
        "     jgj jj     ",
        "     ebe        ",
        "  khk g khk     ",
        "  aila afia     ",
        "   ailalia      ",
        "    ailia       ",
        "     aia        ",
        "      a         "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    return wxNullBitmap;
}

wxBitmap connImages( size_t index )
{
    if (index == 0)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,58,111,0,55,110,0,51,101,0,
            57,108,0,57,108,0,56,113,220,220,220,0,47,89,0,24,45,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,0,56,113,0,58,111,6,95,163,12,147,232,138,198,217,60,190,123,
            13,140,211,4,87,148,0,47,89,99,11,11,99,11,11,0,24,45,220,220,220,220,220,220,220,
            220,220,0,54,113,46,127,99,104,229,123,0,148,197,2,182,255,75,205,175,16,169,151,2,70,
            127,0,64,130,47,124,71,0,47,89,156,16,16,122,13,13,0,24,45,220,220,220,0,54,113,
            61,116,106,242,255,221,20,210,175,0,161,222,14,201,241,88,214,97,0,106,188,2,70,127,243,
            127,127,0,47,89,101,11,11,201,22,22,151,16,16,0,24,45,220,220,220,0,54,113,148,220,
            148,28,207,135,0,164,210,0,211,252,0,219,242,0,142,186,20,132,186,0,64,130,252,222,222,
            241,96,96,236,27,27,237,34,34,168,19,19,0,24,45,0,58,111,0,100,144,60,218,133,0,
            159,216,14,201,241,90,236,255,0,211,252,2,182,255,35,169,223,0,64,130,255,255,255,246,163,
            163,241,88,88,221,25,25,0,24,45,0,25,49,0,51,101,0,122,137,0,138,171,0,150,192,
            8,202,231,78,206,223,8,202,231,247,247,218,131,223,126,0,64,130,248,179,179,241,96,96,229,
            26,26,160,18,18,0,24,45,0,32,58,0,64,130,0,64,130,0,64,130,0,64,130,2,70,
            127,0,64,130,0,24,45,111,231,84,34,208,30,0,64,130,240,81,81,229,26,26,201,22,22,
            186,21,21,123,13,13,0,24,45,0,64,130,240,81,81,247,173,173,255,255,255,251,216,216,240,
            81,81,0,24,45,10,170,157,8,129,82,0,64,130,0,24,45,0,24,45,0,24,45,0,24,
            45,0,24,45,0,24,45,0,47,89,0,64,130,240,76,76,245,145,145,239,72,72,229,26,26,
            0,24,45,0,141,223,20,133,207,14,123,183,0,87,159,0,82,159,0,75,148,0,64,130,0,
            60,115,0,30,49,0,46,93,0,64,130,237,34,34,239,72,72,229,26,26,201,22,22,0,24,
            45,138,198,217,237,247,201,77,189,66,38,150,157,20,126,206,0,90,204,0,87,166,0,63,111,
            0,34,65,0,64,130,178,20,20,218,25,25,193,21,21,123,13,13,168,19,19,0,24,45,160,
            206,114,40,186,55,36,177,46,80,196,31,61,163,74,2,103,188,1,92,180,0,41,65,220,220,
            220,0,64,130,106,12,12,196,22,22,122,13,13,0,24,45,122,13,13,0,24,45,69,171,44,
            40,177,40,54,178,52,49,164,56,32,124,96,3,100,179,2,78,136,0,37,71,220,220,220,0,
            64,130,108,12,12,156,16,16,0,24,45,0,73,146,0,24,45,0,24,45,53,150,114,49,157,
            56,50,155,73,32,123,110,2,91,175,2,70,127,0,37,71,220,220,220,220,220,220,220,220,220,
            0,24,45,86,9,9,104,11,11,0,24,45,0,58,111,0,87,178,0,87,178,9,93,143,7,
            94,152,3,68,119,0,37,73,0,37,73,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,0,24,45,0,24,45,220,220,220,0,35,67,0,41,65,0,40,71,0,40,71,0,42,73,
            0,37,73,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 1)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,57,108,0,55,110,0,55,110,0,
            55,110,0,55,110,0,60,115,220,220,220,0,45,91,0,24,45,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,0,60,115,0,55,110,6,95,163,12,147,232,125,209,191,60,190,123,
            13,140,211,4,87,148,0,45,91,91,87,8,85,82,7,0,24,45,220,220,220,220,220,220,220,
            220,220,0,54,113,46,127,99,104,229,123,0,148,197,2,182,255,75,205,175,16,169,151,2,70,
            127,2,70,127,47,124,71,0,45,91,240,233,69,240,233,69,0,24,45,220,220,220,0,54,113,
            61,116,106,242,255,221,20,210,175,0,161,222,13,208,243,88,214,97,0,106,188,2,70,127,243,
            237,111,0,45,91,91,87,8,240,233,69,240,233,69,0,24,45,220,220,220,0,54,113,148,220,
            148,28,207,135,0,164,210,0,211,252,0,219,242,0,142,186,20,132,186,2,70,127,253,252,226,
            241,234,82,235,226,19,240,233,69,240,233,69,0,24,45,0,60,115,0,100,144,60,218,133,0,
            159,216,13,208,243,90,236,255,0,211,252,5,192,255,35,169,223,2,70,127,240,233,69,240,233,
            69,240,233,69,240,233,69,0,24,45,0,30,49,0,51,101,0,122,137,0,138,171,0,148,197,
            14,198,223,78,206,223,8,202,231,247,247,218,131,223,126,2,70,127,251,249,204,240,233,69,157,
            151,13,148,142,12,0,24,45,0,32,58,2,70,127,2,70,127,2,70,127,2,70,127,2,70,
            127,2,70,127,0,24,45,111,231,84,34,208,30,2,70,127,240,233,67,228,219,19,240,233,69,
            178,171,15,109,105,9,0,24,45,2,70,127,240,233,67,250,248,193,255,255,255,240,233,69,240,
            233,67,0,24,45,10,170,157,8,129,82,2,70,127,0,24,45,0,24,45,0,24,45,0,24,
            45,0,24,45,0,24,45,0,45,91,2,70,127,239,231,59,240,233,69,239,231,59,228,219,19,
            0,24,45,0,141,223,20,133,207,14,123,183,0,82,159,0,82,159,0,75,148,2,70,127,0,
            60,115,0,30,49,0,45,91,2,70,127,236,227,26,239,231,59,228,219,19,240,233,69,0,24,
            45,138,198,217,237,247,201,77,189,66,38,150,157,20,126,206,0,90,204,0,87,166,0,57,108,
            0,35,67,2,70,127,240,233,69,240,233,69,240,233,69,109,105,9,218,209,18,0,24,45,160,
            206,114,40,186,55,36,177,46,80,196,31,61,163,74,2,103,188,1,92,180,0,41,67,220,220,
            220,2,70,127,94,90,8,240,233,69,109,105,9,0,24,45,218,209,18,0,24,45,69,171,44,
            40,177,40,54,178,52,49,164,56,32,124,96,3,100,179,2,78,136,0,37,74,220,220,220,2,
            70,127,96,92,8,240,233,69,0,24,45,0,75,148,0,24,45,0,24,45,53,150,114,49,157,
            56,50,155,73,32,123,110,2,91,175,2,70,127,0,35,67,220,220,220,220,220,220,220,220,220,
            0,24,45,76,73,7,94,90,8,0,24,45,0,57,108,0,86,181,0,86,181,9,93,143,7,
            94,152,3,68,119,0,37,74,0,37,74,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,0,24,45,0,24,45,220,220,220,0,35,67,0,41,67,0,41,67,0,41,67,0,42,73,
            0,37,74,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 2)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,57,108,0,55,110,0,55,110,0,
            55,110,0,55,110,0,60,115,220,220,220,0,45,91,0,24,45,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,0,60,115,0,55,110,6,95,163,12,147,232,125,209,191,60,190,123,
            13,140,211,4,87,148,0,45,91,78,48,15,73,45,14,0,24,45,220,220,220,220,220,220,220,
            220,220,0,54,113,46,127,99,104,229,123,0,148,197,2,182,255,75,205,175,16,169,151,2,70,
            127,2,70,127,47,124,71,0,45,91,215,134,43,215,134,43,0,24,45,220,220,220,0,54,113,
            61,116,106,242,255,221,20,210,175,0,161,222,13,208,243,88,214,97,0,106,188,2,70,127,223,
            139,44,0,45,91,78,48,15,215,134,43,215,134,43,0,24,45,220,220,220,0,54,113,148,220,
            148,28,207,135,0,164,210,0,211,252,0,219,242,0,142,186,20,132,186,2,70,127,247,154,49,
            219,137,43,205,128,41,215,134,43,215,134,43,0,24,45,0,60,115,0,100,144,60,218,133,0,
            159,216,13,208,243,90,236,255,0,211,252,5,192,255,35,169,223,2,70,127,215,134,43,215,134,
            43,215,134,43,215,134,43,0,24,45,0,30,49,0,51,101,0,122,137,0,138,171,0,148,197,
            14,198,223,78,206,223,8,202,231,247,247,218,131,223,126,2,70,127,243,152,48,215,134,43,137,
            85,27,128,80,25,0,24,45,0,32,58,2,70,127,2,70,127,2,70,127,2,70,127,2,70,
            127,2,70,127,0,24,45,111,231,84,34,208,30,2,70,127,215,134,43,199,124,39,215,134,43,
            154,96,30,93,58,18,0,24,45,2,70,127,215,134,43,241,151,48,254,159,50,215,134,43,215,
            134,43,0,24,45,10,170,157,8,129,82,2,70,127,0,24,45,0,24,45,0,24,45,0,24,
            45,0,24,45,0,24,45,0,45,91,2,70,127,213,133,42,215,134,43,213,133,42,199,124,39,
            0,24,45,0,141,223,20,133,207,14,123,183,0,82,159,0,82,159,0,75,148,2,70,127,0,
            60,115,0,30,49,0,45,91,2,70,127,205,128,41,213,133,42,199,124,39,215,134,43,0,24,
            45,138,198,217,237,247,201,77,189,66,38,150,157,20,126,206,0,90,204,0,87,166,0,57,108,
            0,35,67,2,70,127,215,134,43,215,134,43,215,134,43,93,58,18,189,118,37,0,24,45,160,
            206,114,40,186,55,36,177,46,80,196,31,61,163,74,2,103,188,1,92,180,0,41,67,220,220,
            220,2,70,127,81,50,16,215,134,43,93,58,18,0,24,45,189,118,37,0,24,45,69,171,44,
            40,177,40,54,178,52,49,164,56,32,124,96,3,100,179,2,78,136,0,37,74,220,220,220,2,
            70,127,82,51,16,215,134,43,0,24,45,0,75,148,0,24,45,0,24,45,53,150,114,49,157,
            56,50,155,73,32,123,110,2,91,175,2,70,127,0,35,67,220,220,220,220,220,220,220,220,220,
            0,24,45,65,40,13,81,50,16,0,24,45,0,57,108,0,86,181,0,86,181,9,93,143,7,
            94,152,3,68,119,0,37,74,0,37,74,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,0,24,45,0,24,45,220,220,220,0,35,67,0,41,67,0,41,67,0,41,67,0,42,73,
            0,37,74,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 3)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,57,108,0,55,110,0,55,110,0,
            55,110,0,55,110,0,60,115,220,220,220,0,45,91,0,24,45,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,0,60,115,0,55,110,6,95,163,12,147,232,125,209,191,60,190,123,
            13,140,211,4,87,148,0,45,91,14,82,69,19,73,67,0,24,45,220,220,220,220,220,220,220,
            220,220,0,54,113,46,127,99,104,229,123,0,148,197,2,182,255,75,205,175,16,169,151,2,70,
            127,2,70,127,47,124,71,0,45,91,67,252,63,49,169,65,0,24,45,220,220,220,0,54,113,
            61,116,106,242,255,221,20,210,175,0,161,222,13,208,243,88,214,97,0,106,188,2,70,127,67,
            252,63,0,45,91,67,252,63,67,252,63,67,252,63,0,24,45,220,220,220,0,54,113,148,220,
            148,28,207,135,0,164,210,0,211,252,0,219,242,0,142,186,20,132,186,2,70,127,67,252,63,
            42,203,42,67,252,63,67,252,63,37,133,60,0,24,45,0,60,115,0,100,144,60,218,133,0,
            159,216,13,208,243,90,236,255,0,211,252,5,192,255,35,169,223,2,70,127,67,252,63,67,252,
            63,67,252,63,67,252,63,0,24,45,0,30,49,0,51,101,0,122,137,0,138,171,0,148,197,
            14,198,223,78,206,223,8,202,231,247,247,218,131,223,126,2,70,127,67,252,63,67,252,63,42,
            203,42,31,129,47,0,24,45,0,32,58,2,70,127,2,70,127,2,70,127,2,70,127,2,70,
            127,2,70,127,0,24,45,111,231,84,34,208,30,2,70,127,67,252,63,67,252,63,67,252,63,
            67,252,63,22,99,47,0,24,45,2,70,127,42,203,42,203,255,188,67,252,63,67,252,63,67,
            252,63,0,24,45,10,170,157,8,129,82,2,70,127,0,24,45,0,24,45,0,24,45,0,24,
            45,0,24,45,0,24,45,0,45,91,2,70,127,56,246,57,67,252,63,67,252,63,67,252,63,
            0,24,45,0,141,223,20,133,207,14,123,183,0,82,159,0,82,159,0,75,148,2,70,127,0,
            60,115,0,30,49,0,45,91,2,70,127,67,252,63,67,252,63,42,203,42,67,252,63,0,24,
            45,138,198,217,237,247,201,77,189,66,38,150,157,20,126,206,0,90,204,0,87,166,0,57,108,
            0,35,67,2,70,127,37,146,48,67,252,63,67,252,63,22,99,47,67,252,63,0,24,45,160,
            206,114,40,186,55,36,177,46,80,196,31,61,163,74,2,103,188,1,92,180,0,41,67,220,220,
            220,2,70,127,18,84,47,67,252,63,18,101,71,0,24,45,42,203,42,0,24,45,69,171,44,
            40,177,40,54,178,52,49,164,56,32,124,96,3,100,179,2,78,136,0,37,74,220,220,220,2,
            70,127,16,88,53,27,129,54,0,24,45,0,75,148,0,24,45,0,24,45,53,150,114,49,157,
            56,50,155,73,32,123,110,2,91,175,2,70,127,0,35,67,220,220,220,220,220,220,220,220,220,
            0,24,45,19,73,67,17,83,66,0,24,45,0,57,108,0,86,181,0,86,181,9,93,143,7,
            94,152,3,68,119,0,37,74,0,37,74,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,0,24,45,0,24,45,220,220,220,0,35,67,0,41,67,0,41,67,0,41,67,0,42,73,
            0,37,74,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    return wxNullBitmap;
}

wxBitmap moreImages( size_t index )
{
    if (index == 0)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,128,67,11,128,67,11,
            128,67,11,128,67,11,128,67,11,128,67,11,128,67,11,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,128,67,11,192,133,75,192,133,75,179,120,
            61,166,107,50,166,107,50,128,67,11,128,67,11,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,128,67,11,128,67,11,128,67,11,128,67,11,128,67,11,128,
            67,11,128,67,11,148,88,32,128,67,11,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,128,67,11,245,193,137,226,168,106,219,162,100,212,156,94,212,156,94,
            128,67,11,148,88,32,128,67,11,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,128,67,11,226,168,106,219,162,100,212,156,94,212,156,94,212,156,94,128,67,
            11,148,88,32,125,66,12,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,125,66,12,212,156,94,200,146,86,200,146,86,200,146,86,200,146,86,125,66,12,143,
            85,31,125,66,12,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,114,58,6,183,131,75,183,131,75,183,131,75,183,131,75,183,131,75,114,58,6,135,80,29,
            114,58,6,220,220,220,220,220,220,115,115,115,115,115,115,115,115,115,105,105,105,121,71,20,161,
            106,39,161,106,39,161,106,39,161,106,39,161,106,39,161,106,39,128,67,11,109,52,0,152,93,
            30,152,93,30,220,220,220,205,205,205,241,241,241,205,205,205,138,138,138,166,107,50,239,183,123,
            253,198,137,255,223,189,255,234,211,255,241,226,252,212,168,161,106,39,161,106,39,226,168,106,254,
            209,159,109,52,0,115,115,115,115,115,115,115,115,115,105,105,105,166,107,50,221,164,105,232,175,
            115,201,143,84,157,95,36,143,80,22,125,66,12,198,139,80,254,221,183,254,209,159,109,52,0,
            220,220,220,85,85,85,85,85,85,75,75,75,68,68,68,166,107,50,201,143,84,230,174,113,250,
            203,150,254,221,183,254,230,201,254,230,201,254,221,183,214,164,112,109,52,0,220,220,220,220,220,
            220,75,75,75,75,75,75,75,75,75,43,43,43,114,62,14,109,52,0,192,133,75,234,177,117,
            248,193,132,232,175,115,192,133,75,109,52,0,109,52,0,220,220,220,220,220,220,220,220,220,43,
            43,43,43,43,43,43,43,43,220,220,220,220,220,220,220,220,220,109,52,0,109,52,0,109,52,
            0,109,52,0,109,52,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 1)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,27,73,140,27,73,140,27,73,140,27,73,140,27,
            73,140,27,73,140,27,73,140,27,73,140,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,27,73,140,27,73,140,59,107,179,77,129,205,95,146,225,95,146,225,95,146,225,
            95,146,225,77,129,205,59,107,179,27,73,140,27,73,140,220,220,220,220,220,220,220,220,220,27,
            73,140,49,97,168,81,133,210,95,146,225,101,153,233,101,153,233,73,120,188,101,153,233,101,153,
            233,101,153,233,101,153,233,95,146,225,59,107,179,27,73,140,220,220,220,27,73,140,49,97,168,
            95,146,225,101,153,233,101,153,233,101,153,233,77,125,195,82,65,0,82,132,206,101,153,233,101,
            153,233,111,162,243,111,162,243,111,162,243,77,125,195,27,73,140,24,65,124,70,121,196,101,153,
            233,101,153,233,101,153,233,77,125,195,88,71,0,178,167,63,79,92,86,95,143,218,111,162,243,
            111,162,243,111,162,243,121,171,252,121,171,252,21,56,107,21,56,107,84,137,215,101,153,233,101,
            153,233,80,127,197,92,74,0,178,167,63,212,193,51,92,74,0,77,125,195,111,162,243,111,162,
            243,121,171,252,121,171,252,110,157,234,18,48,91,18,47,90,62,105,170,101,153,233,82,132,206,
            92,74,0,178,167,63,239,214,41,239,214,41,179,172,74,79,92,86,110,157,234,121,171,252,121,
            171,252,121,171,252,69,110,170,15,39,74,18,47,90,21,56,107,62,103,165,92,74,0,178,167,
            63,255,230,60,255,230,60,255,230,60,237,222,74,92,74,0,92,128,174,121,171,252,98,146,220,
            62,100,157,15,39,74,15,39,74,18,47,90,50,96,164,56,61,45,179,164,46,245,228,63,255,
            244,75,255,240,71,255,237,68,246,235,77,160,163,84,86,85,48,45,79,131,15,39,74,15,39,
            74,24,65,124,15,39,74,18,47,90,63,95,132,82,65,0,108,88,0,173,149,10,204,185,33,
            245,232,66,255,244,75,255,244,75,215,207,69,49,52,37,15,39,74,21,56,107,27,73,140,27,
            73,140,15,39,74,18,47,90,67,81,82,145,121,0,159,135,0,119,99,0,92,74,0,92,74,
            0,92,74,0,92,74,0,82,65,0,49,52,37,21,56,107,24,65,124,27,73,140,24,65,124,
            15,39,74,220,220,220,82,65,0,167,142,0,185,158,0,185,158,0,185,158,0,185,158,0,179,
            153,0,172,146,0,135,114,0,82,65,0,21,56,107,24,65,124,21,56,107,15,39,74,220,220,
            220,220,220,220,82,65,0,179,153,0,185,158,0,185,158,0,185,158,0,185,158,0,185,158,0,
            185,158,0,185,158,0,82,65,0,18,47,90,15,39,74,15,39,74,220,220,220,220,220,220,220,
            220,220,82,65,0,82,65,0,82,65,0,130,108,0,172,146,0,185,158,0,185,158,0,185,158,
            0,185,158,0,82,65,0,15,39,74,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,82,65,0,82,65,0,82,65,0,82,65,0,82,65,0,82,
            65,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    return wxNullBitmap;
}

wxBitmap amuleSpecial( size_t index )
{
    if (index == 0)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 16 1 1",
        "a c Black",
        /* pixels */
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa"
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 1)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            255,141,0,255,155,44,255,147,40,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,213,219,245,167,180,221,220,220,220,255,159,16,255,220,
            149,239,211,89,245,145,4,189,84,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,194,198,216,255,255,255,255,255,255,230,238,255,234,172,96,214,187,56,225,
            170,5,250,142,11,227,100,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,196,203,220,255,255,255,239,245,255,242,179,122,245,167,91,250,230,153,253,225,119,230,203,108,
            245,132,36,252,110,0,130,51,0,220,220,220,220,220,220,220,220,220,220,220,220,200,205,219,255,
            255,255,253,185,116,254,179,95,250,244,177,247,245,142,244,224,119,242,214,111,253,188,83,250,132,
            38,255,104,0,189,84,0,220,220,220,220,220,220,220,220,220,203,206,211,255,255,255,255,150,34,
            253,255,190,249,255,151,247,252,149,247,235,133,243,225,123,249,198,94,251,153,56,248,121,19,255,
            101,0,233,100,0,220,220,220,220,220,220,240,240,240,255,255,255,255,255,255,254,179,95,253,255,
            179,249,251,148,246,246,149,247,235,133,251,203,98,254,177,78,248,149,44,255,129,16,255,92,0,
            255,116,0,156,66,16,220,220,220,231,235,238,205,219,234,238,252,255,255,242,232,251,205,129,249,
            255,151,246,246,149,253,225,119,255,202,98,247,168,64,255,145,20,255,140,8,219,182,134,176,206,
            253,179,98,50,220,220,220,220,220,220,255,145,7,224,155,85,190,200,229,236,166,101,255,255,173,
            253,250,143,255,222,113,248,185,75,255,175,41,235,203,147,202,219,255,195,204,231,190,200,229,181,
            156,152,130,44,0,220,220,220,255,186,58,255,228,152,255,240,45,237,160,33,237,219,156,249,244,
            126,244,212,104,249,227,169,232,244,255,217,224,240,217,224,240,208,221,241,176,134,112,186,103,52,
            68,15,0,220,220,220,220,220,220,255,134,20,253,199,136,255,230,42,231,160,70,255,255,198,255,
            255,255,255,255,255,245,250,255,245,250,255,209,176,158,196,109,50,130,44,0,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,236,115,12,243,182,123,237,160,33,255,255,255,255,255,255,
            255,255,255,247,228,215,213,127,62,167,70,10,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,211,95,0,226,149,83,233,186,137,255,255,255,226,149,
            83,195,91,19,0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,250,175,112,206,91,10,0,0,0,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,0,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 2)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,210,210,222,179,179,
            194,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,192,192,202,240,240,245,255,255,255,255,255,255,169,
            169,181,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,198,198,208,231,231,235,255,255,255,255,255,255,255,255,255,240,240,245,249,249,252,
            157,157,169,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,205,205,213,224,
            224,229,255,255,255,249,249,251,243,243,246,240,240,245,249,249,251,215,215,221,209,209,219,231,231,
            236,161,161,172,220,220,220,220,220,220,220,220,220,239,239,247,215,215,221,240,240,245,231,231,236,
            226,226,234,224,224,229,226,226,234,226,226,234,196,196,209,191,191,206,191,191,206,193,193,206,214,
            214,225,165,165,177,220,220,220,220,220,220,217,217,224,255,255,255,209,209,219,206,206,217,209,209,
            219,209,209,219,215,215,221,178,178,195,171,171,189,175,175,192,179,179,194,175,175,192,169,169,189,
            183,183,202,153,153,168,220,220,220,215,215,221,233,235,231,255,250,255,201,201,213,183,183,202,188,
            188,204,179,179,197,158,158,180,160,160,180,160,160,180,153,153,176,151,151,173,187,187,203,255,255,
            255,219,219,222,220,220,220,212,209,214,218,250,219,94,233,96,240,231,246,193,193,208,174,174,192,
            150,150,174,141,141,166,138,138,165,138,138,165,179,179,194,223,223,228,231,231,238,255,255,255,214,
            214,216,220,220,220,220,220,220,202,194,210,207,222,215,208,204,220,208,208,219,193,193,208,126,126,
            155,122,122,152,169,169,189,191,191,206,181,181,197,201,201,213,226,226,234,255,255,255,155,155,162,
            220,220,220,220,220,220,220,220,220,171,171,189,214,214,225,177,177,194,175,175,192,193,193,208,158,
            158,180,129,129,158,151,151,173,175,175,192,217,217,228,205,205,213,99,94,116,0,0,49,220,220,
            220,220,220,220,220,220,220,220,220,220,161,161,172,201,201,213,147,147,172,179,179,194,99,94,116,
            126,126,155,164,164,186,204,203,209,104,104,127,0,0,49,220,220,220,0,184,0,0,190,0,220,
            220,220,220,220,220,220,220,220,220,220,220,148,148,163,191,191,206,169,169,189,98,98,135,181,181,
            195,137,137,150,27,27,68,220,220,220,220,220,220,0,180,0,14,158,0,13,183,0,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,148,148,163,186,186,199,145,145,155,53,53,89,220,
            220,220,220,220,220,220,220,220,0,190,0,14,158,0,129,255,0,42,191,0,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,100,100,120,0,0,32,220,220,220,220,220,220,
            220,220,220,220,220,220,0,173,0,14,158,0,42,191,0,23,159,29
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 3)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 16 4 1",
        "  c None",
        "a c #FFFFFF",
        "b c #000080",
        "d c #BFBFDF",
        /* pixels */
        "                ",
        "  bbbbbbbbbbbb  ",
        " baaaaaaaaaaaab ",
        " baaaaaaaaaaaab ",
        " baabbdaadbbaab ",
        " baabbbddbbbaab ",
        " baadbbbbbbdaab ",
        " baaadbbbbdaaab ",
        " baaadbbbbdaaab ",
        " baadbbbbbbdaab ",
        " baabbbddbbbaab ",
        " baabbdaadbbaab ",
        " baaaaaaaaaaaab ",
        " baaaaaaaaaaaab ",
        "  bbbbbbbbbbbb  ",
        "                "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 4)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 16 5 1",
        "  c None",
        "a c #FFFFFF",
        "b c #000080",
        "c c #E2D704",
        "e c #BFBFDF",
        /* pixels */
        "                ",
        "  bbbbbbbbbbbb  ",
        " bccccccccccccb ",
        " bcaaaaaaaaaacb ",
        " bcabbeaaebbacb ",
        " bcabbbeebbbacb ",
        " bcaebbbbbbeacb ",
        " bcaaebbbbeaacb ",
        " bcaaebbbbeaacb ",
        " bcaebbbbbbeacb ",
        " bcabbbeebbbacb ",
        " bcabbeaaebbacb ",
        " bcaaaaaaaaaacb ",
        " bccccccccccccb ",
        "  bbbbbbbbbbbb  ",
        "                "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 5)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,100,41,9,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,100,41,9,100,41,9,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,100,41,9,100,41,9,128,63,18,220,220,220,100,41,9,100,41,9,100,41,9,100,41,
            9,100,41,9,100,41,9,100,41,9,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            100,41,9,188,109,45,128,63,18,100,41,9,242,220,175,233,195,143,223,170,110,206,130,64,172,
            98,38,100,41,9,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,100,41,9,127,62,
            19,165,92,35,100,41,9,242,220,175,223,170,110,214,148,85,188,109,45,100,41,9,100,41,9,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,100,41,9,142,74,25,206,
            130,64,223,170,110,214,148,85,149,79,29,100,41,9,100,41,9,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,100,41,9,199,118,49,188,109,45,
            168,94,37,134,69,27,100,41,9,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,100,41,9,100,41,9,188,109,45,188,109,45,93,45,
            14,222,170,125,180,123,80,128,64,23,100,41,9,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,100,41,9,203,124,57,188,109,45,223,174,133,255,
            255,255,220,220,220,147,106,72,167,96,42,50,55,62,50,55,62,50,55,62,220,220,220,220,220,
            220,220,220,220,220,220,220,100,41,9,100,41,9,210,138,74,217,154,92,217,154,92,235,235,234,
            65,64,65,194,119,57,204,145,78,230,210,186,255,255,255,197,197,193,50,55,62,220,220,220,220,
            220,220,220,220,220,220,220,220,100,41,9,223,170,110,242,220,175,223,170,110,217,154,92,180,104,
            44,191,119,50,193,140,87,107,108,111,23,22,20,255,255,255,50,55,62,220,220,220,220,220,220,
            220,220,220,100,41,9,110,49,12,217,154,92,223,170,110,223,170,110,210,138,74,180,104,44,168,
            94,37,193,160,128,197,197,193,160,160,158,235,235,234,50,55,62,220,220,220,220,220,220,220,220,
            220,100,41,9,110,49,12,168,94,37,210,138,74,210,138,74,199,118,49,172,98,38,168,94,37,
            197,179,159,229,229,226,229,229,226,229,229,226,50,55,62,220,220,220,220,220,220,220,220,220,100,
            41,9,128,63,18,100,41,9,100,41,9,100,41,9,100,41,9,100,41,9,114,116,118,160,160,
            158,170,170,166,164,165,162,50,55,62,220,220,220,220,220,220,220,220,220,220,220,220,100,41,9,
            142,74,25,172,98,38,165,92,35,127,62,19,100,41,9,220,220,220,50,55,62,50,55,62,50,
            55,62,50,55,62,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,100,41,9,142,74,
            25,193,116,45,188,109,45,154,83,30,100,41,9,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 6)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,59,59,59,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,59,59,59,59,59,59,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,59,59,59,59,59,59,82,82,82,220,220,220,59,59,59,59,59,59,59,59,59,59,59,
            59,59,59,59,59,59,59,59,59,59,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            59,59,59,131,131,131,82,82,82,59,59,59,223,223,223,201,201,201,180,180,180,148,148,148,115,
            115,115,59,59,59,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,59,59,59,82,82,
            82,109,109,109,59,59,59,223,223,223,180,180,180,164,164,164,131,131,131,59,59,59,59,59,59,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,59,59,59,93,93,93,148,
            148,148,180,180,180,164,164,164,100,100,100,59,59,59,59,59,59,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,59,59,59,137,137,137,131,131,131,
            109,109,109,93,93,93,59,59,59,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,59,59,59,59,59,59,131,131,131,131,131,131,59,59,
            59,185,185,185,131,131,131,82,82,82,59,59,59,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,59,59,59,148,148,148,131,131,131,185,185,185,255,
            255,255,220,220,220,115,115,115,115,115,115,54,54,54,54,54,54,54,54,54,220,220,220,220,220,
            220,220,220,220,220,220,220,59,59,59,59,59,59,156,156,156,168,168,168,168,168,168,235,235,235,
            66,66,66,137,137,137,164,164,164,213,213,213,255,255,255,196,196,196,54,54,54,220,220,220,220,
            220,220,220,220,220,220,220,220,59,59,59,180,180,180,223,223,223,180,180,180,164,164,164,125,125,
            125,137,137,137,148,148,148,109,109,109,23,23,23,255,255,255,54,54,54,220,220,220,220,220,220,
            220,220,220,59,59,59,66,66,66,168,168,168,180,180,180,180,180,180,156,156,156,131,131,131,115,
            115,115,164,164,164,196,196,196,164,164,164,235,235,235,54,54,54,220,220,220,220,220,220,220,220,
            220,59,59,59,66,66,66,109,109,109,156,156,156,156,156,156,137,137,137,115,115,115,109,109,109,
            180,180,180,228,228,228,223,223,223,235,235,235,59,59,59,220,220,220,220,220,220,220,220,220,59,
            59,59,82,82,82,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,115,115,115,164,164,
            164,168,168,168,164,164,164,54,54,54,220,220,220,220,220,220,220,220,220,220,220,220,59,59,59,
            93,93,93,115,115,115,109,109,109,82,82,82,59,59,59,220,220,220,54,54,54,54,54,54,54,
            54,54,54,54,54,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,59,59,59,100,100,
            100,137,137,137,137,137,137,100,100,100,59,59,59,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 7)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,98,78,9,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,98,78,9,98,78,9,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,98,78,9,98,78,9,127,111,18,220,220,220,98,78,9,98,78,9,98,78,9,98,78,
            9,98,78,9,98,78,9,98,78,9,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            98,78,9,186,171,45,127,111,18,98,78,9,234,241,174,231,232,143,222,218,109,205,190,64,171,
            157,38,98,78,9,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,98,78,9,126,107,
            19,164,147,35,98,78,9,234,241,174,222,218,109,213,202,84,186,171,45,98,78,9,98,78,9,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,98,78,9,140,123,25,205,
            190,64,222,218,109,213,202,84,148,130,29,98,78,9,98,78,9,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,98,78,9,198,183,49,186,171,45,
            166,150,37,133,114,26,98,78,9,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,98,78,9,98,78,9,186,171,45,186,171,45,92,78,
            13,221,211,124,179,166,80,127,108,22,98,78,9,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,98,78,9,202,187,57,186,171,45,222,213,133,255,
            255,255,150,8,249,146,138,71,165,149,42,50,55,61,50,55,61,50,55,61,220,220,220,220,220,
            220,220,220,220,220,220,220,98,78,9,98,78,9,209,198,74,216,208,91,216,208,91,234,234,233,
            64,63,64,193,178,56,203,199,78,229,229,186,255,255,255,195,196,193,50,55,61,220,220,220,220,
            220,220,220,220,220,220,220,220,98,78,9,222,218,109,234,241,174,222,218,109,216,208,91,179,162,
            44,190,178,49,192,186,87,107,108,110,22,22,19,255,255,255,50,55,61,220,220,220,220,220,220,
            220,220,220,98,78,9,109,92,12,216,208,91,222,218,109,222,218,109,209,198,74,179,162,44,166,
            150,37,192,187,127,195,196,193,159,159,158,234,234,233,50,55,61,220,220,220,220,220,220,220,220,
            220,98,78,9,109,92,12,166,150,37,209,198,74,209,198,74,198,183,49,171,157,38,166,150,37,
            196,195,159,227,228,225,227,228,225,227,228,225,50,55,61,220,220,220,220,220,220,220,220,220,98,
            78,9,127,111,18,98,78,9,98,78,9,98,78,9,98,78,9,98,78,9,114,116,117,159,159,
            158,168,169,166,163,164,161,50,55,61,220,220,220,220,220,220,220,220,220,220,220,220,98,78,9,
            140,123,25,171,157,38,164,147,35,126,107,19,98,78,9,220,220,220,50,55,61,50,55,61,50,
            55,61,50,55,61,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,98,78,9,140,123,
            25,192,180,45,186,171,45,153,137,30,98,78,9,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 8)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "13 7 3 1",
        "  c None",
        "a c #FFFFFF",
        "b c #808080",
        /* pixels */
        "bbbbbbbbbbbba",
        " b         a ",
        "  b       a  ",
        "   b     a   ",
        "    b   a    ",
        "     b a     ",
        "      a      "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 9)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "13 7 3 1",
        "  c None",
        "a c #FFFFFF",
        "b c #808080",
        /* pixels */
        "      b      ",
        "     b a     ",
        "    b   a    ",
        "   b     a   ",
        "  b       a  ",
        " b         a ",
        "baaaaaaaaaaaa"
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    return wxNullBitmap;
}

wxBitmap connButImg( size_t index )
{
    if (index == 0)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,0,30,4,0,42,11,0,35,7,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,33,4,
            0,64,15,0,83,30,6,106,50,25,126,66,24,126,62,14,123,53,0,108,39,0,86,29,0,
            65,24,0,30,9,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,68,16,9,105,53,97,167,126,162,
            220,176,178,242,180,152,241,152,121,233,120,87,222,87,53,208,53,23,188,29,4,157,23,0,113,
            27,0,68,26,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,0,47,11,0,85,28,89,159,123,220,248,227,229,255,226,183,255,180,140,240,
            139,105,229,104,71,219,71,43,209,42,26,209,25,18,220,17,14,234,12,7,233,7,0,174,12,
            0,93,28,0,37,13,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,48,
            12,0,89,34,145,198,167,248,255,246,200,255,199,156,242,156,120,233,120,88,222,88,56,212,56,
            33,207,32,20,212,19,15,222,15,11,231,9,4,239,4,0,250,0,0,255,0,0,222,0,0,
            107,25,0,34,12,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,85,29,137,197,159,
            233,255,229,177,248,176,138,238,138,105,228,105,73,218,73,44,209,43,27,215,24,18,221,17,13,
            223,13,7,234,7,2,252,0,0,255,0,0,255,0,0,255,0,0,255,0,0,232,0,0,95,
            27,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            0,63,18,0,69,22,0,69,23,0,66,22,0,68,22,85,160,117,215,255,211,159,242,159,123,
            232,123,90,222,90,58,213,58,34,209,34,22,213,20,7,176,20,0,137,24,0,119,25,0,124,
            23,0,152,16,0,207,1,0,255,0,0,255,0,0,255,0,0,255,0,0,199,1,0,68,27,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,48,13,5,111,46,66,
            179,85,54,179,73,29,159,49,17,145,42,126,228,130,140,240,139,109,227,109,78,216,78,46,208,
            46,27,211,26,16,206,18,0,126,24,0,65,22,0,27,8,220,220,220,0,18,4,0,36,14,
            0,70,27,0,120,20,0,211,0,0,255,0,0,255,0,0,255,0,0,135,17,0,28,11,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,44,12,29,141,62,109,240,105,79,227,
            76,55,220,53,34,215,32,20,215,19,22,226,22,27,229,27,23,222,23,17,218,17,14,211,17,
            0,108,27,0,53,22,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,
            34,13,0,78,29,0,157,11,0,255,0,0,255,0,0,215,0,0,68,24,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,0,43,12,7,119,44,73,219,73,49,212,49,29,207,29,
            19,213,19,12,223,12,4,234,4,0,247,0,0,255,0,0,255,0,0,240,0,0,145,11,0,
            80,25,0,38,13,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,0,62,27,0,127,17,0,250,0,0,255,0,0,111,22,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,0,93,32,39,195,45,32,209,30,19,213,19,13,223,13,6,
            234,6,0,247,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,228,0,0,117,
            24,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            0,53,23,0,114,20,0,252,0,0,171,9,0,27,12,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,0,69,25,7,151,27,22,221,19,13,223,13,6,234,6,0,247,0,0,255,
            0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,151,15,0,22,7,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,
            48,18,0,123,16,0,178,6,0,53,16,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,0,39,12,0,110,27,13,222,13,7,238,6,0,247,0,0,255,0,0,255,0,0,255,0,
            0,255,0,0,255,0,0,255,0,0,255,0,0,187,4,0,73,24,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,50,8,0,75,
            27,0,88,19,0,74,22,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            0,77,27,0,183,13,1,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,
            255,0,0,248,0,0,151,14,0,65,24,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,0,29,1,0,73,22,34,124,76,120,180,150,170,209,190,45,126,87,
            0,69,17,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,42,14,0,
            110,24,0,250,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,187,4,0,100,
            25,0,39,16,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            0,74,23,55,139,96,180,216,199,255,255,255,255,255,255,255,255,255,238,253,244,9,104,53,0,
            35,5,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,68,27,0,135,
            14,0,255,0,0,255,0,0,247,0,0,182,5,0,109,23,0,53,22,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,57,14,30,123,73,174,215,191,255,
            255,255,255,255,255,246,255,244,231,255,231,219,255,219,222,255,219,103,185,126,0,73,22,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,53,16,0,75,27,0,127,12,
            0,137,13,0,89,23,0,47,18,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,0,79,27,78,165,109,208,255,209,219,255,216,191,253,191,176,248,
            176,165,246,165,152,242,152,141,239,141,132,238,132,119,231,119,4,113,45,0,39,9,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,0,35,6,25,119,69,0,86,43,0,54,17,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,0,74,23,75,177,99,165,252,161,144,241,141,126,233,126,116,231,116,104,227,104,94,223,94,
            84,220,84,74,218,74,63,213,63,58,220,56,20,158,40,0,70,24,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,59,146,101,167,208,188,0,83,30,0,27,2,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,98,36,
            88,222,89,85,228,80,69,216,69,60,212,60,50,211,50,42,209,42,34,209,34,27,211,27,22,
            213,22,16,219,16,12,228,11,6,222,8,0,101,27,0,25,4,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,2,96,44,247,255,248,146,205,166,0,88,33,0,38,7,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,66,22,2,123,34,19,
            187,27,17,219,17,11,226,11,8,229,8,5,234,5,2,241,2,0,248,0,0,255,0,0,255,
            0,0,255,0,0,255,0,0,150,13,0,45,18,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,0,64,17,118,197,139,222,255,215,118,201,136,2,100,42,0,53,14,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,53,17,0,80,26,9,171,
            25,14,246,12,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,
            0,255,0,0,193,2,0,65,26,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,
            29,3,24,131,64,151,246,150,150,247,147,105,215,113,17,125,50,0,74,25,0,36,11,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,0,52,18,0,114,28,29,197,33,28,212,27,
            17,218,17,6,234,6,0,252,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,
            201,0,0,74,28,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,76,
            25,66,186,81,101,233,98,91,228,89,79,222,78,33,167,49,0,110,34,0,79,27,0,56,20,
            0,40,14,0,58,22,0,87,27,0,145,22,14,219,15,12,232,11,7,234,7,4,241,4,2,
            247,2,0,253,0,0,255,0,0,135,15,0,126,18,0,150,13,0,152,12,0,114,24,0,57,
            20,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,30,6,0,107,36,
            50,206,53,48,215,46,40,208,39,37,216,34,27,209,27,13,186,22,3,166,20,0,165,19,0,
            177,15,3,218,8,4,250,2,0,253,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,
            0,0,178,4,0,67,27,0,33,12,0,35,13,0,37,15,0,34,11,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,55,17,0,123,28,18,
            215,18,16,227,14,11,227,12,8,234,7,6,246,4,3,255,1,0,255,0,0,255,0,0,255,
            0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,201,0,0,86,30,
            0,28,7,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,60,22,0,128,23,0,233,
            2,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,
            0,255,0,0,255,0,0,255,0,0,255,0,0,185,4,0,87,30,0,39,13,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,53,19,0,108,24,0,198,1,
            0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,
            255,0,0,226,0,0,137,16,0,77,30,0,30,8,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,26,7,0,68,27,0,114,22,0,
            168,8,0,209,0,0,234,0,0,250,0,0,241,0,0,219,0,0,183,4,0,134,17,0,87,
            28,0,53,22,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,24,7,0,46,19,0,71,
            25,0,84,26,0,87,25,0,85,25,0,77,26,0,60,24,0,38,14,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 32, 32, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 1)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,248,0,
            0,123,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,171,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,
            0,0,228,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,189,0,
            0,255,0,0,255,0,0,255,0,0,255,5,5,255,8,8,255,6,6,255,0,0,255,0,0,
            195,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,243,0,0,255,0,0,255,3,3,255,23,23,255,33,33,255,32,32,255,18,18,255,0,
            0,255,0,0,124,0,0,220,220,220,220,220,220,220,220,220,220,220,220,255,0,0,255,0,0,
            255,3,3,255,17,17,255,29,29,255,39,39,255,41,41,255,31,31,255,8,8,255,0,0,208,
            0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,255,0,0,255,0,
            0,255,19,19,255,68,68,255,103,103,255,115,115,255,109,109,255,84,84,255,43,43,255,1,1,
            255,0,0,220,220,220,220,220,220,220,220,220,255,0,0,255,0,0,255,0,0,255,14,14,255,
            33,33,255,52,52,255,66,66,255,73,73,255,70,70,255,46,46,255,11,11,255,0,0,208,0,
            0,220,220,220,220,220,220,220,220,220,220,220,220,255,0,0,255,0,0,255,18,18,255,85,85,
            255,154,154,255,199,199,255,212,212,255,196,196,255,153,153,255,95,95,255,35,35,255,0,0,196,
            0,0,220,220,220,220,220,220,255,0,0,255,0,0,255,3,3,255,18,18,255,39,39,255,56,
            56,255,67,67,255,76,76,255,86,86,255,82,82,255,47,47,255,9,9,255,0,0,208,0,0,
            220,220,220,220,220,220,255,0,0,255,0,0,255,16,16,255,77,77,255,159,159,255,225,225,255,
            247,247,255,255,255,255,255,255,255,210,210,255,139,139,255,63,63,255,1,1,255,0,0,220,220,
            220,220,220,220,255,0,0,255,0,0,255,3,3,255,18,18,255,37,37,255,47,47,255,55,55,
            255,64,64,255,74,74,255,87,87,255,82,82,255,46,46,255,9,9,255,0,0,237,0,0,255,
            0,0,255,0,0,255,14,14,255,70,70,255,146,146,255,206,206,255,221,221,255,230,230,255,241,
            241,255,251,251,255,221,221,255,164,164,255,77,77,255,5,5,255,0,0,220,220,220,220,220,220,
            255,0,0,255,0,0,255,1,1,255,15,15,255,29,29,255,37,37,255,47,47,255,54,54,255,
            64,64,255,75,75,255,87,87,255,80,80,255,45,45,255,8,8,255,0,0,255,0,0,255,12,
            12,255,62,62,255,131,131,255,181,181,255,196,196,255,206,206,255,217,217,255,229,229,255,237,237,
            255,209,209,255,163,163,255,72,72,255,2,2,255,0,0,220,220,220,220,220,220,255,0,0,255,
            0,0,255,0,0,255,8,8,255,23,23,255,31,31,255,41,41,255,47,47,255,56,56,255,66,
            66,255,77,77,255,89,89,255,76,76,255,38,38,255,3,3,255,3,3,255,45,45,255,107,107,
            255,160,160,255,175,175,255,184,184,255,196,196,255,208,208,255,220,220,255,228,228,255,201,201,255,
            141,141,255,53,53,255,0,0,253,0,0,220,220,220,220,220,220,230,0,0,255,0,0,255,0,
            0,255,2,2,255,14,14,255,24,24,255,33,33,255,39,39,255,48,48,255,57,57,255,67,67,
            255,79,79,255,89,89,255,72,72,255,34,34,255,36,36,255,89,89,255,137,137,255,153,153,255,
            161,161,255,175,175,255,186,186,255,198,198,255,209,209,255,220,220,255,175,175,255,95,95,255,19,
            19,255,0,0,179,0,0,220,220,220,220,220,220,107,0,0,255,0,0,255,0,0,255,0,0,
            255,3,3,255,15,15,255,24,24,255,31,31,255,39,39,255,48,48,255,58,58,255,68,68,255,
            79,79,255,89,89,255,72,72,255,78,78,255,117,117,255,129,129,255,139,139,255,151,151,255,163,
            163,255,175,175,255,188,188,255,200,200,255,171,171,255,99,99,255,32,32,255,0,0,255,0,0,
            220,220,220,220,220,220,220,220,220,220,220,220,169,0,0,249,0,0,255,0,0,255,0,0,255,
            4,4,255,15,15,255,23,23,255,31,31,255,41,41,255,49,49,255,58,58,255,68,68,255,79,
            79,255,89,89,255,97,97,255,108,108,255,118,118,255,129,129,255,139,139,255,151,151,255,164,164,
            255,176,176,255,154,154,255,93,93,255,29,29,255,0,0,255,0,0,115,0,0,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,171,0,0,239,0,0,252,0,0,255,0,0,255,3,
            3,255,14,14,255,23,23,255,31,31,255,41,41,255,49,49,255,58,58,255,69,69,255,80,80,
            255,88,88,255,97,97,255,108,108,255,119,119,255,129,129,255,141,141,255,156,156,255,129,129,255,
            80,80,255,28,28,255,0,0,255,0,0,126,0,0,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,166,0,0,230,0,0,248,0,0,255,0,0,255,2,2,
            255,13,13,255,23,23,255,32,32,255,42,42,255,51,51,255,59,59,255,70,70,255,78,78,255,
            88,88,255,98,98,255,108,108,255,119,119,255,134,134,255,117,117,255,64,64,255,23,23,255,0,
            0,248,0,0,123,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,158,0,0,217,0,0,247,0,0,255,0,0,255,2,2,255,
            13,13,255,24,24,255,33,33,255,42,42,255,52,52,255,59,59,255,68,68,255,78,78,255,88,
            88,255,99,99,255,110,110,255,100,100,255,56,56,255,13,13,251,0,0,233,0,0,115,0,0,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,170,0,0,204,0,0,247,0,0,255,0,0,255,3,3,255,15,
            15,255,24,24,255,33,33,255,42,42,255,52,52,255,58,58,255,68,68,255,78,78,255,90,90,
            255,93,93,255,56,56,255,16,16,247,0,0,221,0,0,129,0,0,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,184,0,0,216,0,0,255,0,0,255,0,0,255,1,1,255,9,9,255,18,18,
            255,26,26,255,35,35,255,44,44,255,52,52,255,60,60,255,70,70,255,82,82,255,90,90,255,
            70,70,255,31,31,255,0,0,225,0,0,159,0,0,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,176,0,0,
            210,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,3,3,255,12,12,255,18,18,255,
            27,27,255,36,36,255,43,43,255,53,53,255,62,62,255,73,73,255,84,84,255,90,90,255,67,
            67,255,28,28,255,1,1,229,0,0,149,0,0,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,168,0,0,206,0,0,255,0,0,255,
            0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,4,4,255,12,12,255,19,19,255,27,
            27,255,35,35,255,43,43,255,53,53,255,62,62,255,73,73,255,85,85,255,90,90,255,64,64,
            255,34,34,255,3,3,225,0,0,141,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,159,0,0,199,0,0,255,0,0,255,0,0,255,0,0,255,0,
            0,255,0,0,255,0,0,255,0,0,255,0,0,255,4,4,255,12,12,255,19,19,255,27,27,
            255,35,35,255,44,44,255,54,54,255,63,63,255,74,74,255,85,85,255,89,89,255,68,68,255,
            35,35,255,2,2,219,0,0,136,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,139,0,0,188,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,
            255,0,0,255,0,0,255,0,0,255,0,0,255,5,5,255,12,12,255,16,16,255,27,27,255,
            35,35,255,44,44,255,54,54,255,63,63,255,74,74,255,86,86,255,90,90,255,68,68,255,33,
            33,255,1,1,210,0,0,114,0,0,220,220,220,220,220,220,220,220,220,92,0,0,171,0,0,
            255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,
            0,0,255,0,0,255,0,0,255,0,0,255,1,1,255,4,4,255,16,16,255,27,27,255,35,
            35,255,44,44,255,54,54,255,64,64,255,74,74,255,85,85,255,89,89,255,65,65,255,29,29,
            255,0,0,191,0,0,220,220,220,220,220,220,220,220,220,133,0,0,207,0,0,255,0,0,255,
            0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,
            0,255,0,0,255,0,0,255,0,0,255,0,0,255,3,3,255,16,16,255,28,28,255,36,36,
            255,45,45,255,55,55,255,65,65,255,74,74,255,83,83,255,77,77,255,52,52,255,15,15,222,
            0,0,118,0,0,220,220,220,220,220,220,149,0,0,241,0,0,255,0,0,255,0,0,255,0,
            0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,
            255,0,0,210,0,0,214,0,0,255,0,0,255,3,3,255,16,16,255,28,28,255,36,36,255,
            45,45,255,55,55,255,63,63,255,73,73,255,69,69,255,56,56,255,24,24,247,0,0,148,0,
            0,220,220,220,220,220,220,158,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,
            255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,229,0,0,143,
            0,0,139,0,0,229,0,0,255,0,0,255,5,5,255,19,19,255,31,31,255,39,39,255,48,
            48,255,55,55,255,65,65,255,63,63,255,53,53,255,23,23,255,0,0,148,0,0,220,220,220,
            220,220,220,157,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,
            0,0,255,0,0,255,0,0,255,0,0,255,0,0,235,0,0,150,0,0,80,0,0,106,0,
            0,153,0,0,233,0,0,255,0,0,255,6,6,255,21,21,255,32,32,255,39,39,255,47,47,
            255,56,56,255,54,54,255,41,41,255,18,18,255,0,0,143,0,0,220,220,220,220,220,220,141,
            0,0,229,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,
            0,255,0,0,255,0,0,236,0,0,154,0,0,67,0,0,220,220,220,220,220,220,103,0,0,
            154,0,0,233,0,0,255,0,0,255,6,6,255,18,18,255,27,27,255,34,34,255,39,39,255,
            37,37,255,25,25,255,8,8,233,0,0,125,0,0,220,220,220,220,220,220,112,0,0,181,0,
            0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,
            241,0,0,157,0,0,67,0,0,220,220,220,220,220,220,220,220,220,220,220,220,102,0,0,156,
            0,0,239,0,0,255,0,0,255,5,5,255,12,12,255,17,17,255,18,18,255,17,17,255,9,
            9,255,0,0,187,0,0,75,0,0,220,220,220,220,220,220,220,220,220,147,0,0,202,0,0,
            255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,233,0,0,159,0,0,67,
            0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,103,0,0,159,0,
            0,230,0,0,255,0,0,255,0,0,255,1,1,255,3,3,255,1,1,255,0,0,208,0,0,
            128,0,0,220,220,220,220,220,220,220,220,220,220,220,220,57,0,0,143,0,0,184,0,0,225,
            0,0,248,0,0,247,0,0,228,0,0,195,0,0,145,0,0,59,0,0,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,90,0,0,150,0,0,
            192,0,0,229,0,0,248,0,0,248,0,0,227,0,0,186,0,0,128,0,0,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,94,0,0,129,0,0,140,0,
            0,138,0,0,126,0,0,86,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,100,0,0,133,
            0,0,140,0,0,139,0,0,124,0,0,76,0,0,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 32, 32, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 2)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,132,132,132,132,132,132,133,133,133,130,130,130,133,
            133,133,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,130,130,130,130,130,130,130,130,130,
            130,130,130,130,130,130,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,132,132,132,133,133,133,136,136,136,138,138,138,138,138,138,135,135,135,132,132,
            132,132,132,132,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,133,133,133,130,130,130,134,134,134,140,140,140,144,144,144,142,142,142,136,
            136,136,130,130,130,132,132,132,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,133,133,
            133,134,134,134,139,139,139,146,146,146,153,153,153,155,155,155,154,154,154,144,144,144,135,135,135,
            132,132,132,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,132,
            132,132,132,132,132,142,142,142,163,163,163,177,177,177,181,181,181,177,177,177,163,163,163,145,145,
            145,133,133,133,133,133,133,220,220,220,220,220,220,220,220,220,132,132,132,133,133,133,139,139,139,
            146,146,146,155,155,155,164,164,164,172,172,172,173,173,173,165,165,165,153,153,153,136,136,136,130,
            130,130,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,130,130,130,132,132,132,147,147,
            147,177,177,177,206,206,206,221,221,221,223,223,223,213,213,213,196,196,196,173,173,173,145,145,145,
            132,132,132,220,220,220,220,220,220,220,220,220,133,133,133,135,135,135,140,140,140,147,147,147,159,
            159,159,170,170,170,179,179,179,186,186,186,185,185,185,174,174,174,154,154,154,136,136,136,130,130,
            130,220,220,220,220,220,220,220,220,220,130,130,130,132,132,132,149,149,149,185,185,185,217,217,217,
            248,248,248,255,255,255,255,255,255,247,247,247,224,224,224,195,195,195,162,162,162,135,135,135,132,
            132,132,220,220,220,133,133,133,133,133,133,134,134,134,139,139,139,147,147,147,157,157,157,165,165,
            165,173,173,173,180,180,180,189,189,189,189,189,189,175,175,175,154,154,154,136,136,136,129,129,129,
            220,220,220,132,132,132,132,132,132,146,146,146,183,183,183,224,224,224,255,255,255,255,255,255,255,
            255,255,255,255,255,255,255,255,242,242,242,210,210,210,173,173,173,140,140,140,130,130,130,220,220,
            220,129,129,129,132,132,132,134,134,134,136,136,136,143,143,143,150,150,150,159,159,159,166,166,166,
            174,174,174,180,180,180,188,188,188,189,189,189,175,175,175,154,154,154,135,135,135,132,132,132,133,
            133,133,146,146,146,178,178,178,220,221,220,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
            255,255,255,255,247,247,247,218,218,218,178,178,178,142,142,142,130,130,130,220,220,220,126,126,126,
            128,128,128,133,133,133,133,133,133,138,138,138,144,144,144,152,152,152,159,159,159,166,166,166,173,
            173,173,180,180,180,188,188,188,191,191,191,174,174,174,153,153,153,135,135,135,144,144,144,173,173,
            173,210,210,210,247,247,247,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
            247,247,247,217,217,217,173,173,173,138,138,138,130,130,130,220,220,220,220,220,220,122,122,122,130,
            130,130,134,134,134,133,133,133,136,136,136,144,144,144,153,153,153,160,160,160,166,166,166,173,173,
            173,179,179,179,188,188,188,191,191,191,174,174,174,154,154,154,166,166,166,201,201,201,234,234,234,
            245,245,245,250,250,250,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,241,241,241,203,
            203,203,159,159,159,133,133,133,132,132,132,220,220,220,220,220,220,115,115,115,122,122,122,133,133,
            133,133,133,133,133,133,133,138,138,138,145,145,145,154,154,154,160,160,160,166,166,166,173,173,173,
            181,181,181,189,189,189,191,191,191,175,175,175,189,189,189,218,218,218,229,229,229,236,236,236,242,
            242,242,248,248,248,255,255,255,255,255,255,255,255,255,255,255,255,217,217,217,175,175,175,139,139,
            139,130,130,130,220,220,220,220,220,220,220,220,220,114,114,114,115,115,115,123,123,123,134,134,134,
            133,133,133,133,133,133,139,139,139,147,147,147,155,155,155,162,162,162,168,168,168,175,175,175,183,
            183,183,191,191,191,191,191,191,203,203,203,215,215,215,223,223,223,230,230,230,237,237,237,242,242,
            242,251,251,251,255,255,255,255,255,255,226,226,226,185,185,185,145,145,145,128,128,128,128,128,128,
            220,220,220,220,220,220,220,220,220,220,220,220,111,111,111,113,113,113,123,123,123,134,134,134,133,
            133,133,134,134,134,142,142,142,149,149,149,155,155,155,162,162,162,169,169,169,177,177,177,186,186,
            186,193,193,193,200,200,200,208,208,208,216,216,216,224,224,224,230,230,230,236,236,236,246,246,246,
            250,250,250,223,223,223,186,186,186,147,147,147,125,125,125,122,122,122,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,107,107,107,108,108,108,123,123,123,135,135,135,133,133,
            133,135,135,135,142,142,142,147,147,147,155,155,155,163,163,163,170,170,170,178,178,178,186,186,186,
            193,193,193,201,201,201,209,209,209,217,217,217,223,223,223,230,230,230,236,236,236,215,215,215,180,
            180,180,146,146,146,120,120,120,117,117,117,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,104,104,104,105,105,105,122,122,122,135,135,135,133,133,133,
            135,135,135,142,142,142,147,147,147,156,156,156,163,163,163,170,170,170,178,178,178,186,186,186,194,
            194,194,201,201,201,209,209,209,216,216,216,221,221,221,207,207,207,178,178,178,145,145,145,117,117,
            117,113,113,113,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,101,101,101,101,101,101,119,119,119,133,133,133,133,133,133,135,
            135,135,140,140,140,149,149,149,156,156,156,164,164,164,172,172,172,179,179,179,187,187,187,195,195,
            195,203,203,203,207,207,207,196,196,196,172,172,172,143,143,143,115,115,115,108,108,108,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,95,95,95,103,103,103,130,130,130,134,134,134,133,133,133,135,135,
            135,142,142,142,150,150,150,157,157,157,165,165,165,172,172,172,180,180,180,188,188,188,196,196,196,
            194,194,194,177,177,177,155,155,155,123,123,123,103,103,103,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,92,92,92,97,97,97,126,126,126,134,134,134,133,133,133,133,133,133,133,133,133,135,135,135,
            143,143,143,152,152,152,157,157,157,165,165,165,173,173,173,180,180,180,188,188,188,195,195,195,193,
            193,193,173,173,173,152,152,152,117,117,117,99,99,99,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,87,87,87,93,93,93,
            123,123,123,135,135,135,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,136,136,136,143,
            143,143,152,152,152,159,159,159,165,165,165,174,174,174,181,181,181,188,188,188,195,195,195,191,191,
            191,173,173,173,150,150,150,115,115,115,96,96,96,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,83,83,83,89,89,89,122,122,122,135,135,135,133,
            133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,136,136,136,144,144,
            144,152,152,152,160,160,160,166,166,166,174,174,174,180,180,180,187,187,187,195,195,195,191,191,191,
            173,173,173,150,150,150,112,112,112,93,93,93,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,79,79,79,86,86,86,120,120,120,136,136,136,133,133,133,133,133,133,133,133,
            133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,136,136,136,145,145,145,
            153,153,153,160,160,160,168,168,168,174,174,174,179,179,179,189,189,189,196,196,196,189,189,189,172,
            172,172,149,149,149,108,108,108,91,91,91,220,220,220,220,220,220,220,220,220,220,220,220,75,75,
            75,78,78,78,117,117,117,136,136,136,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,
            133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,139,139,139,145,145,145,154,
            154,154,162,162,162,168,168,168,173,173,173,181,181,181,189,189,189,197,197,197,187,187,187,169,169,
            169,147,147,147,102,102,102,86,86,86,220,220,220,220,220,220,220,220,220,72,72,72,96,96,96,
            135,135,135,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,
            133,133,133,133,133,133,133,133,133,133,133,133,133,133,135,135,135,140,140,140,147,147,147,156,156,
            156,163,163,163,168,168,168,175,175,175,185,185,185,193,193,193,195,195,195,181,181,181,164,164,164,
            132,132,132,87,87,87,220,220,220,220,220,220,220,220,220,75,75,75,120,120,120,135,135,135,133,
            133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,
            133,133,133,133,134,134,134,134,134,134,134,134,134,136,136,136,142,142,142,149,149,149,155,155,155,
            162,162,162,169,169,169,178,178,178,185,185,185,191,191,191,188,188,188,173,173,173,153,153,153,102,
            102,102,81,81,81,220,220,220,71,71,71,84,84,84,132,132,132,134,134,134,133,133,133,133,133,
            133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,135,135,135,
            130,130,130,92,92,92,112,112,112,136,136,136,136,136,136,142,142,142,149,149,149,155,155,155,163,
            163,163,170,170,170,178,178,178,183,183,183,183,183,183,175,175,175,157,157,157,116,116,116,77,77,
            77,220,220,220,71,71,71,87,87,87,132,132,132,134,134,134,133,133,133,133,133,133,133,133,133,
            133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,134,134,134,133,133,133,91,91,91,69,
            69,69,75,75,75,113,113,113,136,136,136,136,136,136,143,143,143,147,147,147,156,156,156,164,164,
            164,172,172,172,178,178,178,178,178,178,170,170,170,157,157,157,120,120,120,75,75,75,220,220,220,
            71,71,71,84,84,84,133,133,133,134,134,134,133,133,133,133,133,133,133,133,133,133,133,133,133,
            133,133,133,133,133,133,133,133,134,134,134,133,133,133,93,93,93,69,69,69,220,220,220,72,72,
            72,75,75,75,116,116,116,138,138,138,136,136,136,142,142,142,149,149,149,156,156,156,164,164,164,
            170,170,170,169,169,169,162,162,162,154,154,154,114,114,114,69,69,69,220,220,220,220,220,220,75,
            75,75,122,122,122,136,136,136,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,
            133,135,135,135,133,133,133,93,93,93,68,68,68,220,220,220,220,220,220,220,220,220,72,72,72,
            76,76,76,116,116,116,138,138,138,136,136,136,142,142,142,147,147,147,154,154,154,157,157,157,157,
            157,157,153,153,153,146,146,146,95,95,95,71,71,71,220,220,220,220,220,220,71,71,71,93,93,
            93,135,135,135,135,135,135,133,133,133,133,133,133,133,133,133,134,134,134,136,136,136,133,133,133,
            93,93,93,68,68,68,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,72,72,72,76,
            76,76,114,114,114,136,136,136,138,138,138,142,142,142,144,144,144,146,146,146,146,146,146,147,147,
            147,120,120,120,75,75,75,220,220,220,220,220,220,220,220,220,220,220,220,72,72,72,96,96,96,
            129,129,129,136,136,136,138,138,138,136,136,136,134,134,134,117,117,117,87,87,87,71,71,71,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,71,71,71,73,73,
            73,99,99,99,129,129,129,139,139,139,142,142,142,143,143,143,139,139,139,118,118,118,79,79,79,
            72,72,72,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,71,71,71,81,81,81,97,
            97,97,105,105,105,102,102,102,88,88,88,73,73,73,71,71,71,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,72,72,72,69,69,69,
            81,81,81,96,96,96,105,105,105,103,103,103,91,91,91,73,73,73,72,72,72,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,71,71,71,68,68,68,69,69,
            69,68,68,68,69,69,69,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,69,
            69,69,69,69,69,67,67,67,69,69,69,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 32, 32, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    return wxNullBitmap;
}

wxBitmap amuleDlgImages( size_t index )
{
    if (index == 0)
    {
        static const unsigned char data[] = 
        {
            220,220,220,86,102,117,86,102,117,86,102,117,86,102,117,86,102,117,76,93,108,76,93,108,76,
            93,108,76,93,108,67,79,91,67,79,91,67,79,91,57,68,78,48,57,65,220,220,220,220,220,
            220,86,102,117,172,195,217,172,195,217,172,195,217,172,195,217,172,195,217,164,188,211,164,188,211,
            164,188,211,164,188,211,164,188,211,158,183,209,150,179,207,48,57,65,220,220,220,220,220,220,86,
            102,117,172,195,217,245,248,250,200,215,229,181,201,220,181,201,220,181,201,220,172,195,217,164,188,
            211,158,183,209,150,179,207,150,179,207,150,179,207,48,57,65,220,220,220,220,220,220,86,102,117,
            172,194,215,213,224,235,65,255,65,207,255,207,91,227,76,115,135,155,172,194,215,164,188,211,155,
            180,204,150,179,207,143,172,200,141,170,198,48,57,65,220,220,220,220,220,220,86,102,117,171,191,
            211,198,212,226,93,227,93,93,227,93,103,217,102,106,126,146,172,194,215,164,188,211,155,180,204,
            141,170,198,137,167,196,135,165,194,48,57,65,220,220,220,220,220,220,86,102,117,164,188,211,182,
            197,211,76,93,108,76,93,108,76,93,108,87,105,123,171,191,211,155,180,204,150,179,207,135,165,
            194,132,162,191,132,162,191,48,57,65,220,220,220,220,220,220,86,102,117,164,188,211,245,247,250,
            194,209,223,172,194,215,171,191,211,171,191,211,164,188,211,155,180,204,146,171,195,129,158,188,126,
            156,186,126,156,186,48,57,65,220,220,220,220,220,220,76,93,108,164,184,203,220,228,236,255,255,
            0,255,255,191,211,221,70,106,126,146,155,180,204,150,179,207,137,167,196,124,153,181,116,149,179,
            116,149,179,48,57,65,220,220,220,220,220,220,76,93,108,164,184,203,190,205,219,211,221,70,211,
            221,70,193,207,93,93,113,133,155,180,204,137,167,196,129,158,188,116,149,179,116,149,179,101,133,
            162,48,57,65,220,220,220,220,220,220,76,93,108,155,178,198,164,184,203,67,82,98,67,82,98,
            67,82,98,67,82,98,146,171,195,137,163,189,124,153,181,109,140,169,97,128,157,78,97,116,48,
            57,65,220,220,220,220,220,220,76,93,108,146,171,195,232,237,242,182,197,211,155,178,198,155,178,
            198,146,171,195,146,171,195,86,102,117,86,102,117,67,79,91,57,68,78,48,57,65,48,57,65,
            220,220,220,220,220,220,67,79,91,142,163,182,212,221,229,255,124,124,255,222,222,195,63,76,93,
            113,133,129,158,188,86,102,117,181,201,220,164,184,203,106,132,156,68,86,104,68,86,104,220,220,
            220,220,220,220,67,79,91,126,152,175,175,191,205,195,63,76,195,63,76,175,84,101,78,97,116,
            124,153,181,67,79,91,164,184,203,116,140,163,87,115,143,48,57,65,220,220,220,220,220,220,220,
            220,220,67,79,91,116,140,163,142,163,182,50,62,74,50,62,74,50,62,74,50,62,74,82,108,
            138,57,68,78,106,132,156,87,115,143,48,57,65,220,220,220,220,220,220,220,220,220,220,220,220,
            57,68,78,106,132,156,96,124,151,93,121,149,90,118,146,87,115,143,80,105,132,67,82,98,48,
            57,65,68,86,104,48,57,65,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,48,57,
            65,48,57,65,48,57,65,48,57,65,48,57,65,48,57,65,48,57,65,48,57,65,48,57,65,
            68,86,104,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 1)
    {
        static const unsigned char data[] = 
        {
            137,170,33,137,170,33,137,170,33,137,170,33,137,170,33,121,151,29,121,151,29,121,151,29,121,
            151,29,107,133,26,107,133,26,107,133,26,91,113,22,75,93,22,230,230,230,230,230,230,137,170,
            33,210,233,138,210,233,138,210,233,138,210,233,138,210,233,138,210,233,138,210,233,138,210,233,138,
            208,232,133,208,232,133,207,231,131,204,230,123,75,93,22,230,230,230,230,230,230,137,170,33,208,
            232,133,208,232,133,208,232,133,164,183,112,66,77,91,66,77,91,66,77,91,120,137,106,164,185,
            117,204,230,123,204,230,123,202,229,118,75,93,22,230,230,230,230,230,230,137,170,33,207,231,131,
            207,231,131,164,185,117,69,81,95,88,118,138,100,147,170,98,138,162,80,104,123,67,71,82,136,
            152,92,197,226,117,200,228,111,75,93,22,230,230,230,230,230,230,137,170,33,207,231,131,204,230,
            123,75,93,109,108,123,138,100,147,170,143,211,236,139,202,231,111,165,193,118,150,174,83,98,112,
            136,152,92,191,220,102,75,93,22,230,230,230,230,230,230,137,170,33,204,230,123,204,230,123,83,
            98,112,177,189,204,84,142,168,213,255,255,228,248,255,139,225,255,117,190,222,114,155,181,75,93,
            109,169,198,93,75,93,22,230,230,230,230,230,230,137,170,33,202,229,118,202,229,118,83,98,112,
            217,227,241,119,141,157,121,192,222,213,255,255,193,238,255,130,220,255,122,194,226,91,127,149,127,
            150,91,75,93,22,230,230,230,230,230,230,121,151,29,202,229,118,202,229,118,83,98,112,200,207,
            222,185,194,209,86,135,161,127,200,224,176,238,255,153,230,255,134,212,244,121,179,208,75,93,109,
            75,92,29,230,230,230,230,230,230,121,151,29,198,227,108,198,227,108,155,182,100,128,140,154,225,
            234,249,177,189,204,98,138,162,103,157,182,130,193,220,126,199,232,111,163,191,75,93,109,75,92,
            29,230,230,230,230,230,230,121,151,29,198,227,108,192,224,94,190,223,89,140,166,96,135,149,164,
            210,218,235,193,201,218,147,163,180,120,147,167,109,140,161,95,121,139,119,141,157,80,94,24,230,
            230,230,230,230,230,121,151,29,188,222,84,188,222,84,186,221,76,186,221,76,142,170,86,106,116,
            130,137,150,166,173,183,199,143,152,169,106,116,130,106,116,130,222,245,249,139,96,85,230,230,230,
            230,230,230,107,133,26,186,221,76,186,221,76,182,219,67,182,219,67,180,218,60,161,196,63,129,
            157,80,92,106,120,89,103,117,152,175,112,101,107,83,161,131,156,243,178,184,189,54,95,230,230,
            230,107,133,26,182,219,67,180,218,60,178,217,55,178,217,55,170,212,41,170,212,41,164,204,42,
            100,124,34,184,212,104,178,215,61,150,185,41,79,54,62,194,63,99,252,171,180,189,54,95,107,
            133,26,178,217,55,170,212,41,170,212,41,170,212,41,165,205,39,165,205,39,149,185,36,91,113,
            22,170,212,41,155,193,37,75,93,22,230,230,230,102,24,56,185,42,83,245,151,164,91,113,22,
            170,212,41,164,204,42,165,205,39,155,193,37,155,193,37,143,178,34,115,143,28,75,93,22,117,
            145,28,75,93,22,230,230,230,230,230,230,230,230,230,110,26,58,185,42,83,75,93,22,75,93,
            22,75,93,22,75,93,22,75,93,22,75,93,22,75,93,22,75,93,22,75,93,22,117,145,28,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,127,7,46
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 230, 230, 230);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 2)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,80,95,109,80,95,109,76,90,102,76,90,102,65,
            77,88,65,77,88,65,77,88,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,86,102,117,86,102,117,86,102,117,102,117,130,102,117,130,95,110,122,95,110,122,95,110,122,
            86,102,117,80,95,109,65,77,88,65,77,88,65,77,88,220,220,220,220,220,220,86,102,117,141,
            153,164,125,139,150,109,121,132,109,121,132,109,121,132,102,117,130,102,117,130,102,117,130,101,113,
            124,95,110,122,88,102,113,76,90,102,48,57,65,220,220,220,220,220,220,86,102,117,255,255,255,
            204,212,219,180,190,198,141,153,164,118,133,147,109,121,132,109,121,132,109,121,132,102,117,130,90,
            105,118,76,90,102,63,75,86,48,57,65,220,220,220,220,220,220,80,95,109,255,255,255,230,234,
            237,196,204,211,181,190,200,161,173,185,125,139,150,101,113,124,126,141,154,118,130,143,76,90,102,
            69,82,94,63,75,86,48,57,65,220,220,220,220,220,220,80,95,109,243,245,246,230,234,237,196,
            204,211,181,190,200,161,173,185,125,139,150,90,105,118,161,172,182,118,130,143,76,90,102,69,82,
            94,63,75,86,48,57,65,220,220,220,220,220,220,80,95,109,243,245,246,196,204,211,196,204,211,
            181,190,200,161,173,185,125,139,150,78,93,106,212,219,225,126,141,154,76,90,102,69,82,94,63,
            75,86,48,57,65,220,220,220,220,220,220,80,95,109,230,234,237,76,90,102,224,228,233,171,181,
            189,161,173,185,125,139,150,76,90,102,212,219,225,118,130,143,76,90,102,69,82,94,63,75,86,
            48,57,65,220,220,220,220,220,220,76,90,102,230,234,237,180,190,198,196,204,211,65,77,88,208,
            214,220,76,146,96,21,198,29,175,228,185,109,121,132,27,20,100,27,20,100,27,20,100,22,16,
            81,220,220,220,220,220,220,76,90,102,217,223,228,58,70,79,217,223,228,158,168,178,161,173,185,
            63,167,81,65,255,65,148,204,165,27,20,100,73,120,255,97,138,255,73,120,255,14,43,177,20,
            15,75,220,220,220,76,90,102,217,223,228,180,190,198,196,204,211,45,53,61,196,204,211,65,146,
            87,48,143,65,27,20,100,73,120,255,97,138,255,255,255,255,255,255,255,49,102,255,14,43,177,
            20,15,75,76,90,102,217,223,228,45,53,61,212,219,225,158,168,178,161,173,185,114,105,105,202,
            79,85,27,20,100,97,138,255,97,138,255,97,138,255,97,138,255,73,120,255,0,66,255,20,15,
            75,76,90,102,171,181,189,204,212,219,196,204,211,45,53,61,187,196,204,126,88,99,255,0,10,
            27,20,100,49,102,255,97,138,255,255,255,255,255,255,255,49,102,255,0,66,255,20,15,75,76,
            90,102,76,90,102,109,121,132,141,153,164,161,173,185,161,173,185,114,105,105,138,84,93,22,16,
            81,14,43,177,37,93,255,255,255,255,255,255,255,0,66,255,14,43,177,20,15,75,220,220,220,
            220,220,220,65,77,88,65,77,88,65,77,88,101,113,124,118,130,143,76,90,102,118,133,147,20,
            15,75,14,43,177,0,66,255,0,66,255,14,43,177,20,15,75,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,65,77,88,65,77,88,65,77,88,65,77,88,65,77,88,
            25,21,67,20,15,75,20,15,75,20,15,75,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 3)
    {
        static const unsigned char data[] = 
        {
            230,230,230,0,81,156,0,81,156,0,81,156,230,230,230,0,81,156,0,81,156,0,81,156,230,
            230,230,0,71,139,0,71,139,0,71,139,230,230,230,0,71,139,0,64,125,0,53,107,230,230,
            230,0,81,156,168,199,228,184,207,227,0,81,156,180,205,227,168,199,228,174,202,228,0,81,156,
            168,199,228,168,199,228,160,196,228,0,71,139,160,196,228,168,199,228,0,53,107,230,230,230,0,
            81,156,228,237,245,0,81,156,230,230,230,0,81,156,219,233,246,0,81,156,230,230,230,0,81,
            156,206,227,246,0,71,139,230,230,230,0,71,139,191,220,247,0,53,107,230,230,230,0,81,156,
            228,237,245,152,188,220,0,81,156,149,187,220,236,244,252,149,187,220,0,81,156,143,184,221,220,
            237,252,140,182,221,0,71,139,140,182,221,196,228,252,0,53,107,230,230,230,0,81,156,243,247,
            251,243,247,251,189,214,236,236,244,252,236,244,252,230,242,252,180,210,237,220,237,252,220,237,252,
            213,235,252,170,205,237,204,229,253,196,228,252,0,53,107,230,230,230,0,81,156,236,244,252,236,
            244,252,236,244,252,236,244,252,230,242,252,230,242,252,220,237,252,220,237,252,213,235,252,209,231,
            253,204,229,253,196,228,252,188,223,253,0,53,107,230,230,230,0,81,156,236,244,252,129,178,222,
            44,125,199,124,178,226,91,154,212,44,125,199,44,125,199,44,125,199,84,151,212,112,171,221,132,
            184,230,196,228,252,181,221,252,0,53,107,230,230,230,0,81,156,230,242,252,230,242,252,230,242,
            252,230,242,252,220,237,252,220,237,252,213,235,252,213,235,252,204,229,253,196,228,252,196,228,252,
            188,223,253,174,219,251,0,53,107,230,230,230,0,81,156,220,237,252,123,175,222,91,154,212,44,
            125,199,44,125,199,44,125,199,84,151,212,153,198,236,196,228,252,189,226,250,188,223,253,181,221,
            252,163,212,250,0,53,107,230,230,230,0,71,139,213,235,252,213,235,252,213,235,252,207,232,251,
            204,229,253,204,229,253,196,228,252,196,228,252,189,226,250,181,221,252,181,221,252,171,215,252,155,
            210,250,0,53,107,230,230,230,0,71,139,204,229,253,112,171,221,84,151,212,36,122,199,36,122,
            199,76,148,212,36,122,199,36,122,199,70,146,212,96,163,222,139,195,239,163,212,250,146,206,250,
            0,53,107,230,230,230,0,71,139,196,228,252,189,226,250,189,226,250,188,223,253,181,221,252,181,
            221,252,174,219,251,174,219,251,163,212,250,163,212,250,163,212,250,155,210,250,137,202,250,0,53,
            107,230,230,230,0,62,122,181,221,252,70,146,212,36,122,199,36,122,199,70,146,212,107,175,228,
            64,143,212,31,120,199,30,119,199,61,141,212,81,158,221,93,167,228,124,195,248,0,53,107,230,
            230,230,0,62,122,149,208,248,146,206,250,137,202,250,139,203,247,139,203,247,134,203,249,134,203,
            249,134,203,249,130,199,249,130,199,249,124,195,248,117,191,246,100,179,243,0,53,107,230,230,230,
            0,62,122,109,185,242,109,185,242,109,185,242,104,181,239,104,181,239,109,185,242,109,185,242,109,
            185,242,105,183,243,100,179,243,100,179,243,94,173,241,87,168,238,0,53,107,230,230,230,0,53,
            107,0,53,107,0,53,107,0,53,107,0,53,107,0,53,107,0,53,107,0,53,107,0,53,107,
            0,53,107,0,53,107,0,53,107,0,53,107,0,53,107,0,53,107
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 230, 230, 230);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 4)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,36,93,43,34,83,40,32,
            73,37,32,73,37,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,36,93,43,76,161,115,76,190,130,40,178,106,
            0,114,54,28,54,31,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,36,93,43,76,161,115,255,255,255,161,215,181,109,199,126,0,166,
            81,0,114,54,28,54,31,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,36,93,43,76,190,130,185,225,200,130,202,156,109,199,126,57,181,74,0,
            166,81,28,54,31,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,24,81,41,40,178,106,109,199,126,109,199,126,83,190,101,57,181,74,0,166,81,
            28,54,31,28,54,31,28,54,31,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,13,70,40,17,131,61,29,174,77,57,181,74,57,181,74,0,166,81,0,114,54,28,54,
            31,7,92,47,18,80,43,28,54,31,220,220,220,220,220,220,220,220,220,220,220,220,36,93,43,
            9,83,44,28,54,31,4,127,62,0,166,81,0,166,81,0,114,54,28,54,31,2,108,52,4,
            127,62,11,105,51,28,54,31,220,220,220,220,220,220,220,220,220,36,93,43,29,140,62,10,126,
            57,5,95,48,28,54,31,28,54,31,28,54,31,28,54,31,2,108,52,29,140,62,11,105,51,
            4,127,62,28,54,31,220,220,220,220,220,220,36,93,43,118,203,130,138,211,149,44,159,67,22,
            139,61,0,114,54,0,114,54,0,114,54,22,139,61,44,159,67,29,140,62,15,88,46,4,127,
            62,28,54,31,220,220,220,220,220,220,36,93,43,202,235,208,105,199,119,50,143,62,64,175,84,
            119,186,135,92,176,111,68,168,89,78,181,96,57,181,74,29,140,62,18,80,43,4,127,62,28,
            54,31,220,220,220,220,220,220,36,93,43,138,211,149,83,190,101,42,104,50,83,190,101,236,248,
            239,146,213,159,109,199,126,88,193,103,57,181,74,29,140,62,28,54,31,4,127,62,28,54,31,
            220,220,220,220,220,220,36,93,43,118,203,130,57,181,74,34,65,38,83,190,101,236,248,239,146,
            213,159,109,199,126,88,193,103,57,181,74,29,140,62,28,54,31,28,54,31,28,54,31,220,220,
            220,220,220,220,36,93,43,91,193,105,57,181,74,28,54,31,83,190,101,218,241,223,130,207,144,
            109,199,126,88,193,103,57,181,74,29,140,62,28,54,31,220,220,220,220,220,220,220,220,220,220,
            220,220,36,93,43,57,181,74,57,181,74,28,54,31,83,190,101,164,220,175,118,203,130,88,193,
            103,88,193,103,53,162,68,28,54,31,28,54,31,220,220,220,220,220,220,220,220,220,220,220,220,
            32,73,37,57,181,74,57,181,74,28,54,31,57,181,74,124,205,138,99,195,115,73,158,85,28,
            54,31,28,54,31,28,54,31,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,32,73,
            37,28,54,31,28,54,31,220,220,220,28,54,31,28,54,31,28,54,31,28,54,31,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 5)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 16 16 1",
        "  c None",
        "a c Black",
        "b c #110000",
        "c c #6F4848",
        "d c #7F0000",
        "e c #220000",
        "f c #444444",
        "g c #888888",
        "h c #8C0000",
        "i c #4C4040",
        "j c #C10000",
        "k c #191919",
        "l c #2A2A2A",
        "m c #FF0000",
        "n c #666666",
        "p c #333333",
        /* pixels */
        "          h     ",
        "         dma    ",
        "        dmjma   ",
        "       dmjhjma  ",
        "      amjhlhjma ",
        "      aapanpaaa ",
        "         aga    ",
        "     kpk ana    ",
        "     pnp ppa    ",
        "     fgi        ",
        "  bebanabeb     ",
        "  cmjhphjmi     ",
        "   cmjhjmi      ",
        "    cmjmi       ",
        "     cmi        ",
        "      h         "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 6)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 16 17 1",
        "  c None",
        "a c #444444",
        "b c #114C11",
        "c c #888888",
        "d c #790000",
        "e c #008000",
        "f c #007700",
        "g c #191919",
        "h c #00B700",
        "i c #B70000",
        "j c #2A2A2A",
        "k c #FF0000",
        "l c #666666",
        "m c #002A00",
        "o c #00FF00",
        "p c #333333",
        "q c #001500",
        /* pixels */
        "          d     ",
        "         dkd    ",
        "        dkikd   ",
        "       dkidikd  ",
        "      dkidjdikd ",
        "          l     ",
        "          c     ",
        "     gpg  l     ",
        "     plp pp     ",
        "     aca        ",
        "  qmqlllqmq     ",
        "  eohbpbhoe     ",
        "   eohfhoe      ",
        "    eohoe       ",
        "     eoe        ",
        "      e         "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 7)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 16 16 1",
        "  c None",
        "a c #110000",
        "b c #6F4848",
        "c c #220000",
        "d c #444444",
        "e c #888888",
        "f c #008000",
        "g c #770000",
        "h c #191919",
        "j c #BB0000",
        "k c #00AE00",
        "l c #2A2A2A",
        "m c #FF0000",
        "n c #666666",
        "o c #00FF00",
        "p c #333333",
        /* pixels */
        "          f     ",
        "         fof    ",
        "        fokof   ",
        "       fokfkof  ",
        "      fokflfkof ",
        "          np    ",
        "          e     ",
        "     hph  n     ",
        "     pnp pp     ",
        "     ded        ",
        "  acannnaca     ",
        "  bmjgpgjmg     ",
        "   bmjgjmg      ",
        "    gmjmg       ",
        "     gmg        ",
        "      g         "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 8)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 16 12 1",
        "  c None",
        "a c #006F00",
        "b c #888888",
        "c c #191919",
        "e c #404F40",
        "f c #00D400",
        "g c #666666",
        "h c #002A00",
        "i c #00FF00",
        "j c #333333",
        "k c #001500",
        "l c #00CA00",
        /* pixels */
        "          a     ",
        "         aia    ",
        "        ailia   ",
        "       ailalia  ",
        "      aila alia ",
        "          gj    ",
        "          b     ",
        "     cjc  g     ",
        "     jgj jj     ",
        "     ebe        ",
        "  khk g khk     ",
        "  aila afia     ",
        "   ailalia      ",
        "    ailia       ",
        "     aia        ",
        "      a         "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 9)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 16 8 1",
        "  c None",
        "a c #FFF0D4",
        "b c #008000",
        "c c #800000",
        "d c #FFAA25",
        "e c #C0C0C0",
        "g c #808000",
        "h c #232375",
        /* pixels */
        "                ",
        "  c          cc ",
        " ccc  eeeee cccc",
        " cccceaaebccccc ",
        "  ccccbbbcccccd ",
        "gggcccchccccbga ",
        "  adccccccchgad ",
        "   adcccccagadd ",
        " gaddcccccdadd  ",
        "gaddcccccccdd   ",
        "gddcccchccccdd  ",
        "gdcccc  hcccc   ",
        "gdcccb hhhccc   ",
        " cccc hhhhcccc  ",
        "  cc       cccc ",
        "             c  "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 10)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,55,101,59,55,101,59,55,101,59,55,101,59,55,101,59,55,101,59,
            55,101,59,55,101,59,46,69,56,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,55,101,59,89,204,87,202,250,201,66,211,63,65,186,63,58,142,
            60,46,69,56,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,55,101,59,98,205,96,67,235,63,58,142,60,46,69,56,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,55,101,
            59,55,101,59,55,101,59,51,87,58,55,101,59,63,173,62,46,69,56,51,87,58,55,101,59,
            55,101,59,46,69,56,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,55,
            101,59,63,173,62,157,245,155,77,164,79,46,69,56,58,142,60,65,186,63,64,159,62,46,69,
            56,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            55,101,59,63,173,62,202,250,201,83,165,86,65,186,63,64,159,62,46,69,56,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,55,101,59,55,101,59,55,101,59,55,101,59,52,89,
            58,55,101,59,63,173,62,134,242,132,64,159,62,46,69,56,52,89,58,55,101,59,55,101,59,
            57,91,60,46,69,56,220,220,220,220,220,220,55,101,59,60,158,61,66,211,63,169,255,167,104,
            184,107,55,101,59,63,173,62,46,69,56,58,142,60,65,186,63,65,186,63,64,133,62,46,69,
            56,220,220,220,220,220,220,220,220,220,220,220,220,55,101,59,60,158,61,67,235,63,202,250,201,
            120,184,122,46,69,56,58,142,60,65,186,63,65,186,63,64,133,62,46,69,56,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,55,101,59,60,158,61,67,235,63,247,255,
            246,115,181,118,65,186,63,65,186,63,64,133,62,46,69,56,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,55,101,59,60,158,61,66,211,63,188,
            249,186,65,186,63,64,133,62,46,69,56,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,55,101,59,60,158,61,66,204,63,
            65,151,62,46,69,56,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,55,101,59,60,158,61,46,69,
            56,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,46,69,56,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 11)
    {
        static const unsigned char data[] = 
        {
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,46,69,56,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,46,69,56,60,158,61,55,101,
            59,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,46,69,56,65,151,62,66,204,63,60,158,61,55,
            101,59,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,46,69,56,64,133,62,65,186,63,188,249,186,66,211,63,60,158,61,
            55,101,59,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,46,69,56,64,133,62,65,186,63,65,186,63,115,181,118,247,255,246,67,235,63,60,158,
            61,55,101,59,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,46,69,56,
            64,133,62,65,186,63,65,186,63,58,142,60,46,69,56,120,184,122,202,250,201,67,235,63,60,
            158,61,55,101,59,230,230,230,230,230,230,230,230,230,230,230,230,46,69,56,64,133,62,65,186,
            63,65,186,63,58,142,60,46,69,56,63,173,62,55,101,59,104,184,107,169,255,167,66,211,63,
            60,158,61,55,101,59,230,230,230,230,230,230,46,69,56,57,91,60,55,101,59,55,101,59,52,
            89,58,46,69,56,64,159,62,134,242,132,63,173,62,55,101,59,52,89,58,55,101,59,55,101,
            59,55,101,59,55,101,59,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,46,69,56,
            64,159,62,65,186,63,83,165,86,202,250,201,63,173,62,55,101,59,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,46,69,56,64,159,62,65,186,
            63,58,142,60,46,69,56,77,164,79,157,245,155,63,173,62,55,101,59,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,46,69,56,55,101,59,55,101,59,51,87,58,46,
            69,56,63,173,62,55,101,59,51,87,58,55,101,59,55,101,59,55,101,59,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,46,69,56,58,142,60,
            67,235,63,98,205,96,55,101,59,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,46,69,56,58,142,60,65,186,63,66,211,
            63,202,250,201,89,204,87,55,101,59,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,46,69,56,55,101,59,55,101,59,55,101,59,55,101,59,55,
            101,59,55,101,59,55,101,59,55,101,59,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 230, 230, 230);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 12)
    {
        static const unsigned char data[] = 
        {
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,0,60,131,0,60,131,0,60,131,0,60,131,0,60,131,0,57,124,0,57,124,
            0,57,124,0,57,124,0,57,124,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,0,60,131,0,60,131,0,60,131,
            21,88,167,59,149,219,84,175,237,116,194,250,126,198,251,131,201,251,126,198,251,117,184,238,113,
            166,218,36,95,159,0,57,124,0,53,114,0,53,114,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,0,63,138,0,60,131,27,101,174,73,151,216,117,188,243,149,204,251,156,
            209,251,190,225,253,190,225,253,190,225,253,190,225,253,190,225,253,190,225,253,180,217,247,175,213,
            243,157,197,238,113,166,218,52,101,155,0,53,114,0,53,114,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,0,64,139,0,
            63,138,39,116,196,73,151,216,142,195,253,181,220,251,212,235,254,231,244,255,253,255,255,253,255,
            255,253,255,255,253,255,255,253,255,255,253,255,255,253,255,255,253,255,255,253,255,255,234,246,255,
            212,235,254,190,225,253,149,179,215,63,110,162,0,53,114,0,50,108,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,0,64,139,21,88,167,59,149,219,116,194,
            250,181,220,251,212,235,254,253,255,255,253,255,255,253,255,255,253,255,255,253,255,255,253,255,255,
            253,255,255,253,255,255,253,255,255,253,255,255,253,255,255,253,255,255,253,255,255,253,255,255,238,
            248,255,212,235,254,195,229,255,149,179,215,35,85,141,0,50,108,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,0,64,139,39,107,184,59,149,219,116,194,250,181,220,251,242,242,241,
            227,229,234,222,224,230,212,220,230,202,218,234,202,218,234,202,218,234,198,214,230,198,214,230,198,
            214,230,198,214,230,202,218,234,202,218,234,202,218,234,212,220,230,212,220,230,222,224,230,227,229,
            234,205,226,244,189,222,251,157,197,238,63,110,162,0,50,108,230,230,230,230,230,230,230,230,230,
            0,63,138,27,101,174,59,149,219,126,198,251,190,225,253,242,242,241,123,151,186,0,63,138,0,
            63,138,0,63,138,0,63,138,100,133,174,0,63,138,0,63,138,0,63,138,0,63,138,0,63,
            138,0,63,138,100,133,174,0,63,138,0,63,138,0,63,138,0,63,138,0,63,138,123,151,186,
            205,226,244,189,222,251,113,166,218,35,85,141,0,50,108,230,230,230,230,230,230,0,64,139,65,
            130,199,116,194,250,189,222,251,253,255,255,202,218,234,0,63,138,255,128,128,255,128,128,255,128,
            128,217,0,0,0,63,138,255,128,128,255,128,128,255,128,128,255,128,128,255,128,128,217,0,0,
            0,63,138,255,255,224,255,255,224,255,255,224,255,255,224,217,217,0,0,63,138,227,229,234,212,
            235,254,158,203,252,83,132,189,0,50,108,230,230,230,0,64,139,39,107,184,91,164,225,181,220,
            251,234,246,255,238,248,255,183,207,230,0,63,138,255,128,128,253,255,255,255,5,4,181,0,1,
            0,63,138,255,128,128,253,255,255,255,5,4,255,5,4,255,5,4,188,0,3,0,63,138,255,
            255,0,255,255,0,255,255,0,255,255,0,178,178,0,0,63,138,212,220,230,238,248,255,181,220,
            251,121,174,233,24,82,156,0,50,108,0,64,139,65,130,199,142,195,253,189,222,251,243,250,255,
            212,235,254,183,207,230,0,63,138,255,98,98,181,0,1,181,0,1,181,0,1,0,63,138,255,
            128,128,255,5,4,255,5,4,181,0,1,181,0,1,188,0,3,0,63,138,255,255,0,178,178,
            0,178,178,0,178,178,0,178,178,0,0,63,138,202,218,234,243,250,255,181,220,251,138,191,251,
            39,107,184,0,50,108,0,63,138,91,164,225,149,204,251,189,222,251,243,250,255,206,233,255,173,
            202,230,0,63,138,0,63,138,0,63,138,0,63,138,0,63,138,0,63,138,255,128,128,255,5,
            4,255,5,4,181,0,1,0,63,138,0,63,138,0,63,138,255,255,0,0,63,138,0,63,138,
            0,63,138,0,63,138,104,141,186,193,221,244,238,248,255,172,214,254,131,187,249,65,130,199,0,
            50,108,0,63,138,117,184,238,158,203,252,189,222,251,238,248,255,195,229,255,173,202,230,0,63,
            138,255,128,128,255,128,128,255,128,128,194,0,0,0,63,138,255,128,128,255,5,4,255,5,4,
            181,0,1,0,63,138,255,255,224,255,255,0,255,255,0,0,63,138,138,162,193,149,175,206,149,
            179,215,172,203,233,189,222,251,231,244,255,172,214,254,118,177,247,58,133,232,0,50,108,0,63,
            138,91,164,225,166,210,254,172,214,254,206,233,255,190,225,253,165,198,230,0,63,138,255,128,128,
            253,255,255,255,5,4,181,0,1,0,63,138,255,128,128,255,5,4,255,5,4,181,0,1,0,
            63,138,255,255,224,255,255,0,255,255,0,0,63,138,0,63,138,0,63,138,0,63,138,77,121,
            175,179,212,243,203,231,255,149,198,252,99,164,246,55,127,230,0,45,98,0,60,131,83,132,189,
            158,203,252,166,210,254,190,225,253,189,222,251,165,198,230,0,63,138,255,128,128,255,5,4,255,
            5,4,181,0,1,0,63,138,255,128,128,255,5,4,255,5,4,181,0,1,0,63,138,255,255,
            224,255,255,0,255,255,0,255,255,224,255,255,224,255,255,224,217,217,0,0,63,138,172,203,233,
            190,225,253,123,180,249,78,148,242,37,108,208,0,45,98,0,63,138,36,95,159,113,166,218,166,
            210,254,181,220,251,189,222,251,165,198,230,0,63,138,255,128,128,255,5,4,255,5,4,181,0,
            1,0,63,138,255,128,128,255,5,4,255,5,4,181,0,1,0,63,138,255,255,224,255,255,0,
            255,255,0,255,255,0,255,255,0,255,255,0,178,178,0,0,63,138,165,198,230,166,210,254,108,
            169,247,62,137,237,17,77,156,0,50,108,230,230,230,0,60,131,65,130,199,100,41,9,100,41,
            9,100,41,9,163,197,234,0,63,138,100,41,9,100,41,9,100,41,9,100,41,9,100,41,9,
            100,41,9,100,41,9,181,0,1,181,0,1,0,63,138,255,255,168,160,165,11,165,170,11,165,
            170,11,165,170,11,165,170,11,169,172,11,0,63,138,163,197,234,138,191,251,91,157,244,47,118,
            215,0,45,98,230,230,230,230,230,230,0,60,131,100,41,9,212,141,78,100,41,9,158,203,252,
            100,41,9,100,41,9,218,161,108,212,141,78,206,130,64,206,130,64,174,99,39,100,41,9,0,
            63,138,0,63,138,0,63,138,77,121,175,0,63,138,0,63,138,0,63,138,0,63,138,0,63,
            138,0,63,138,0,63,138,83,132,189,141,187,240,91,157,244,62,137,237,17,77,156,0,45,98,
            230,230,230,230,230,230,100,41,9,198,117,48,180,104,44,100,41,9,100,41,9,235,201,153,228,
            184,134,211,142,82,206,130,64,155,85,34,100,41,9,100,41,9,157,197,238,150,190,230,150,190,
            230,157,197,238,157,197,238,163,197,234,165,198,230,165,198,230,165,198,230,165,198,230,158,194,230,
            157,197,238,141,187,240,91,157,244,67,137,242,45,112,205,0,45,98,230,230,230,230,230,230,230,
            230,230,100,41,9,180,104,44,120,57,16,206,130,64,224,174,125,214,149,87,212,141,78,134,70,
            26,100,41,9,133,133,136,158,203,252,166,210,254,166,210,254,166,210,254,166,210,254,166,210,254,
            166,210,254,166,210,254,181,220,251,189,222,251,189,222,251,189,222,251,172,214,254,149,198,252,78,
            148,242,55,127,230,45,112,205,24,82,156,0,45,98,230,230,230,230,230,230,100,41,9,100,41,
            9,142,75,27,206,130,64,212,141,78,206,130,64,174,99,39,100,41,9,103,91,99,129,146,175,
            123,180,249,142,195,253,142,195,253,142,195,253,142,195,253,142,195,253,142,195,253,142,195,253,149,
            198,252,160,206,253,181,220,251,181,220,251,181,220,251,127,189,249,91,157,244,66,137,236,39,107,
            184,17,77,156,0,45,98,230,230,230,230,230,230,230,230,230,230,230,230,100,41,9,145,76,27,
            186,108,44,174,99,39,174,99,39,120,57,16,155,85,34,100,41,9,39,116,196,62,137,237,99,
            164,246,103,169,248,109,170,248,108,169,247,109,170,248,109,170,248,109,170,248,123,180,249,138,191,
            251,158,203,252,172,214,254,131,187,249,78,148,242,66,137,236,24,87,177,10,64,131,0,50,108,
            230,230,230,230,230,230,230,230,230,230,230,230,100,41,9,100,41,9,165,92,37,186,108,44,198,
            117,48,90,45,18,224,174,125,238,210,174,182,112,56,100,41,9,0,53,114,13,81,165,20,98,
            210,33,113,232,47,130,240,54,132,241,54,132,241,68,144,242,99,164,246,119,178,249,149,198,252,
            138,191,251,78,148,242,55,127,230,21,88,167,0,50,108,0,50,108,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,100,41,9,186,108,44,198,117,48,198,117,48,218,161,
            108,253,255,255,221,219,215,230,230,230,142,75,27,100,41,9,69,49,42,50,55,62,50,55,62,
            0,53,114,0,50,108,0,50,108,1,68,153,6,87,198,99,164,246,131,187,249,99,164,246,33,
            113,232,21,88,167,0,50,108,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,100,41,9,111,49,13,198,117,48,206,130,64,198,117,48,207,135,74,246,231,218,
            154,151,148,72,73,76,167,96,42,209,178,139,229,220,210,242,242,241,189,189,182,50,55,62,230,
            230,230,230,230,230,0,50,108,1,68,153,20,98,210,91,157,244,54,132,241,21,88,167,0,50,
            108,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            100,41,9,145,76,27,212,141,78,220,162,92,214,149,87,202,123,56,207,135,74,214,149,87,194,
            119,57,198,131,56,209,178,139,104,106,109,23,22,20,242,242,241,180,180,177,50,55,62,230,230,
            230,230,230,230,0,50,108,6,87,198,54,132,241,6,87,198,0,45,98,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,100,41,9,174,
            99,39,212,141,78,238,210,174,224,174,125,212,141,78,202,123,56,180,104,44,173,98,40,190,125,
            63,180,180,177,170,170,167,160,160,158,242,242,241,227,227,224,50,55,62,230,230,230,230,230,230,
            0,50,108,6,87,198,20,98,210,0,50,108,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,100,41,9,145,76,27,205,129,
            63,217,154,97,218,161,108,212,141,78,202,123,56,186,108,44,173,98,40,182,112,56,212,205,194,
            232,232,230,242,242,241,253,255,255,239,239,237,50,55,62,230,230,230,230,230,230,0,50,108,5,
            78,176,0,50,108,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,100,41,9,111,49,13,180,104,44,205,129,63,
            205,129,63,216,156,71,198,117,48,186,108,44,165,92,37,182,139,103,201,194,185,221,219,215,232,
            232,230,239,239,237,232,232,230,50,55,62,230,230,230,230,230,230,0,45,98,0,50,108,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,100,41,9,120,57,16,100,41,9,165,92,37,165,92,37,165,
            92,37,165,92,37,155,85,34,124,77,45,160,160,158,203,203,199,104,106,109,203,203,199,221,219,
            215,133,133,136,50,55,62,230,230,230,230,230,230,0,50,108,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,111,49,13,142,75,27,151,81,30,131,63,20,104,43,9,100,41,9,90,45,
            18,63,51,48,50,55,62,109,112,114,154,151,148,180,180,177,72,73,76,50,55,62,50,55,62,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,111,49,13,145,76,27,195,122,49,228,156,63,212,140,56,173,98,40,100,41,9,230,230,230,
            230,230,230,50,55,62,50,55,62,50,55,62,50,55,62,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230
        };
        wxImage image( 32, 32, (unsigned char*)data, TRUE );
        image.SetMaskColour( 230, 230, 230);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 13)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,58,111,0,55,110,0,51,101,0,
            57,108,0,57,108,0,56,113,220,220,220,0,47,89,0,24,45,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,0,56,113,0,58,111,6,95,163,12,147,232,138,198,217,60,190,123,
            13,140,211,4,87,148,0,47,89,99,11,11,99,11,11,0,24,45,220,220,220,220,220,220,220,
            220,220,0,54,113,46,127,99,104,229,123,0,148,197,2,182,255,75,205,175,16,169,151,2,70,
            127,0,64,130,47,124,71,0,47,89,156,16,16,122,13,13,0,24,45,220,220,220,0,54,113,
            61,116,106,242,255,221,20,210,175,0,161,222,14,201,241,88,214,97,0,106,188,2,70,127,243,
            127,127,0,47,89,101,11,11,201,22,22,151,16,16,0,24,45,220,220,220,0,54,113,148,220,
            148,28,207,135,0,164,210,0,211,252,0,219,242,0,142,186,20,132,186,0,64,130,252,222,222,
            241,96,96,236,27,27,237,34,34,168,19,19,0,24,45,0,58,111,0,100,144,60,218,133,0,
            159,216,14,201,241,90,236,255,0,211,252,2,182,255,35,169,223,0,64,130,255,255,255,246,163,
            163,241,88,88,221,25,25,0,24,45,0,25,49,0,51,101,0,122,137,0,138,171,0,150,192,
            8,202,231,78,206,223,8,202,231,247,247,218,131,223,126,0,64,130,248,179,179,241,96,96,229,
            26,26,160,18,18,0,24,45,0,32,58,0,64,130,0,64,130,0,64,130,0,64,130,2,70,
            127,0,64,130,0,24,45,111,231,84,34,208,30,0,64,130,240,81,81,229,26,26,201,22,22,
            186,21,21,123,13,13,0,24,45,0,64,130,240,81,81,247,173,173,255,255,255,251,216,216,240,
            81,81,0,24,45,10,170,157,8,129,82,0,64,130,0,24,45,0,24,45,0,24,45,0,24,
            45,0,24,45,0,24,45,0,47,89,0,64,130,240,76,76,245,145,145,239,72,72,229,26,26,
            0,24,45,0,141,223,20,133,207,14,123,183,0,87,159,0,82,159,0,75,148,0,64,130,0,
            60,115,0,30,49,0,46,93,0,64,130,237,34,34,239,72,72,229,26,26,201,22,22,0,24,
            45,138,198,217,237,247,201,77,189,66,38,150,157,20,126,206,0,90,204,0,87,166,0,63,111,
            0,34,65,0,64,130,178,20,20,218,25,25,193,21,21,123,13,13,168,19,19,0,24,45,160,
            206,114,40,186,55,36,177,46,80,196,31,61,163,74,2,103,188,1,92,180,0,41,65,220,220,
            220,0,64,130,106,12,12,196,22,22,122,13,13,0,24,45,122,13,13,0,24,45,69,171,44,
            40,177,40,54,178,52,49,164,56,32,124,96,3,100,179,2,78,136,0,37,71,220,220,220,0,
            64,130,108,12,12,156,16,16,0,24,45,0,73,146,0,24,45,0,24,45,53,150,114,49,157,
            56,50,155,73,32,123,110,2,91,175,2,70,127,0,37,71,220,220,220,220,220,220,220,220,220,
            0,24,45,86,9,9,104,11,11,0,24,45,0,58,111,0,87,178,0,87,178,9,93,143,7,
            94,152,3,68,119,0,37,73,0,37,73,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,0,24,45,0,24,45,220,220,220,0,35,67,0,41,65,0,40,71,0,40,71,0,42,73,
            0,37,73,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 14)
    {
        static const unsigned char data[] = 
        {
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,9,84,125,8,73,108,7,65,97,7,
            65,97,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,9,84,125,16,149,221,27,164,239,15,139,206,10,90,133,
            6,52,77,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,9,84,125,16,149,221,255,255,255,130,205,246,67,180,242,14,132,196,10,94,
            140,6,52,77,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,9,84,125,27,164,239,162,218,249,93,191,244,67,180,242,16,149,221,13,121,180,6,
            52,77,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,7,65,97,15,139,206,67,180,242,67,180,242,33,167,240,16,149,221,13,121,180,6,52,77,
            6,52,77,6,52,77,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,6,
            52,77,10,94,140,15,139,206,16,149,221,16,149,221,13,126,187,10,90,133,6,52,77,8,73,
            108,7,65,97,6,52,77,230,230,230,230,230,230,230,230,230,230,230,230,9,84,125,6,58,86,
            6,52,77,9,84,125,12,116,172,12,116,172,10,90,133,6,52,77,9,78,116,10,90,133,9,
            84,125,6,52,77,230,230,230,230,230,230,230,230,230,9,84,125,12,111,165,10,94,140,7,62,
            92,6,52,77,6,52,77,6,52,77,6,52,77,121,0,0,121,0,0,9,84,125,121,0,0,
            121,0,0,230,230,230,230,230,230,9,84,125,78,185,243,104,195,244,14,132,196,12,116,172,10,
            94,140,10,94,140,10,94,140,121,0,0,242,84,90,237,28,36,121,0,0,237,28,36,237,28,
            36,68,1,0,230,230,230,9,84,125,186,227,250,63,179,242,13,121,180,16,149,221,63,179,242,
            27,164,239,121,0,0,242,84,90,251,199,201,245,122,126,239,49,56,245,117,122,243,100,105,237,
            28,36,68,1,0,9,84,125,104,195,244,27,164,239,10,94,140,33,167,240,231,245,253,113,198,
            245,121,0,0,245,130,134,254,241,241,248,170,173,244,109,113,248,167,170,245,117,122,226,26,34,
            68,1,0,9,84,125,78,185,243,16,149,221,7,62,92,33,167,240,231,245,253,113,198,245,121,
            0,0,242,84,90,251,199,201,247,156,160,246,145,149,245,122,126,242,89,95,195,21,27,68,1,
            0,9,84,125,44,171,240,16,149,221,6,52,77,33,167,240,207,236,252,93,191,244,67,180,242,
            121,0,0,241,67,74,247,156,160,245,132,136,243,97,103,219,25,33,68,1,0,230,230,230,9,
            84,125,16,149,221,16,149,221,6,52,77,33,167,240,138,209,247,72,182,242,44,171,240,44,171,
            240,121,0,0,237,28,36,245,126,130,219,25,33,68,1,0,230,230,230,230,230,230,7,65,97,
            16,149,221,16,149,221,6,52,77,16,149,221,85,187,243,54,175,241,15,144,215,6,52,77,6,
            52,77,121,0,0,179,14,18,68,1,0,230,230,230,230,230,230,230,230,230,7,65,97,6,52,
            77,6,52,77,230,230,230,6,52,77,6,52,77,6,52,77,6,52,77,230,230,230,230,230,230,
            230,230,230,68,1,0,230,230,230,230,230,230,230,230,230,230,230,230
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 230, 230, 230);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 15)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,165,121,54,165,
            121,54,165,121,54,165,121,54,165,121,54,165,121,54,165,121,54,165,121,54,165,121,54,165,121,
            54,165,121,54,165,121,54,165,121,54,165,121,54,165,121,54,152,106,46,165,121,54,255,255,255,
            255,255,255,254,251,221,254,246,188,254,244,172,254,243,155,254,243,155,253,238,121,253,238,121,253,
            238,121,253,238,121,253,238,121,253,238,121,245,227,114,138,90,37,165,121,54,255,255,255,254,251,
            221,254,246,188,254,246,188,254,243,155,254,243,155,254,243,155,253,238,121,253,238,121,253,238,121,
            253,238,121,253,238,121,253,238,121,245,227,114,138,90,37,165,121,54,254,251,221,237,222,159,221,
            198,131,221,197,123,205,172,90,205,172,90,205,172,90,221,194,97,199,130,68,192,153,75,192,153,
            75,204,151,76,224,189,95,245,227,114,138,90,37,165,121,54,254,246,188,254,246,188,254,244,172,
            254,243,155,254,243,155,254,243,155,253,238,121,253,238,121,253,238,121,253,238,121,253,238,121,253,
            238,121,245,227,114,239,218,109,138,90,37,165,121,54,254,244,172,231,210,126,209,178,98,198,162,
            85,192,153,75,198,162,85,220,192,94,253,238,121,192,153,75,192,153,75,192,153,75,192,153,75,
            224,189,95,239,218,109,138,90,37,165,121,54,254,243,155,254,243,155,254,243,155,254,243,155,254,
            241,138,253,238,121,253,238,121,253,238,121,253,238,121,253,238,121,253,238,121,253,238,121,253,238,
            121,239,218,109,138,90,37,165,121,54,254,243,155,231,210,126,208,175,81,189,149,66,189,149,66,
            208,175,81,208,175,81,192,153,68,192,153,75,192,153,75,192,153,75,192,153,75,216,177,87,239,
            218,109,138,90,37,165,121,54,253,238,121,253,238,121,253,238,121,253,238,121,253,238,121,253,238,
            121,253,238,121,253,238,121,253,238,121,253,238,121,253,238,121,253,238,121,253,238,121,239,218,109,
            138,90,37,165,121,54,253,238,121,253,238,121,253,238,121,253,238,121,253,238,121,253,238,121,249,
            232,117,245,227,114,245,227,114,245,227,114,253,238,121,253,238,121,253,238,121,239,218,109,138,90,
            37,152,106,46,138,90,37,138,90,37,138,90,37,138,90,37,138,90,37,138,90,37,138,90,37,
            138,90,37,138,90,37,138,90,37,138,90,37,138,90,37,138,90,37,138,90,37,138,90,37,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 16, 16, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 16)
    {
        static const unsigned char data[] = 
        {
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,167,120,68,166,119,65,169,120,64,170,122,62,169,120,
            57,165,115,53,161,109,50,157,106,51,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,174,121,69,207,179,140,225,202,
            164,222,195,150,220,192,142,225,193,132,226,192,126,224,186,110,220,181,98,216,171,77,212,164,64,
            207,156,51,204,154,53,156,104,56,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,195,160,249,234,216,255,251,238,255,255,241,255,246,219,246,229,194,240,218,172,
            233,210,157,228,198,136,222,190,124,219,181,104,216,176,92,217,172,77,213,166,63,202,148,52,180,
            129,60,129,78,38,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,209,177,142,251,249,246,
            255,255,255,255,255,255,252,246,231,245,234,212,239,223,192,237,219,183,236,212,166,234,209,156,233,
            205,142,232,200,132,231,196,113,224,185,101,193,148,75,154,104,65,165,113,50,250,206,18,124,73,
            0,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,196,165,134,255,255,255,255,255,255,255,
            255,255,255,255,245,255,252,233,251,238,209,244,226,191,231,207,160,214,184,134,195,156,101,180,136,
            84,166,119,66,165,114,54,185,133,39,224,172,28,255,201,0,203,146,0,93,36,0,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,147,95,41,174,129,83,165,120,72,166,121,77,163,116,
            70,164,119,73,161,113,65,158,109,60,165,117,64,176,129,71,188,138,72,200,152,71,211,157,56,
            213,161,35,195,143,14,172,109,0,114,61,0,81,106,171,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,110,65,25,203,186,168,232,218,203,235,220,198,231,213,182,230,208,170,
            224,198,148,217,189,133,198,160,94,178,135,67,149,100,27,130,77,2,105,52,0,105,54,13,230,
            230,230,230,230,230,230,230,230,101,197,255,101,58,78,117,47,39,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,92,27,0,96,45,0,101,39,0,87,32,0,81,24,0,83,27,0,90,
            36,0,90,38,0,101,52,17,123,83,54,159,132,109,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,100,180,255,98,59,75,115,53,44,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,120,189,255,222,211,220,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            99,181,255,104,64,79,207,183,172,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,95,148,255,126,102,124,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,211,201,203,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,99,179,255,230,
            230,230,255,252,240,110,60,54,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            75,23,30,230,230,230,230,230,230,230,230,230,230,230,230,203,190,196,160,135,140,255,243,221,255,
            213,175,255,201,145,255,198,142,255,207,133,230,230,230,74,144,255,230,230,230,230,230,230,241,233,
            223,178,134,77,97,37,42,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,107,42,31,132,
            122,151,230,230,230,230,230,230,230,230,230,246,225,212,237,183,136,255,209,149,255,199,142,255,201,
            147,255,208,142,230,230,230,74,149,255,230,230,230,230,230,230,230,230,230,206,189,187,254,212,75,
            126,71,32,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,208,179,167,85,76,124,91,159,
            255,162,196,255,230,230,230,252,228,202,255,213,164,250,188,127,255,210,150,255,205,144,255,209,134,
            230,230,230,93,165,255,230,230,230,230,230,230,230,230,230,114,72,84,243,195,56,128,76,33,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,228,211,200,157,111,85,230,230,230,91,162,255,
            97,152,255,102,158,255,137,185,255,144,148,183,222,216,221,255,247,178,255,215,132,71,143,255,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,120,62,43,83,29,41,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,198,177,171,198,153,93,87,6,0,230,230,230,230,230,230,230,
            230,230,115,121,173,150,168,166,75,120,229,120,189,255,230,230,230,90,147,255,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,166,122,120,233,196,101,114,61,35,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,192,167,162,255,222,87,133,66,8,230,230,230,230,230,230,230,230,230,230,230,
            230,157,86,2,91,8,0,230,230,230,73,137,255,230,230,230,83,148,255,230,230,230,230,230,230,
            230,230,230,230,230,230,135,60,38,141,84,52,72,17,48,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,128,80,88,237,192,49,133,81,32,230,230,230,230,230,230,230,230,230,230,230,230,163,122,101,
            151,79,14,230,230,230,126,174,255,230,230,230,230,230,230,73,133,255,92,154,255,113,174,255,230,
            230,230,230,230,230,82,24,41,230,174,0,144,93,31,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            107,51,38,81,26,40,230,230,230,230,230,230,230,230,230,230,230,230,129,76,81,119,48,3,80,
            69,120,188,206,248,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,72,135,255,86,166,
            255,82,55,106,255,255,95,201,147,1,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,202,162,145,195,
            157,101,95,41,49,230,230,230,230,230,230,230,230,230,230,230,230,252,191,9,140,171,186,235,222,
            209,255,215,159,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,79,6,9,
            206,189,201,238,222,188,77,7,16,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,168,113,107,145,99,73,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,131,116,147,153,182,240,201,162,141,255,213,150,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,125,75,79,255,
            255,255,131,89,88,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,123,69,32,141,89,34,230,230,230,
            230,230,230,230,230,230,230,230,230,88,149,255,236,217,208,184,148,139,255,211,145,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,126,87,94,170,137,
            139,100,86,134,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,193,144,56,255,221,0,125,61,49,230,230,230,230,
            230,230,230,230,230,135,184,255,212,188,178,203,176,169,255,207,142,255,210,166,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,107,45,32,97,47,51,
            168,114,43,171,114,61,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,158,134,166,255,255,150,141,78,25,230,230,230,230,230,230,121,180,
            255,204,229,255,255,251,223,255,202,151,255,207,151,247,192,136,225,175,124,214,174,132,215,183,153,
            225,205,183,208,182,156,171,129,80,189,137,47,228,167,44,155,162,164,84,78,136,170,110,37,159,
            109,58,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,245,238,230,176,145,127,230,230,230,230,230,230,112,167,255,230,230,230,
            255,206,143,255,202,147,255,204,154,242,195,147,221,177,132,205,162,119,201,158,113,202,158,116,200,
            153,110,228,185,133,251,198,87,170,168,159,93,167,255,173,155,118,154,95,45,131,80,22,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,167,131,135,242,239,242,230,230,230,230,230,230,104,159,255,255,255,227,255,192,125,255,
            206,154,246,198,149,233,188,142,212,171,130,205,166,125,204,161,120,210,163,114,243,202,141,224,213,
            186,104,165,255,106,160,255,189,141,68,170,105,32,255,217,3,183,131,0,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,184,163,163,99,28,9,230,230,230,103,168,255,255,255,231,255,194,126,255,204,150,237,188,
            138,224,177,128,203,157,110,208,156,103,241,194,130,244,215,168,153,189,251,101,166,255,146,164,190,
            174,128,81,185,123,27,255,206,16,209,165,0,118,62,0,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,108,46,35,230,230,230,98,176,255,230,230,230,251,199,142,255,208,154,248,200,142,247,203,149,
            238,206,163,208,204,205,152,195,255,111,171,255,144,161,193,186,142,79,181,114,26,205,147,32,235,
            184,13,167,116,0,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,109,46,41,
            230,230,230,85,172,255,175,192,231,255,255,237,255,255,249,208,223,248,171,205,255,123,180,255,133,
            187,255,157,169,195,176,139,98,175,114,38,192,135,51,215,163,49,186,135,22,125,68,1,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,148,
            161,190,84,158,255,82,151,255,92,160,255,103,163,255,135,169,235,203,180,148,201,143,70,169,105,
            30,194,143,70,220,177,84,187,138,51,103,52,0,85,28,0,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,214,177,132,244,245,
            243,236,223,205,217,187,154,178,123,61,172,111,43,190,140,78,228,194,137,227,195,129,180,140,73,
            115,61,6,109,49,0,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,147,86,23,167,117,69,192,151,107,
            208,175,138,238,221,192,240,227,192,200,172,126,129,85,37,75,21,0,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,106,56,10,134,93,54,163,132,100,148,111,73,124,
            81,42,116,69,27,104,54,7,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
            230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230
        };
        wxImage image( 32, 32, (unsigned char*)data, TRUE );
        image.SetMaskColour( 230, 230, 230);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 17)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,70,116,165,69,116,165,89,130,177,220,220,220,220,220,220,220,220,220,46,99,
            149,49,100,151,55,105,157,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,43,105,162,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,180,194,235,193,204,244,179,195,235,
            149,173,216,98,138,187,54,114,174,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,44,109,171,220,220,220,220,220,220,220,220,220,220,220,220,
            156,176,219,159,179,221,167,184,225,132,161,207,66,118,173,43,100,158,220,220,220,220,220,220,220,
            220,220,220,220,220,60,119,179,52,105,161,59,116,174,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,78,134,190,132,163,210,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,82,127,178,77,129,183,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,69,125,183,109,146,193,142,172,216,111,151,207,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,42,100,153,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,179,205,245,127,160,208,83,135,190,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,43,106,168,220,220,220,220,220,220,220,220,220,41,102,158,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,51,113,159,142,170,211,194,215,255,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,38,104,167,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,49,107,161,151,179,225,205,225,250,141,175,220,48,104,162,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,46,114,178,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            190,214,247,116,151,198,59,116,170,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,44,103,
            162,37,95,151,220,220,220,220,220,220,220,220,220,38,100,158,220,220,220,220,220,220,220,220,220,
            220,220,220,86,136,192,186,211,247,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,40,
            106,169,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,45,107,165,
            164,185,227,172,190,231,167,186,227,99,138,186,43,104,166,220,220,220,220,220,220,28,91,149,220,
            220,220,220,220,220,220,220,220,183,201,249,165,181,225,175,192,233,62,114,168,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,37,113,184,220,220,220,220,
            220,220,220,220,220,220,220,220,42,104,163,220,220,220,220,220,220,47,103,156,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,82,13,0,160,
            123,90,218,177,105,218,203,186,218,207,190,132,74,46,66,74,105,73,126,184,206,224,254,220,220,
            220,220,220,220,69,121,173,220,220,220,220,220,220,103,143,192,176,193,233,159,180,222,164,187,224,
            176,199,238,186,216,250,85,110,140,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,165,133,123,241,237,232,255,255,255,255,221,
            155,172,105,34,127,63,24,169,97,14,103,86,73,43,108,172,220,220,220,220,220,220,185,209,251,
            132,163,207,48,100,152,47,103,157,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,92,77,62,192,127,34,91,35,0,80,23,0,77,23,0,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,163,101,36,227,220,215,186,164,143,255,255,255,253,217,163,235,164,46,
            212,156,60,236,175,55,111,88,59,40,106,171,220,220,220,220,220,220,220,220,220,220,220,220,48,
            101,154,63,114,165,172,201,231,203,230,255,193,217,252,179,203,237,188,214,248,80,146,215,58,59,
            72,147,85,16,173,128,70,219,175,107,215,168,90,172,117,34,145,89,24,133,74,17,88,34,2,
            168,107,29,229,148,23,255,251,231,255,255,255,255,255,253,254,211,145,209,134,35,194,150,16,184,
            131,55,98,67,49,45,107,169,149,173,215,167,192,232,186,214,252,179,206,237,65,114,166,52,104,
            156,220,220,220,220,220,220,220,220,220,220,220,220,171,190,234,82,92,115,120,65,19,234,203,126,
            255,245,213,255,241,212,252,223,168,246,184,76,242,173,65,191,129,42,128,74,17,153,94,22,202,
            129,26,255,255,251,255,255,255,255,248,236,247,180,78,194,162,127,227,222,102,162,124,82,220,220,
            220,36,104,169,220,220,220,220,220,220,220,220,220,220,220,220,59,110,161,63,113,165,170,199,233,
            185,213,255,220,220,220,220,220,220,220,220,220,177,103,31,253,188,71,253,198,117,251,201,122,248,
            195,114,239,176,80,235,163,56,218,150,50,238,166,57,248,183,68,248,177,65,248,179,72,255,255,
            255,255,255,255,249,219,174,246,181,78,224,215,211,190,170,166,121,58,24,220,220,220,63,119,177,
            180,202,244,176,197,235,220,220,220,220,220,220,54,105,157,54,106,157,220,220,220,220,220,220,220,
            220,220,123,113,116,152,98,41,247,186,69,244,167,51,197,146,62,184,141,64,232,158,43,244,169,
            54,237,169,65,249,213,154,248,208,145,238,172,72,237,164,54,240,169,62,255,244,224,255,255,255,
            245,183,93,251,225,185,251,249,247,161,125,110,220,220,220,220,220,220,54,110,167,220,220,220,220,
            220,220,220,220,220,137,167,216,56,106,159,54,105,158,220,220,220,220,220,220,220,220,220,93,47,
            53,113,60,14,247,180,51,179,152,95,202,230,246,227,243,245,126,161,191,211,157,64,238,168,62,
            248,206,143,254,232,197,251,216,164,237,171,74,224,151,44,247,190,103,245,188,102,247,206,142,252,
            252,251,152,113,95,220,220,220,220,220,220,45,100,161,102,142,191,173,190,236,220,220,220,220,220,
            220,220,220,220,44,99,154,50,101,152,118,155,199,198,224,255,195,229,253,177,207,227,139,163,190,
            185,126,48,133,157,173,153,190,240,150,180,220,201,221,245,184,157,105,245,169,55,239,176,81,247,
            201,133,248,206,145,243,186,99,203,136,42,246,167,47,246,192,105,240,232,219,154,119,113,220,220,
            220,220,220,220,220,220,220,32,94,147,220,220,220,220,220,220,220,220,220,194,213,251,81,128,180,
            44,101,158,220,220,220,43,103,162,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,85,
            92,115,159,169,251,183,179,251,126,163,233,175,144,89,243,167,55,235,162,54,240,171,65,245,182,
            84,244,180,80,208,141,43,172,134,91,253,254,250,128,86,70,220,220,220,220,220,220,220,220,220,
            49,112,173,75,124,172,220,220,220,220,220,220,220,220,220,220,220,220,26,86,142,220,220,220,220,
            220,220,47,105,161,171,189,230,172,188,230,166,190,230,211,229,253,121,166,219,90,140,183,123,132,
            154,159,175,212,146,176,213,229,182,97,241,170,62,235,164,59,180,114,34,206,131,31,250,184,66,
            251,196,76,165,116,60,165,138,113,220,220,220,220,220,220,220,220,220,220,220,220,47,106,163,118,
            158,201,205,230,255,202,230,255,199,222,250,94,135,185,54,110,164,220,220,220,220,220,220,220,220,
            220,30,90,146,220,220,220,220,220,220,90,129,177,120,156,188,77,131,183,57,97,136,134,159,183,
            198,176,162,240,235,231,255,255,255,255,255,255,235,233,233,167,147,133,162,118,67,158,92,26,150,
            86,19,90,33,0,220,220,220,220,220,220,220,220,220,42,102,156,72,117,168,220,220,220,220,220,
            220,220,220,220,220,220,220,40,101,160,220,220,220,220,220,220,220,220,220,220,220,220,64,120,175,
            148,177,215,127,164,215,119,156,191,114,149,191,220,220,220,73,123,178,129,169,214,178,151,140,157,
            116,83,197,178,158,210,195,178,191,171,154,174,146,119,127,75,57,79,43,37,55,79,104,105,46,
            4,220,220,220,220,220,220,220,220,220,55,115,174,199,223,243,199,223,255,194,211,250,151,175,217,
            44,102,157,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,21,81,138,107,
            145,184,117,152,191,220,220,220,220,220,220,148,174,220,98,141,191,207,178,114,212,161,59,90,30,
            0,56,14,0,218,206,187,204,150,93,77,57,61,44,109,173,62,126,208,220,220,220,220,220,220,
            220,220,220,60,113,166,220,220,220,220,220,220,220,220,220,220,220,220,33,91,146,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,90,135,182,123,157,198,119,151,
            196,220,220,220,220,220,220,139,169,219,87,134,187,99,37,7,97,34,0,220,220,220,129,71,8,
            190,143,90,107,38,12,63,115,181,220,220,220,220,220,220,69,127,208,37,102,164,37,99,157,162,
            191,226,196,216,252,163,188,224,116,152,195,53,109,167,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,80,135,192,137,174,219,220,220,220,37,95,152,220,220,220,
            220,220,220,220,220,220,84,134,192,220,220,220,82,92,104,37,111,184,95,41,24,99,35,0,220,
            220,220,73,131,209,75,129,207,220,220,220,43,97,148,80,122,170,118,154,205,220,220,220,220,220,
            220,43,102,154,36,97,155,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,129,169,222,105,150,199,220,220,220,220,220,220,55,115,169,71,123,169,77,
            123,174,88,134,193,220,220,220,220,220,220,126,162,211,106,120,151,79,72,78,61,92,128,54,111,
            172,54,107,162,62,112,163,72,119,168,72,117,167,77,123,177,72,122,172,52,109,155,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,111,155,212,111,154,210,220,220,220,220,220,220,220,220,220,220,220,220,78,134,199,101,147,
            216,26,84,135,41,102,159,45,106,164,53,113,173,47,111,175,51,109,167,54,104,157,63,118,180,
            220,220,220,220,220,220,220,220,220,220,220,220,70,126,197,80,134,207,58,116,168,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,107,151,209,100,147,212,220,220,220,220,220,220,220,220,220,220,220,220,105,153,231,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,74,131,204,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,72,124,194,68,119,187,75,129,201,55,113,169,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            88,139,205,99,149,222,76,133,199,220,220,220,220,220,220,90,141,226,49,109,161,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,84,135,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,87,138,212,102,154,232,73,132,205,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,68,
            123,185,99,150,231,91,143,224,55,107,164,75,126,201,47,101,151,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,83,133,218,76,135,212,220,220,220,220,220,220,74,133,195,
            81,135,215,96,148,240,78,133,199,58,117,177,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,68,123,191,105,158,229,113,165,246,60,114,173,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,94,150,240,100,155,240,95,149,237,80,133,211,59,117,164,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,68,119,186,61,113,174,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 32, 32, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 18)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,0,107,170,0,173,255,15,181,255,16,183,255,0,176,
            255,0,107,173,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,102,
            168,48,183,250,144,241,255,214,255,255,249,255,255,255,255,255,255,255,255,250,255,255,199,255,255,
            109,229,255,23,183,255,0,137,224,0,78,131,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,44,191,255,201,255,255,255,255,255,
            255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
            255,255,142,237,255,0,188,255,0,162,255,0,77,129,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,0,137,217,121,237,255,255,255,255,255,255,255,252,255,255,187,243,255,137,
            229,255,132,226,255,140,224,255,130,220,255,124,220,255,171,242,255,252,255,255,255,255,255,255,255,
            255,198,247,255,4,180,255,0,180,255,0,120,195,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,12,
            182,255,180,244,255,255,255,255,255,255,255,152,231,255,105,218,255,155,234,255,217,253,255,238,253,
            255,247,242,229,242,228,202,214,209,181,136,189,191,71,195,244,135,230,255,255,255,255,255,255,255,
            183,243,255,0,171,255,0,177,255,0,142,228,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,3,177,255,202,243,255,255,255,
            255,220,244,255,85,208,255,145,230,255,255,255,255,255,255,255,255,255,255,255,253,236,255,239,208,
            255,224,180,255,210,151,255,202,128,236,193,140,86,177,201,74,208,255,255,255,255,255,255,255,102,
            216,255,0,162,255,0,180,255,0,132,210,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,0,146,229,154,229,255,255,253,255,202,234,255,61,199,255,
            193,247,255,255,255,255,255,255,255,255,255,255,255,255,244,255,250,222,255,236,193,255,220,166,255,
            208,142,255,203,137,255,202,134,255,201,128,89,177,198,89,216,255,255,255,255,238,255,255,3,176,
            255,0,166,255,0,182,255,0,66,107,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,0,97,157,69,209,255,255,243,255,188,226,255,30,189,255,197,250,255,255,255,255,255,
            255,255,255,255,255,244,232,220,218,197,175,206,176,147,208,165,128,212,158,110,236,173,117,255,188,
            128,255,201,136,255,214,142,255,212,145,38,181,239,189,248,255,255,255,255,76,199,255,0,151,255,
            0,173,255,0,148,234,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,
            172,255,197,224,255,237,234,255,49,205,255,170,248,255,236,223,218,119,119,119,48,49,48,10,8,
            9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,40,19,12,
            74,49,27,163,105,59,105,158,163,77,209,255,255,255,255,148,219,255,0,135,241,0,157,255,0,
            167,255,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,89,147,64,202,255,255,237,
            255,115,205,255,19,109,155,55,44,38,0,0,0,0,0,0,53,49,50,33,55,43,34,79,47,
            168,167,168,181,177,182,77,166,76,10,138,9,12,121,13,4,95,7,0,32,0,27,37,38,23,
            22,23,0,3,3,12,54,78,238,236,234,206,243,255,0,122,228,0,135,241,0,156,255,0,69,
            127,220,220,220,220,220,220,220,220,220,220,220,220,0,138,236,149,210,255,223,212,250,17,37,54,
            2,3,2,75,74,73,177,179,179,255,255,255,255,255,255,51,152,87,124,218,135,255,255,255,255,
            255,255,74,157,95,4,108,30,50,206,55,66,239,61,5,140,33,121,176,154,255,255,255,199,211,
            216,5,57,99,99,105,109,218,237,249,0,114,218,0,116,223,0,135,247,0,84,158,220,220,220,
            220,220,220,220,220,220,220,220,220,0,147,252,202,212,255,63,74,100,27,69,94,249,249,249,255,
            255,255,255,255,255,255,255,255,202,224,217,27,138,54,209,255,208,255,255,255,132,175,152,0,17,
            22,0,6,18,29,115,55,105,243,98,26,148,47,79,148,116,255,255,255,244,255,255,35,146,238,
            208,231,252,231,244,255,0,96,201,0,99,210,0,117,228,0,89,180,220,220,220,220,220,220,220,
            220,220,220,220,220,26,155,255,212,202,254,57,129,201,89,195,255,255,255,255,255,255,255,255,255,
            255,255,255,255,137,187,162,67,171,87,255,255,255,191,253,191,14,76,40,0,14,18,0,12,17,
            35,100,63,145,255,138,39,148,65,89,159,135,255,255,255,217,253,255,20,109,202,234,247,255,206,
            229,253,0,77,185,0,87,197,0,99,211,0,78,172,220,220,220,220,220,220,220,220,220,0,30,
            78,46,148,253,231,216,255,71,151,238,108,185,239,255,255,255,255,255,255,255,255,255,255,255,255,
            104,170,138,94,187,110,189,254,187,168,248,167,30,85,61,0,4,9,0,17,18,101,172,119,179,
            255,173,49,142,79,158,212,209,237,255,255,179,231,254,25,94,189,255,255,255,156,191,237,0,55,
            168,0,76,187,0,84,198,0,60,149,220,220,220,220,220,220,220,220,220,0,23,69,51,140,244,
            229,214,255,65,129,224,105,173,229,255,255,255,250,255,255,248,255,255,255,255,255,98,168,140,116,
            189,134,210,255,208,210,255,208,146,196,159,33,80,70,99,148,124,212,255,210,173,231,177,55,140,
            99,206,255,255,222,255,255,101,163,219,63,106,191,255,255,255,91,137,208,0,38,155,0,66,176,
            0,71,188,0,37,109,220,220,220,220,220,220,220,220,220,0,17,65,44,122,230,223,212,255,71,
            121,218,77,145,212,255,255,255,236,255,255,232,255,255,243,255,255,114,182,162,101,167,128,255,255,
            255,243,255,243,250,255,249,248,255,247,253,255,250,255,255,255,96,165,122,101,182,166,208,255,255,
            197,255,255,36,87,175,148,165,223,255,255,255,18,66,165,0,38,152,0,53,165,0,56,176,0,
            16,70,220,220,220,220,220,220,220,220,220,0,13,60,25,101,214,212,209,255,110,138,228,45,104,
            189,232,255,255,224,255,255,220,255,255,224,255,255,163,222,217,44,124,80,255,255,255,255,255,255,
            255,255,255,255,255,255,255,255,255,206,229,214,34,124,85,176,247,255,195,255,255,136,206,241,22,
            60,161,243,242,255,182,195,239,0,25,137,0,38,149,0,40,154,0,44,161,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,0,65,181,190,195,255,175,181,255,13,57,159,182,230,250,
            218,255,255,208,255,255,205,255,255,208,255,255,49,140,107,83,149,112,255,255,255,255,255,255,255,
            255,255,175,209,188,33,121,80,122,208,206,187,255,255,176,255,255,28,88,176,124,145,216,255,255,
            255,65,97,183,0,17,131,0,29,141,0,29,144,0,25,130,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,0,29,138,129,149,232,226,218,255,57,86,187,60,114,188,214,255,255,196,
            255,255,189,253,255,191,255,255,173,243,253,38,134,102,18,106,60,56,134,94,38,122,79,28,125,
            91,122,214,218,179,255,255,157,247,255,42,109,191,64,96,187,254,248,255,166,179,236,0,24,136,
            0,22,134,0,24,135,0,26,146,0,6,68,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,0,8,93,40,78,185,217,212,255,181,185,255,10,49,157,73,135,202,189,255,255,180,255,
            255,172,249,255,173,253,255,171,252,255,125,217,226,96,195,191,116,211,219,157,248,255,168,255,255,
            136,232,255,28,91,180,56,87,183,229,226,255,216,218,255,17,54,158,0,17,130,0,24,135,0,
            24,137,0,24,132,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,0,26,147,131,147,230,228,220,255,157,166,243,17,55,163,48,112,190,151,237,255,170,255,255,
            163,254,255,158,250,255,159,254,255,161,255,255,159,255,255,142,247,255,83,173,229,28,83,176,115,
            134,218,232,229,255,223,222,255,42,80,182,0,15,136,0,24,138,0,24,136,0,27,149,0,3,
            60,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,18,127,
            7,45,156,173,181,253,223,218,255,196,197,255,80,105,202,27,78,173,59,135,205,91,182,232,108,
            208,248,104,205,247,89,187,237,65,148,216,38,99,188,67,99,196,172,176,249,237,230,255,202,203,
            255,43,83,185,0,16,105,10,16,79,0,16,114,0,24,146,0,9,84,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,6,66,0,19,142,15,
            53,159,166,175,250,223,217,255,219,214,255,176,179,254,107,127,218,77,107,202,65,99,196,67,101,
            197,80,110,203,114,131,220,172,175,252,222,217,255,219,214,255,124,144,228,8,49,162,0,15,100,
            70,24,28,141,87,54,125,93,80,23,22,68,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,18,114,0,19,137,0,38,
            147,84,110,205,179,183,255,219,214,255,229,220,255,224,217,255,217,211,255,218,212,255,228,219,255,
            230,222,255,210,208,255,149,161,242,42,78,179,0,20,132,0,18,137,12,19,85,108,46,24,203,
            162,84,230,199,118,197,158,100,100,57,43,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,20,127,0,22,141,0,16,128,
            0,38,148,57,90,189,110,132,220,142,157,238,156,167,244,147,161,239,127,144,229,83,110,205,25,
            65,168,0,25,137,0,16,129,0,23,134,0,24,136,0,24,140,30,26,77,135,75,30,183,134,
            56,209,172,95,224,196,121,177,137,95,73,30,27,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,17,112,0,27,148,0,22,136,0,
            15,128,0,19,131,0,25,137,0,27,138,0,26,137,0,22,134,0,15,129,0,18,130,0,23,
            134,0,24,135,0,24,140,0,26,147,0,22,131,0,0,46,46,8,8,134,71,26,168,112,38,
            185,138,64,211,173,97,209,173,108,129,83,59,35,5,7,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,2,51,0,18,119,0,26,146,0,25,
            144,0,23,137,0,23,136,0,23,136,0,24,136,0,24,137,0,24,141,0,26,146,0,26,144,
            0,18,118,0,6,68,220,220,220,220,220,220,220,220,220,69,22,18,130,69,24,151,91,25,167,
            110,38,190,145,69,152,107,73,90,35,30,67,18,18,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,10,84,0,18,116,
            0,22,128,0,22,129,0,22,129,0,20,125,0,16,107,0,7,74,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,89,33,25,118,60,24,131,73,23,107,50,
            25,130,70,22,168,106,23,112,49,28,23,0,2,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,38,7,8,91,34,26,86,32,24,116,58,24,167,104,24,
            152,91,24,101,43,26,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,66,18,18,79,25,24,116,58,24,110,54,24,99,42,26,57,
            14,14,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,32,4,4,85,27,27,80,27,24,83,27,26,66,18,19,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,70,19,19,77,24,24,49,12,13,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 32, 32, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 19)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,72,79,84,86,91,97,88,94,99,90,97,100,85,91,96,80,86,90,72,78,84,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,76,82,87,144,147,150,117,121,
            125,155,158,164,202,205,209,205,207,211,218,220,223,220,223,225,197,199,202,144,148,150,79,85,90,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,105,110,115,189,191,195,255,255,255,196,198,200,110,117,120,
            210,212,216,219,221,226,236,237,239,251,251,254,255,255,255,255,255,255,232,233,236,111,118,120,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,69,75,82,111,118,121,103,108,114,130,135,138,223,226,229,109,115,118,178,182,186,229,
            230,233,239,240,243,255,255,255,255,255,255,253,253,254,206,209,210,141,146,148,78,79,79,220,220,
            220,220,220,220,25,79,138,67,115,162,79,128,171,27,74,133,17,13,76,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,76,82,87,101,107,111,82,88,93,116,121,125,144,
            147,152,176,178,184,202,205,209,121,128,131,118,124,128,149,155,157,128,133,137,238,239,242,251,253,
            255,251,253,254,168,174,177,91,98,103,69,76,80,70,74,78,220,220,220,29,77,125,50,104,157,
            157,184,207,186,209,221,66,116,164,17,22,85,15,0,57,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,66,74,78,146,150,154,255,255,255,210,211,212,124,129,134,206,209,212,230,231,
            233,243,243,248,245,245,248,106,111,116,159,164,167,103,108,114,223,225,227,233,237,239,110,117,120,
            66,67,66,68,78,85,220,220,220,220,220,220,220,220,220,50,104,158,202,217,229,223,232,237,82,
            129,174,15,35,98,16,0,59,220,220,220,220,220,220,220,220,220,32,87,144,220,220,220,220,220,
            220,72,80,84,207,211,211,255,255,255,255,255,255,177,180,182,148,152,156,250,251,253,255,255,255,
            255,255,255,121,126,130,166,169,174,135,138,144,134,139,146,110,117,120,139,135,119,118,82,50,220,
            220,220,220,220,220,220,220,220,220,220,220,87,130,174,254,255,254,175,198,218,22,69,130,15,3,
            65,220,220,220,220,220,220,220,220,220,23,77,137,104,146,182,60,109,158,220,220,220,74,80,86,
            206,209,210,255,255,255,255,255,255,242,245,245,125,130,135,254,254,255,255,255,255,221,223,225,103,
            108,111,199,202,207,159,164,168,68,75,82,130,97,40,239,197,111,189,160,130,220,220,220,220,220,
            220,220,220,220,220,220,220,42,98,152,231,239,248,223,233,243,39,86,143,220,220,220,220,220,220,
            220,220,220,220,220,220,39,94,147,184,205,219,108,148,185,220,220,220,69,76,82,174,177,181,254,
            254,255,249,250,250,239,240,242,121,128,130,255,255,255,240,240,242,95,100,105,120,125,130,131,136,
            141,79,89,96,82,67,56,136,80,18,210,146,38,238,216,171,124,84,50,220,220,220,220,220,220,
            220,220,220,15,43,105,108,149,189,255,255,255,181,203,223,45,99,152,220,220,220,220,220,220,14,
            72,133,111,149,185,219,230,236,126,165,196,16,28,91,220,220,220,117,123,128,230,231,236,239,239,
            242,202,203,206,135,139,143,221,223,223,98,104,108,67,75,79,76,83,87,68,77,80,220,220,220,
            220,220,220,101,55,18,174,110,21,237,195,109,190,164,130,220,220,220,220,220,220,220,220,220,220,
            220,220,17,63,124,123,160,198,255,255,255,249,254,255,147,177,206,106,146,185,143,172,200,218,227,
            237,231,238,242,104,148,186,13,26,89,220,220,220,73,79,84,137,141,146,196,198,202,128,133,137,
            98,105,108,85,91,95,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,129,78,23,210,148,44,237,216,167,124,82,45,220,220,220,220,220,220,220,220,220,38,90,
            145,78,125,168,87,131,176,182,205,226,255,255,255,255,255,255,255,255,255,240,248,250,178,206,225,
            43,93,147,15,13,74,220,220,220,220,220,220,70,77,83,78,84,88,73,79,84,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,100,56,
            23,174,111,22,238,199,120,184,150,110,220,220,220,220,220,220,27,84,144,131,167,196,184,206,220,
            141,174,200,62,114,164,44,91,146,84,119,166,97,135,177,74,115,162,32,64,123,17,19,83,17,
            2,63,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,135,82,22,
            218,159,57,242,209,152,83,82,78,19,77,137,118,156,190,188,209,221,182,205,219,158,189,210,46,
            96,149,13,14,78,11,1,62,9,4,66,12,3,66,15,2,63,17,1,62,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,106,59,21,197,128,25,162,
            156,121,32,87,147,107,147,185,195,212,225,189,209,221,175,199,217,59,111,162,15,31,94,17,0,
            60,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,96,84,59,28,82,133,104,146,
            186,202,217,226,195,211,223,191,210,223,83,133,176,16,45,108,16,2,63,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,22,75,135,110,150,190,209,221,231,200,217,227,
            202,218,229,103,147,185,19,60,123,17,6,68,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,22,82,146,128,160,196,217,229,236,207,221,230,211,225,232,124,164,195,23,
            72,133,17,13,76,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,19,77,136,33,
            88,145,149,177,205,229,236,239,216,225,233,220,231,237,139,174,202,26,80,138,15,19,85,13,0,
            64,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,21,75,135,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,17,74,135,49,100,154,180,200,219,237,242,
            245,221,231,237,230,236,240,154,181,207,31,87,144,13,22,89,29,8,52,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,19,77,136,54,105,157,125,159,191,121,157,189,76,121,166,28,83,
            143,220,220,220,220,220,220,18,74,135,78,123,169,213,225,236,246,249,250,230,238,243,238,243,246,
            162,188,211,32,89,147,11,25,96,50,25,64,99,56,27,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,54,104,156,196,211,225,220,230,236,209,223,230,195,212,225,141,174,199,50,101,155,
            21,76,136,125,160,196,246,249,251,250,253,254,238,243,248,248,250,251,167,191,213,33,91,148,12,
            28,98,50,26,65,200,157,90,133,85,35,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,23,78,138,
            166,189,212,243,246,248,211,223,231,162,190,211,164,191,211,189,211,221,164,191,211,59,109,159,149,
            180,209,255,255,255,248,250,253,255,255,255,167,192,216,32,89,147,14,32,100,34,13,55,177,121,
            39,238,189,86,162,116,54,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,46,97,152,243,246,250,219,
            230,238,85,131,175,26,74,134,31,78,136,82,129,172,175,199,217,155,186,207,50,104,156,196,213,
            230,255,255,255,156,185,211,28,87,146,16,34,99,22,4,58,94,52,28,197,133,26,220,166,63,
            198,149,67,103,58,24,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,72,118,166,202,220,236,62,111,162,14,35,
            99,16,6,67,15,5,67,14,37,99,83,130,174,184,207,220,110,152,186,83,128,172,141,175,205,
            25,84,143,18,32,95,13,0,65,220,220,220,104,59,21,166,106,25,216,155,46,217,165,68,125,
            78,31,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,43,98,154,43,89,145,15,23,86,17,1,62,220,220,220,
            220,220,220,220,220,220,25,79,138,128,164,195,175,199,217,52,104,156,19,72,134,19,29,91,17,
            1,63,220,220,220,220,220,220,99,56,19,146,93,25,211,146,35,219,164,57,156,105,39,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,23,64,125,16,13,76,17,0,60,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,84,128,171,190,211,223,89,139,178,15,39,103,16,0,59,220,220,220,220,220,
            220,220,220,220,220,220,220,129,79,25,203,138,31,213,155,46,185,130,43,101,58,22,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,14,69,
            131,90,133,175,198,217,226,108,154,189,18,47,109,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,111,66,25,197,134,29,209,147,38,205,146,43,117,70,25,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,23,79,138,62,110,160,167,191,211,
            203,219,229,105,150,186,18,50,115,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,104,
            59,23,184,123,28,207,141,33,210,146,36,145,93,28,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,38,95,150,109,149,186,184,203,220,227,233,239,221,232,237,190,209,221,64,
            119,167,18,42,105,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,99,56,23,171,111,
            28,207,143,31,210,144,32,172,114,28,98,56,23,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,49,85,138,125,160,196,152,185,211,143,177,205,114,156,190,64,119,167,25,75,135,19,16,
            79,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,97,53,23,156,100,27,213,146,32,
            203,138,31,144,91,26,99,54,22,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,11,14,77,15,34,97,17,46,108,15,44,107,18,37,99,19,15,77,17,1,62,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,100,55,22,114,67,25,141,89,26,124,76,25,99,
            55,23,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,99,56,23,97,53,24,98,54,22,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 32, 32, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 20)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,69,5,1,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,82,10,
            11,7,0,26,41,28,96,152,154,192,238,238,253,148,147,191,75,76,132,14,14,52,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,45,0,0,41,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,90,9,5,27,0,27,34,41,122,
            235,239,246,255,255,255,253,255,255,147,150,197,117,117,191,106,107,164,0,0,26,220,220,220,220,
            220,220,220,220,220,0,0,45,7,7,91,68,68,148,111,111,180,0,0,81,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,133,24,22,31,0,0,0,0,40,138,139,193,255,255,255,255,
            255,255,177,180,212,41,62,127,107,111,202,61,65,137,14,14,75,0,0,48,27,27,111,89,89,
            164,122,122,185,118,118,178,70,70,146,136,136,188,71,71,151,0,0,17,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,83,0,0,220,220,220,220,220,220,46,46,139,244,244,255,255,255,255,255,255,
            255,102,111,170,112,126,171,121,123,180,76,76,150,134,134,193,113,113,177,80,80,151,80,80,151,
            61,61,138,37,37,102,38,38,113,148,148,201,0,0,54,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,100,0,0,220,220,220,220,220,220,0,0,32,22,22,117,148,148,209,147,147,209,107,105,184,
            101,99,174,20,19,110,68,68,143,100,99,166,141,141,192,220,220,240,255,255,255,255,255,255,92,
            92,148,41,41,106,132,132,188,31,31,113,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,66,0,0,
            0,0,22,10,14,79,73,73,139,111,109,170,85,82,154,6,5,97,14,18,106,52,61,138,139,
            148,194,246,245,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,166,166,207,55,55,
            112,86,86,150,103,103,171,0,0,11,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,19,19,83,88,83,148,139,134,192,151,
            149,199,118,120,173,99,107,159,111,126,167,139,162,191,110,132,199,95,103,198,83,87,193,101,118,
            179,77,168,93,113,188,127,239,251,245,255,255,255,255,255,255,248,248,255,86,86,141,52,52,120,
            149,149,205,0,0,42,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,
            0,58,21,21,80,85,85,148,150,149,198,151,151,197,111,123,168,87,110,146,96,133,149,137,184,
            173,179,229,199,207,248,223,119,137,194,116,112,205,144,139,244,246,240,255,123,174,156,6,137,11,
            7,144,8,41,151,52,191,225,205,255,255,255,255,255,255,141,141,187,54,54,117,141,141,197,21,
            21,92,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,37,10,10,107,212,212,
            225,223,221,231,39,50,117,69,133,122,101,180,139,136,218,161,157,232,176,164,231,183,170,233,190,
            83,156,123,110,118,202,193,190,255,169,182,242,61,159,77,21,148,25,21,152,21,22,156,21,14,
            151,14,24,148,34,213,239,223,255,255,255,209,209,234,70,70,133,120,120,177,78,78,147,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,41,41,119,106,106,171,73,73,139,251,250,240,
            83,86,147,48,111,107,116,218,140,117,205,147,127,211,156,147,220,171,85,176,110,20,139,28,193,
            199,252,166,151,255,198,218,229,15,144,22,20,168,16,25,169,24,25,173,24,25,177,25,14,173,
            14,83,185,96,255,255,255,252,252,255,111,111,167,102,102,162,116,116,179,0,0,7,220,220,220,
            220,220,220,220,220,220,220,220,220,91,91,169,255,255,255,44,44,125,157,157,185,229,225,229,32,
            41,111,67,158,111,102,204,132,110,202,141,118,201,149,30,146,49,20,147,24,118,176,161,133,179,
            188,246,251,255,111,185,146,14,168,19,16,187,14,17,185,17,19,192,18,25,204,21,26,184,34,
            222,245,231,255,255,255,149,149,197,81,81,150,148,148,204,0,0,26,220,220,220,220,220,220,220,
            220,220,220,220,220,0,0,60,204,204,238,192,192,222,39,39,118,235,235,229,152,146,187,16,51,
            92,82,194,113,95,197,127,92,190,127,20,143,35,21,161,20,11,148,17,17,156,22,150,200,212,
            208,221,255,118,177,187,71,174,113,99,178,157,78,169,127,18,185,24,21,202,21,167,221,182,255,
            255,255,183,183,219,85,85,152,161,161,211,0,0,48,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,25,25,100,255,255,255,80,80,147,109,109,159,248,246,234,67,66,134,29,106,89,
            80,198,111,80,182,118,27,159,44,25,184,20,25,183,21,21,178,21,98,168,187,131,146,255,119,
            127,255,141,156,255,144,157,255,149,162,255,57,170,103,19,168,29,188,229,205,253,255,255,213,221,
            233,73,73,147,161,161,208,14,14,73,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,99,99,162,212,212,222,36,36,113,208,208,211,191,184,205,14,35,93,51,168,92,70,
            183,108,38,166,62,16,171,24,26,199,25,21,185,25,70,134,191,102,119,255,97,123,255,93,111,
            255,100,126,255,113,144,255,95,150,234,56,97,152,204,238,219,223,255,232,219,241,232,68,69,143,
            157,156,201,36,36,103,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,
            0,52,187,187,209,93,93,149,91,91,147,244,244,229,90,86,149,10,81,76,55,185,91,49,173,
            85,11,113,64,17,167,35,22,213,10,24,164,57,67,109,235,86,105,255,78,98,255,70,108,255,
            72,97,255,83,121,235,111,150,187,192,242,202,205,251,218,212,250,223,58,64,133,140,139,188,56,
            56,125,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,51,51,
            120,190,190,198,34,34,111,194,194,201,197,190,205,14,35,92,27,152,71,46,179,83,32,122,92,
            9,54,123,37,154,113,27,158,71,56,128,200,77,121,255,87,130,235,149,183,232,198,214,241,223,
            233,248,144,207,182,177,245,190,150,200,182,72,95,140,17,18,105,184,183,213,73,73,140,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,40,150,150,177,
            81,81,133,93,93,147,235,234,222,85,80,143,0,80,61,28,171,67,39,173,76,25,99,101,22,
            46,185,57,77,255,75,92,255,91,137,241,202,208,255,255,250,255,235,242,255,130,179,188,91,156,
            139,42,70,116,28,34,111,107,105,162,207,207,223,159,159,202,14,14,105,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,44,44,111,156,156,169,35,
            35,110,201,201,204,173,168,190,0,17,80,8,137,55,21,161,62,34,171,69,27,130,79,15,66,
            113,16,50,148,89,130,190,185,202,252,118,138,212,52,76,149,19,40,105,32,36,112,130,126,176,
            205,204,220,146,144,191,30,30,120,0,0,54,0,0,14,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,51,151,151,183,60,60,127,117,117,
            158,225,225,214,45,41,120,0,67,50,8,160,48,16,154,58,26,166,65,36,177,70,40,171,76,
            37,141,87,10,56,91,54,64,128,102,161,117,65,121,95,121,119,169,126,125,177,16,16,107,0,
            0,50,0,0,8,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,77,77,148,137,137,184,46,46,118,220,220,211,
            148,138,178,0,32,64,0,144,34,4,154,42,10,159,50,8,121,58,0,52,70,17,31,97,45,
            41,120,108,105,157,103,201,97,90,193,87,37,36,118,0,0,50,0,0,4,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,7,7,85,178,178,228,34,34,118,160,160,179,214,209,211,27,
            44,101,0,116,25,0,95,36,0,32,60,20,28,100,111,103,159,193,190,201,121,120,161,14,14,
            106,113,112,188,98,97,171,4,4,95,0,0,5,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,0,0,30,140,140,218,86,86,170,80,80,134,234,233,219,75,78,133,0,4,
            59,35,40,111,137,127,173,194,192,200,127,127,166,22,22,107,0,0,88,67,67,127,128,127,168,
            156,154,190,10,10,97,0,0,77,30,30,108,47,47,121,49,49,123,24,24,103,0,0,44,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,71,71,161,158,158,235,29,29,109,208,208,204,164,162,183,151,144,179,197,193,200,
            112,112,158,13,13,100,0,0,80,54,54,106,146,146,154,204,204,192,238,238,221,220,220,222,7,
            7,99,176,176,218,255,255,255,255,255,255,255,255,255,255,255,255,126,126,194,0,0,27,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            14,14,96,201,201,255,27,27,120,152,152,176,194,194,199,97,97,150,3,3,91,0,0,76,36,
            36,112,85,85,110,161,161,143,159,159,157,147,147,167,147,147,191,183,183,219,201,201,218,205,207,
            219,209,209,220,212,213,223,221,222,231,252,253,252,108,108,167,0,0,14,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,44,79,
            79,184,34,34,133,14,14,102,1,1,87,0,0,52,0,0,68,0,0,85,69,69,131,58,58,
            99,81,81,117,85,85,157,131,131,212,148,148,209,140,141,173,173,174,184,222,222,231,255,255,255,
            255,255,255,255,255,255,157,157,211,0,0,38,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,30,0,0,
            57,0,0,34,0,0,31,41,41,106,156,156,220,62,62,156,17,17,110,41,41,136,143,143,229,
            171,171,233,130,131,167,131,132,150,182,182,187,234,234,232,255,255,255,255,255,255,229,229,253,75,
            75,148,0,0,21,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,25,
            73,73,126,208,208,255,215,215,255,205,205,255,187,187,255,205,205,255,147,147,184,110,110,148,176,
            177,233,213,213,255,209,209,211,214,214,212,184,184,214,87,87,161,0,0,62,0,0,0,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,15,15,89,150,150,161,212,
            212,255,208,208,255,211,211,255,205,205,255,123,125,150,111,113,119,187,187,211,185,185,231,126,126,
            171,75,75,136,28,28,108,0,0,52,0,0,4,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,81,21,21,96,70,70,119,95,95,
            139,93,93,137,73,75,107,44,45,98,67,67,133,35,35,110,1,1,80,0,0,50,0,0,24,
            0,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,27,0,0,41,0,0,50,0,0,52,
            0,0,52,0,0,39,0,0,22,0,0,7,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 32, 32, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 21)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,30,17,0,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,46,28,0,75,52,0,99,77,0,149,128,47,130,107,21,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,61,38,0,91,65,0,126,102,14,169,150,
            75,209,200,143,250,246,208,255,255,251,238,229,177,32,21,0,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,57,35,0,96,72,0,139,116,21,185,168,86,231,225,168,255,255,228,255,255,250,255,255,249,
            255,255,238,255,255,236,255,255,245,148,128,52,220,220,220,220,220,220,220,220,220,92,65,0,37,
            24,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,56,35,0,115,92,
            0,149,125,0,66,46,0,220,220,220,220,220,220,38,23,0,79,55,0,133,109,1,187,170,46,
            238,229,107,255,255,156,255,255,187,255,255,199,255,255,211,255,255,225,255,255,233,255,255,234,255,
            255,233,255,255,255,231,223,169,63,43,0,63,42,0,148,124,41,198,182,124,50,36,0,220,220,
            220,220,220,220,220,220,220,220,220,220,71,46,0,115,87,0,185,165,35,255,255,152,255,255,177,
            180,160,0,71,46,0,81,55,0,126,101,0,199,184,27,255,255,79,255,255,103,255,255,115,255,
            255,127,255,255,143,255,255,159,255,255,177,255,255,195,255,255,215,255,255,236,255,255,249,238,233,
            194,139,121,45,99,70,0,184,162,83,255,255,255,255,255,246,56,41,0,220,220,220,220,220,220,
            64,44,0,106,79,0,180,159,50,251,246,188,255,255,255,255,255,255,251,252,255,251,245,87,185,
            164,0,203,185,0,255,252,22,255,255,42,255,255,52,255,255,65,255,255,81,255,255,96,255,255,
            112,255,255,128,255,255,145,255,255,167,255,255,193,244,239,172,160,144,70,105,82,5,148,132,73,
            238,198,44,255,250,155,255,255,255,255,235,126,70,45,0,220,220,220,51,34,0,117,87,0,228,
            207,71,255,255,255,255,255,255,239,236,203,234,221,99,236,221,30,255,240,1,255,255,0,255,255,
            0,255,255,0,255,252,11,255,255,23,255,255,36,255,255,51,255,255,66,255,255,82,255,255,98,
            255,255,119,244,238,113,163,145,45,104,81,0,137,118,58,223,214,164,255,255,255,255,246,144,255,
            255,231,255,255,255,255,229,89,95,70,0,220,220,220,220,220,220,97,71,0,223,193,25,239,235,
            191,236,216,73,251,220,0,255,233,0,255,240,0,255,239,0,255,244,0,255,246,0,255,249,0,
            255,251,0,255,252,1,255,252,11,255,255,24,255,255,38,255,255,54,238,228,53,159,142,21,105,
            78,0,133,112,31,216,209,185,255,255,211,255,228,67,255,255,251,255,255,255,255,255,255,255,245,
            153,255,255,234,113,98,36,220,220,220,220,220,220,51,34,0,177,139,0,255,220,0,255,225,0,
            255,228,0,255,229,0,255,233,0,255,235,0,255,236,0,255,240,0,255,244,0,255,249,0,255,
            255,0,255,255,0,255,255,1,219,206,5,145,126,0,103,78,0,135,114,6,216,172,0,255,255,
            153,255,255,236,255,217,36,255,223,68,255,255,255,255,255,255,255,231,99,255,233,104,255,255,229,
            119,93,0,220,220,220,220,220,220,220,220,220,124,92,0,255,213,0,255,220,0,255,221,0,255,
            225,0,255,227,0,255,229,0,255,233,0,255,235,0,255,245,0,255,247,0,246,226,0,187,167,
            0,125,102,0,106,79,0,152,124,0,227,216,19,255,255,61,255,255,64,255,255,118,255,255,138,
            255,235,81,255,255,199,255,255,249,255,255,255,255,238,134,255,255,236,255,249,154,132,98,0,220,
            220,220,220,220,220,220,220,220,83,60,0,223,174,0,255,219,0,255,216,0,255,219,0,255,221,
            0,255,233,0,255,236,0,255,228,0,214,185,0,134,111,0,95,71,0,107,81,0,185,156,0,
            247,221,0,255,252,0,255,255,0,255,249,13,255,255,45,255,255,68,255,255,95,255,255,133,255,
            255,163,255,255,194,255,255,226,255,255,255,255,255,255,255,255,227,133,115,46,220,220,220,220,220,
            220,220,220,220,52,35,0,179,137,0,255,216,0,255,213,0,255,215,0,255,216,0,209,170,0,
            160,129,0,127,98,0,113,81,0,143,104,0,198,156,0,252,208,0,255,231,0,255,239,0,255,
            239,0,255,217,0,255,238,0,255,255,6,255,255,27,255,255,53,255,252,75,255,255,115,255,255,
            130,255,255,177,255,245,134,255,255,209,255,255,255,135,118,56,220,220,220,220,220,220,220,220,220,
            220,220,220,128,94,0,255,201,0,255,207,0,255,211,0,255,211,0,124,92,0,143,101,0,221,
            160,0,255,191,0,255,209,0,255,217,0,255,206,0,255,208,0,255,226,0,255,216,0,255,200,
            0,255,238,0,255,247,0,255,251,0,255,228,0,255,239,17,255,247,44,255,228,34,255,255,109,
            255,213,10,255,255,154,255,255,223,128,109,34,220,220,220,220,220,220,220,220,220,220,220,220,88,
            63,0,231,170,0,255,206,0,255,205,0,255,208,0,142,106,0,200,135,0,255,214,36,255,255,
            211,255,255,234,240,226,168,255,194,0,255,206,0,255,214,0,255,208,0,255,216,0,255,231,0,
            255,236,0,255,236,0,255,211,0,255,250,0,255,219,0,255,235,16,255,255,62,255,241,56,255,
            255,127,255,255,150,127,102,4,220,220,220,220,220,220,220,220,220,220,220,220,54,36,0,182,133,
            0,255,203,0,255,199,0,255,207,0,154,116,0,184,124,0,255,206,26,255,255,255,255,255,255,
            239,239,236,246,185,1,255,196,0,255,201,0,255,208,0,255,215,0,255,219,0,255,225,0,255,
            227,0,255,233,0,255,241,0,255,229,0,255,252,0,255,252,16,255,255,46,255,255,65,255,255,
            86,125,103,4,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,138,98,0,255,191,0,
            255,194,0,255,206,0,169,125,0,178,124,0,255,196,0,255,255,250,255,255,255,252,255,255,234,
            176,17,255,187,0,255,195,0,255,198,0,255,201,0,255,207,0,255,214,0,255,220,0,255,223,
            0,255,229,0,255,239,0,255,233,0,255,238,0,255,249,0,221,199,10,244,225,30,124,102,0,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,95,67,0,241,168,0,255,191,0,255,
            198,0,180,130,0,177,121,0,255,191,0,255,255,238,255,255,255,255,255,255,229,176,35,255,188,
            0,255,188,0,255,188,0,255,195,0,255,198,0,255,206,0,255,207,0,255,205,0,255,221,0,
            255,225,0,255,203,0,241,211,0,144,154,74,187,194,194,156,167,128,92,74,0,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,73,51,0,205,140,0,255,190,0,255,193,0,190,135,
            0,176,119,0,255,190,0,255,255,225,255,255,255,255,255,255,227,176,42,255,185,0,255,179,0,
            255,186,0,255,188,0,255,190,0,255,195,0,255,198,0,255,203,0,255,215,0,255,211,0,255,
            214,0,162,150,13,144,155,180,255,255,255,216,223,233,57,52,7,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,41,27,0,168,117,0,255,186,0,255,187,0,198,138,0,172,116,0,
            255,191,0,255,255,225,255,255,255,255,255,255,227,176,42,255,179,0,255,179,0,255,182,0,255,
            179,0,255,190,0,255,190,0,255,195,0,255,198,0,255,205,0,255,213,0,255,226,0,124,121,
            27,103,114,134,187,186,185,129,143,146,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,127,89,0,255,178,0,255,186,0,208,142,0,174,118,0,255,199,0,255,
            255,239,255,255,255,255,255,255,227,174,36,255,188,0,255,182,0,255,179,0,255,188,0,211,162,
            0,173,142,35,211,155,0,255,195,0,255,198,0,229,174,0,155,116,0,56,48,0,36,55,67,
            58,75,83,7,19,24,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,92,65,0,239,162,0,255,187,0,215,146,0,177,121,0,255,208,1,255,255,250,255,255,
            255,251,252,255,229,172,22,255,191,0,255,180,0,255,185,0,185,145,0,146,159,160,238,249,255,
            163,168,153,187,134,0,138,97,0,54,35,0,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,66,46,
            0,199,137,0,255,191,0,220,150,0,178,121,0,255,206,22,255,255,255,255,255,255,240,240,246,
            239,173,4,255,180,0,255,180,0,255,186,0,111,103,38,156,163,182,239,235,235,154,165,169,20,
            17,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,35,22,0,165,115,0,
            255,190,0,220,150,0,178,117,0,255,220,63,255,255,255,251,246,234,217,200,135,255,180,0,255,
            184,0,255,185,0,239,164,0,88,83,24,74,91,106,109,119,125,31,44,51,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,133,93,0,255,184,0,214,
            145,0,178,125,0,255,214,30,179,160,98,182,143,20,255,191,0,255,194,0,235,162,0,152,106,
            0,79,54,0,220,220,220,2,13,20,1,11,16,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,99,72,0,255,176,0,208,142,0,186,132,
            0,185,148,7,165,169,155,185,193,187,162,137,22,167,116,0,84,58,0,21,12,0,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,81,57,0,231,158,0,193,130,0,167,117,0,105,112,96,
            231,233,241,255,255,255,93,102,94,11,4,0,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,50,35,0,196,135,0,191,130,0,144,104,0,66,82,83,140,143,145,142,
            150,155,15,27,33,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,142,99,0,139,97,0,71,48,0,19,25,16,28,47,58,9,21,27,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,81,57,0,25,15,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 32, 32, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 22)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,44,97,103,72,136,151,22,69,69,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,21,68,68,88,
            149,163,165,230,255,121,183,215,119,184,215,50,106,116,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,14,61,59,69,128,134,145,203,227,182,241,255,180,242,
            255,94,154,175,143,209,250,158,228,255,75,140,155,0,21,21,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,28,60,108,57,97,151,30,80,
            113,19,73,81,63,119,123,141,194,214,187,241,255,186,241,255,175,234,255,173,235,255,78,135,153,
            126,190,227,165,234,255,159,232,255,93,162,186,1,28,28,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,49,90,138,93,132,183,74,115,146,47,94,102,73,123,128,145,194,209,
            196,243,255,199,246,255,186,237,255,180,234,255,176,234,255,172,232,255,64,121,134,120,182,220,164,
            232,255,155,225,255,158,234,255,100,172,199,3,30,30,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            39,90,126,67,113,122,58,105,106,92,141,144,166,210,222,215,254,255,217,255,255,205,250,255,201,
            248,255,197,247,255,193,246,255,187,244,255,167,228,255,39,93,99,115,179,216,166,234,255,154,224,
            255,152,223,255,154,232,255,98,171,201,0,23,23,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,37,89,98,93,141,143,154,
            193,201,204,238,252,215,248,255,201,237,255,173,216,235,149,195,212,128,176,193,110,163,175,97,151,
            162,88,142,153,80,134,144,63,119,124,21,73,72,121,183,225,166,232,255,156,225,255,152,223,255,
            148,223,255,151,231,255,89,159,186,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,14,52,52,51,100,102,106,154,156,144,182,186,149,186,190,128,167,175,103,148,
            155,94,141,149,84,132,142,81,131,142,83,133,149,82,134,153,80,134,156,75,131,156,75,132,163,
            71,131,165,71,131,165,80,140,179,135,201,253,165,231,255,158,227,255,153,224,255,148,222,255,145,
            222,255,146,228,255,69,132,153,220,220,220,220,220,220,220,220,220,8,39,39,44,88,88,85,131,
            133,136,174,179,166,196,201,170,199,203,173,202,209,180,209,218,193,222,235,202,231,247,203,235,255,
            205,238,255,204,241,255,202,241,255,196,241,255,191,238,255,186,236,255,175,232,255,166,227,255,163,
            224,255,161,223,255,159,224,255,163,227,255,158,224,255,151,217,255,151,223,255,144,220,255,143,222,
            255,135,218,255,31,83,88,220,220,220,220,220,220,14,61,60,119,162,163,255,255,255,255,255,255,
            253,255,255,254,255,255,246,255,255,238,255,255,231,255,255,225,254,255,222,252,255,216,250,255,211,
            247,255,205,246,255,202,243,255,196,242,255,193,241,255,187,237,255,184,237,255,181,237,255,180,242,
            255,130,162,238,132,172,244,140,187,253,151,216,255,152,224,255,145,220,255,149,228,255,104,179,214,
            21,70,70,220,220,220,220,220,220,220,220,220,9,44,46,99,136,144,228,242,246,255,255,255,243,
            255,255,237,255,255,234,255,255,227,253,255,224,252,255,218,250,255,215,248,255,211,246,255,205,244,
            255,201,243,255,195,241,255,191,238,255,187,238,255,186,241,255,180,237,255,136,172,243,82,84,204,
            116,144,232,146,202,255,159,231,255,151,220,255,151,227,255,135,211,254,42,100,106,0,9,9,220,
            220,220,220,220,220,220,220,220,220,220,220,1,85,40,44,94,95,167,194,202,255,255,255,244,255,
            255,234,255,255,228,253,255,224,253,255,222,250,255,216,248,255,211,247,255,205,244,255,202,243,255,
            196,241,255,194,242,255,191,243,255,129,154,234,94,103,212,103,119,220,100,116,218,131,171,243,134,
            181,247,146,205,255,141,197,255,152,227,255,62,123,143,0,28,24,220,220,220,220,220,220,220,220,
            220,220,220,220,0,75,14,19,184,21,18,143,38,20,73,71,114,152,158,237,255,255,244,255,255,
            230,254,255,225,253,255,222,250,255,217,248,255,212,247,255,209,246,255,203,243,255,201,246,255,203,
            254,255,141,166,241,71,68,195,99,110,216,175,232,255,159,210,255,100,115,218,97,112,216,130,173,
            246,159,230,255,84,143,173,16,101,55,0,38,2,220,220,220,220,220,220,220,220,220,220,220,220,
            4,140,24,26,207,23,23,199,19,10,110,33,8,61,63,77,120,128,217,242,247,243,255,255,227,
            253,255,223,252,255,218,250,255,214,247,255,209,246,255,207,248,255,191,231,255,129,148,231,97,104,
            214,90,95,210,140,173,243,112,131,224,104,122,222,98,110,216,109,133,227,165,231,255,108,171,202,
            20,81,64,19,170,26,0,80,9,220,220,220,220,220,220,220,220,220,0,60,13,18,180,23,24,
            203,23,23,191,22,9,140,18,0,82,33,11,69,60,54,101,109,201,230,236,241,255,255,224,252,
            255,218,250,255,215,247,255,212,248,255,203,242,255,138,158,235,93,99,210,128,145,231,112,129,223,
            97,105,214,64,59,191,123,153,234,163,220,255,170,232,255,126,189,220,27,83,79,17,129,24,22,
            184,19,0,99,16,220,220,220,220,220,220,220,220,220,0,97,19,23,195,23,22,194,23,22,187,
            22,21,167,20,16,159,18,20,146,30,13,75,62,46,92,100,189,220,230,238,255,255,222,250,255,
            216,248,255,215,252,255,172,199,252,118,131,223,152,180,244,151,180,243,102,113,216,87,91,207,93,
            102,212,173,230,255,183,246,255,140,202,232,34,89,90,16,120,30,18,154,16,22,186,23,0,88,
            12,220,220,220,220,220,220,220,220,220,0,118,21,24,197,22,22,186,22,21,181,21,21,176,21,
            21,173,20,20,172,18,20,144,30,17,75,64,31,81,85,161,197,205,236,255,255,220,253,255,196,
            225,255,152,174,241,124,141,227,170,203,253,97,105,214,113,130,223,100,110,216,158,201,254,190,248,
            255,149,210,237,36,87,97,11,114,38,19,158,16,20,159,18,21,199,26,0,44,3,220,220,220,
            220,220,220,220,220,220,0,123,21,24,194,22,21,180,21,21,174,21,20,171,20,20,165,20,19,
            161,19,18,159,16,21,141,30,13,73,60,29,79,80,174,211,223,231,255,255,181,204,253,176,205,
            252,163,190,247,143,166,237,114,129,223,179,222,255,171,215,255,195,252,255,155,212,237,40,94,98,
            77,118,156,38,154,79,19,182,13,23,199,21,0,134,19,220,220,220,220,220,220,220,220,220,220,
            220,220,0,116,19,24,189,22,22,176,21,21,170,20,19,164,20,19,161,19,19,154,19,20,158,
            18,11,158,18,49,121,132,33,83,100,40,92,91,193,224,243,209,236,255,214,252,255,171,199,252,
            121,135,225,159,191,248,199,250,255,201,252,255,153,207,231,38,93,93,63,112,148,156,190,255,49,
            136,120,0,148,2,0,103,38,0,3,10,220,220,220,220,220,220,220,220,220,220,220,220,0,92,
            14,23,182,23,16,171,21,19,171,20,19,158,19,18,154,18,18,148,18,20,173,18,1,129,30,
            92,148,237,97,145,231,18,71,72,71,120,122,222,254,255,194,223,255,174,203,253,156,183,244,197,
            242,255,204,252,255,123,176,194,26,80,74,54,106,144,126,173,255,131,174,255,94,152,220,37,112,
            128,0,0,109,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,51,7,20,182,23,
            0,106,24,7,140,24,21,159,18,18,151,18,18,148,18,21,173,18,0,119,26,69,129,217,113,
            162,255,58,104,167,12,64,58,144,187,197,207,234,255,202,238,255,209,250,255,211,254,255,138,189,
            205,19,73,65,38,84,120,104,145,255,108,155,255,106,159,255,120,171,255,85,118,255,0,0,80,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,8,159,18,19,136,75,16,
            124,82,18,158,13,18,149,18,18,149,18,21,158,18,6,143,16,7,94,88,80,136,253,84,119,
            255,30,67,116,41,95,89,196,234,250,220,255,255,212,253,255,122,172,183,23,74,71,44,89,152,
            83,113,255,83,108,255,82,101,255,92,138,255,92,152,255,16,31,172,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,74,7,9,122,71,10,91,101,12,170,
            10,22,163,18,18,149,18,18,146,18,20,151,18,3,140,11,7,106,80,69,129,247,71,97,242,
            18,62,79,97,145,149,211,246,255,93,143,148,17,70,64,47,101,165,81,110,255,80,105,255,79,
            103,255,72,91,255,55,103,230,54,112,184,1,23,85,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,0,13,49,1,31,140,3,121,48,9,165,11,
            18,176,12,21,176,17,22,175,18,28,205,20,4,170,3,23,105,134,85,138,255,53,103,191,29,
            81,77,51,102,102,18,71,73,50,108,187,64,126,255,49,106,222,49,97,201,49,92,202,60,106,
            193,146,176,207,215,234,248,10,34,60,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,0,0,130,36,80,203,36,122,153,14,122,84,8,
            135,43,7,145,28,6,146,23,4,131,37,46,121,190,81,138,255,78,138,255,38,92,131,16,69,
            73,38,95,167,60,114,204,97,138,189,152,180,207,193,211,223,193,212,223,241,247,248,255,255,255,
            161,187,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,0,0,148,58,99,253,82,143,255,68,128,255,54,110,
            223,48,92,203,62,94,242,79,118,255,75,133,255,80,140,255,53,113,220,51,101,152,146,174,215,
            227,235,244,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,205,224,252,18,49,88,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,0,0,47,0,0,135,37,69,215,80,142,255,85,128,255,81,108,255,
            79,106,255,75,98,255,78,110,255,64,129,253,68,115,186,197,205,247,232,228,255,227,225,255,231,
            231,255,237,237,255,248,247,255,255,255,255,184,207,243,28,68,114,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,0,0,109,3,16,166,42,79,222,70,101,255,77,105,255,82,
            106,255,80,126,255,51,106,194,167,181,232,212,209,255,196,196,255,199,197,255,204,203,255,214,210,
            255,201,204,255,116,151,214,12,49,93,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,0,0,57,0,0,106,0,0,140,4,14,171,19,39,193,27,70,
            194,109,143,209,224,216,255,210,207,255,212,209,255,209,207,255,184,193,255,115,146,215,42,87,144,
            0,19,48,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,38,0,0,57,0,0,63,40,75,124,
            121,148,211,138,158,224,123,148,214,82,118,180,28,67,114,0,17,40,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 32, 32, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    if (index == 23)
    {
        static const unsigned char data[] = 
        {
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,0,30,4,0,42,11,0,35,7,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,33,4,
            0,64,15,0,83,30,6,106,50,25,126,66,24,126,62,14,123,53,0,108,39,0,86,29,0,
            65,24,0,30,9,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,68,16,9,105,53,97,167,126,162,
            220,176,178,242,180,152,241,152,121,233,120,87,222,87,53,208,53,23,188,29,4,157,23,0,113,
            27,0,68,26,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,0,47,11,0,85,28,89,159,123,220,248,227,229,255,226,183,255,180,140,240,
            139,105,229,104,71,219,71,43,209,42,26,209,25,18,220,17,14,234,12,7,233,7,0,174,12,
            0,93,28,0,37,13,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,48,
            12,0,89,34,145,198,167,248,255,246,200,255,199,156,242,156,120,233,120,88,222,88,56,212,56,
            33,207,32,20,212,19,15,222,15,11,231,9,4,239,4,0,250,0,0,255,0,0,222,0,0,
            107,25,0,34,12,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,85,29,137,197,159,
            233,255,229,177,248,176,138,238,138,105,228,105,73,218,73,44,209,43,27,215,24,18,221,17,13,
            223,13,7,234,7,2,252,0,0,255,0,0,255,0,0,255,0,0,255,0,0,232,0,0,95,
            27,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            0,63,18,0,69,22,0,69,23,0,66,22,0,68,22,85,160,117,215,255,211,159,242,159,123,
            232,123,90,222,90,58,213,58,34,209,34,22,213,20,7,176,20,0,137,24,0,119,25,0,124,
            23,0,152,16,0,207,1,0,255,0,0,255,0,0,255,0,0,255,0,0,199,1,0,68,27,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,48,13,5,111,46,66,
            179,85,54,179,73,29,159,49,17,145,42,126,228,130,140,240,139,109,227,109,78,216,78,46,208,
            46,27,211,26,16,206,18,0,126,24,0,65,22,0,27,8,220,220,220,0,18,4,0,36,14,
            0,70,27,0,120,20,0,211,0,0,255,0,0,255,0,0,255,0,0,135,17,0,28,11,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,44,12,29,141,62,109,240,105,79,227,
            76,55,220,53,34,215,32,20,215,19,22,226,22,27,229,27,23,222,23,17,218,17,14,211,17,
            0,108,27,0,53,22,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,
            34,13,0,78,29,0,157,11,0,255,0,0,255,0,0,215,0,0,68,24,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,0,43,12,7,119,44,73,219,73,49,212,49,29,207,29,
            19,213,19,12,223,12,4,234,4,0,247,0,0,255,0,0,255,0,0,240,0,0,145,11,0,
            80,25,0,38,13,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,0,62,27,0,127,17,0,250,0,0,255,0,0,111,22,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,0,93,32,39,195,45,32,209,30,19,213,19,13,223,13,6,
            234,6,0,247,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,228,0,0,117,
            24,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            0,53,23,0,114,20,0,252,0,0,171,9,0,27,12,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,0,69,25,7,151,27,22,221,19,13,223,13,6,234,6,0,247,0,0,255,
            0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,151,15,0,22,7,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,
            48,18,0,123,16,0,178,6,0,53,16,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,0,39,12,0,110,27,13,222,13,7,238,6,0,247,0,0,255,0,0,255,0,0,255,0,
            0,255,0,0,255,0,0,255,0,0,255,0,0,187,4,0,73,24,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,50,8,0,75,
            27,0,88,19,0,74,22,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            0,77,27,0,183,13,1,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,
            255,0,0,248,0,0,151,14,0,65,24,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,0,29,1,0,73,22,34,124,76,120,180,150,170,209,190,45,126,87,
            0,69,17,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,42,14,0,
            110,24,0,250,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,187,4,0,100,
            25,0,39,16,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            0,74,23,55,139,96,180,216,199,255,255,255,255,255,255,255,255,255,238,253,244,9,104,53,0,
            35,5,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,68,27,0,135,
            14,0,255,0,0,255,0,0,247,0,0,182,5,0,109,23,0,53,22,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,57,14,30,123,73,174,215,191,255,
            255,255,255,255,255,246,255,244,231,255,231,219,255,219,222,255,219,103,185,126,0,73,22,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,53,16,0,75,27,0,127,12,
            0,137,13,0,89,23,0,47,18,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,0,79,27,78,165,109,208,255,209,219,255,216,191,253,191,176,248,
            176,165,246,165,152,242,152,141,239,141,132,238,132,119,231,119,4,113,45,0,39,9,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,0,35,6,25,119,69,0,86,43,0,54,17,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,0,74,23,75,177,99,165,252,161,144,241,141,126,233,126,116,231,116,104,227,104,94,223,94,
            84,220,84,74,218,74,63,213,63,58,220,56,20,158,40,0,70,24,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,59,146,101,167,208,188,0,83,30,0,27,2,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,98,36,
            88,222,89,85,228,80,69,216,69,60,212,60,50,211,50,42,209,42,34,209,34,27,211,27,22,
            213,22,16,219,16,12,228,11,6,222,8,0,101,27,0,25,4,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,2,96,44,247,255,248,146,205,166,0,88,33,0,38,7,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,66,22,2,123,34,19,
            187,27,17,219,17,11,226,11,8,229,8,5,234,5,2,241,2,0,248,0,0,255,0,0,255,
            0,0,255,0,0,255,0,0,150,13,0,45,18,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,0,64,17,118,197,139,222,255,215,118,201,136,2,100,42,0,53,14,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,53,17,0,80,26,9,171,
            25,14,246,12,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,
            0,255,0,0,193,2,0,65,26,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,
            29,3,24,131,64,151,246,150,150,247,147,105,215,113,17,125,50,0,74,25,0,36,11,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,0,52,18,0,114,28,29,197,33,28,212,27,
            17,218,17,6,234,6,0,252,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,
            201,0,0,74,28,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,76,
            25,66,186,81,101,233,98,91,228,89,79,222,78,33,167,49,0,110,34,0,79,27,0,56,20,
            0,40,14,0,58,22,0,87,27,0,145,22,14,219,15,12,232,11,7,234,7,4,241,4,2,
            247,2,0,253,0,0,255,0,0,135,15,0,126,18,0,150,13,0,152,12,0,114,24,0,57,
            20,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,30,6,0,107,36,
            50,206,53,48,215,46,40,208,39,37,216,34,27,209,27,13,186,22,3,166,20,0,165,19,0,
            177,15,3,218,8,4,250,2,0,253,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,
            0,0,178,4,0,67,27,0,33,12,0,35,13,0,37,15,0,34,11,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,55,17,0,123,28,18,
            215,18,16,227,14,11,227,12,8,234,7,6,246,4,3,255,1,0,255,0,0,255,0,0,255,
            0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,201,0,0,86,30,
            0,28,7,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,60,22,0,128,23,0,233,
            2,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,
            0,255,0,0,255,0,0,255,0,0,255,0,0,185,4,0,87,30,0,39,13,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,53,19,0,108,24,0,198,1,
            0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,
            255,0,0,226,0,0,137,16,0,77,30,0,30,8,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,26,7,0,68,27,0,114,22,0,
            168,8,0,209,0,0,234,0,0,250,0,0,241,0,0,219,0,0,183,4,0,134,17,0,87,
            28,0,53,22,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,24,7,0,46,19,0,71,
            25,0,84,26,0,87,25,0,85,25,0,77,26,0,60,24,0,38,14,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
            220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220
        };
        wxImage image( 32, 32, (unsigned char*)data, TRUE );
        image.SetMaskColour( 220, 220, 220);
        wxBitmap bitmap( image );
        return bitmap;
    }
    return wxNullBitmap;
}


// End of generated file
